# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@check_PROGRAMS =  \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	generic32$(EXEEXT) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	generic32mt$(EXEEXT) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	generic32-cache$(EXEEXT) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	g32_tdriver$(EXEEXT) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__EXEEXT_1)
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@generic32_DEPENDENCIES = $(Iss)/libAdlIssMain.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssExec.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssLogging.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlReaders.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlParsing.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssSupport.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlScript.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_1) \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbv.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbvRnum.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlSupport.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlLogUsage.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libgc.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libltdl.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2)
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@generic32_cache_DEPENDENCIES = $(Iss)/libAdlIssMain.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssExec.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssLogging.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlReaders.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlParsing.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssSupport.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlScript.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_1) \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbv.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbvRnum.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlSupport.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlLogUsage.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libgc.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libltdl.la \
@LANG_FRONTEND_TRUE@@LLVM_FALSE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2)

#if !CREATE_EXTERNAL_RELEASE
#SUBDIRS = scbtb
#DIST_SUBDIRS = scbtb
#else
#SUBDIRS = 
#DIST_SUBDIRS = 
#endif
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@am__append_1 = altair_r1_mt altair_r1_ut qe sc3400_arch
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@am__append_2 = 

# Place here any files which are proprietary and should *not* be distributed to
# the outside world.  You must include *all* adl files, since we ust the no_dist
# flag to shut down the automatic copying.
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@am__append_3 = \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	mt_apu.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	altivec_apu.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	fp_helpers.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	cfp_apu.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@  perfmon_apu.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@  ipc_apu.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	ps_apu.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	isel_apu.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	altair_cache.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	altair_mmu.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	altair_r1.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	altair_r1_mt.ttc \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	altair_r1_ut.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	altair_r1_mt.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	altair32-config.tcl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	altair64-config.tcl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	qe.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	common.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	bmu.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	dalu_arithmetic.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	agu_cache.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	agu_move.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	agu_loop_control.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	dalu_mac.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	dalu_barrel-shifter_dbs.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	agu_nonloop_cof.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	sc3400_arch.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	dalu_mpy.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	agu_loop_cof.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	prefix.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	agu_stack.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	agu_program_control.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	agu_arithmetic_aau.adl \
@CREATE_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	dalu_logical_bfu.adl

subdir = designs
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/macros/bison.m4 \
	$(top_srcdir)/macros/boost.m4 \
	$(top_srcdir)/macros/cpp-setup.m4 $(top_srcdir)/macros/flex.m4 \
	$(top_srcdir)/macros/general.m4 \
	$(top_srcdir)/macros/libtool.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 \
	$(top_srcdir)/macros/lz4.m4 $(top_srcdir)/macros/plasma.m4 \
	$(top_srcdir)/macros/prefix.m4 $(top_srcdir)/macros/rnumber.m4 \
	$(top_srcdir)/macros/runsim.m4 $(top_srcdir)/macros/systemc.m4 \
	$(top_srcdir)/macros/tcl.m4 $(top_srcdir)/macros/usagelog.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/adl_config_internal.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@am__EXEEXT_1 = altair_r1_mt$(EXEEXT) \
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	altair_r1_ut$(EXEEXT) \
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	qe$(EXEEXT) \
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	sc3400_arch$(EXEEXT)
altair_r1_mt_OBJECTS = $(nodist_altair_r1_mt_OBJECTS)
altair_r1_mt_LDADD = $(LDADD)
@LANG_FRONTEND_TRUE@@LLVM_TRUE@@MINIMAL_BUILD_FALSE@am__DEPENDENCIES_1 = $(JIT_LIBS)
am__DEPENDENCIES_2 =
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@altair_r1_mt_DEPENDENCIES = $(Iss)/libAdlIssMain.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssExec.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssLogging.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlReaders.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlParsing.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlScript.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_1) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbv.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbvRnum.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlLogUsage.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libgc.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libltdl.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
altair_r1_ut_OBJECTS = $(nodist_altair_r1_ut_OBJECTS)
altair_r1_ut_LDADD = $(LDADD)
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@altair_r1_ut_DEPENDENCIES = $(Iss)/libAdlIssMain.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssExec.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssLogging.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlReaders.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlParsing.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlScript.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_1) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbv.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbvRnum.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlLogUsage.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libgc.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libltdl.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2)
am__g32_tdriver_SOURCES_DIST = tdriver.C
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@am_g32_tdriver_OBJECTS = g32_tdriver-tdriver.$(OBJEXT)
g32_tdriver_OBJECTS = $(am_g32_tdriver_OBJECTS)
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@am__DEPENDENCIES_3 = $(Iss)/libAdlIssMain.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssExec.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssTransLogging.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlReaders.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlParsing.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlScript.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbv.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbvRnum.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlLogUsage.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libltdl.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libgc.la
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@g32_tdriver_DEPENDENCIES = $(am__DEPENDENCIES_3)
g32_tdriver_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(g32_tdriver_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@nodist_generic32_OBJECTS =  \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	generic32.$(OBJEXT)
generic32_OBJECTS = $(nodist_generic32_OBJECTS)
generic32_LDADD = $(LDADD)
generic32_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(generic32_LDFLAGS) $(LDFLAGS) -o $@
am__generic32_cache_SOURCES_DIST = generic32-cache.adl
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@am_generic32_cache_OBJECTS = generic32-cache.$(OBJEXT)
generic32_cache_OBJECTS = $(am_generic32_cache_OBJECTS)
generic32_cache_LDADD = $(LDADD)
generic32_cache_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(generic32_cache_LDFLAGS) \
	$(LDFLAGS) -o $@
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@nodist_generic32mt_OBJECTS = generic32mt.$(OBJEXT)
generic32mt_OBJECTS = $(nodist_generic32mt_OBJECTS)
generic32mt_LDADD = $(LDADD)
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@generic32mt_DEPENDENCIES = $(Iss)/libAdlIssMain.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssExec.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssLogging.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlReaders.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlParsing.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlScript.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_1) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbv.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbvRnum.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlLogUsage.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libgc.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libltdl.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2)
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@nodist_qe_OBJECTS = qe.$(OBJEXT)
qe_OBJECTS = $(nodist_qe_OBJECTS)
qe_LDADD = $(LDADD)
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@qe_DEPENDENCIES = $(Iss)/libAdlIssMain.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssExec.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssLogging.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlReaders.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlParsing.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlScript.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_1) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbv.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbvRnum.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlLogUsage.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libgc.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libltdl.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2)
sc3400_arch_OBJECTS = $(nodist_sc3400_arch_OBJECTS)
sc3400_arch_LDADD = $(LDADD)
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@sc3400_arch_DEPENDENCIES = $(Iss)/libAdlIssMain.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssExec.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssLogging.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlReaders.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlParsing.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlScript.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_1) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbv.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libIntbvRnum.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlLogUsage.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libgc.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libltdl.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__DEPENDENCIES_2)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(nodist_altair_r1_mt_SOURCES) \
	$(nodist_altair_r1_ut_SOURCES) $(g32_tdriver_SOURCES) \
	$(nodist_generic32_SOURCES) $(generic32_cache_SOURCES) \
	$(nodist_generic32mt_SOURCES) $(nodist_qe_SOURCES) \
	$(nodist_sc3400_arch_SOURCES)
DIST_SOURCES = $(am__g32_tdriver_SOURCES_DIST) \
	$(am__generic32_cache_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ADL_JIT = @ADL_JIT@
ADL_SO_CFLAGS = @ADL_SO_CFLAGS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AR_FLAGS = @AR_FLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
AdlStyle = @AdlStyle@
BCDIR = @BCDIR@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_VERSION = @BOOST_VERSION@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONVERT = @CONVERT@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPROG = @CPROG@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXPROG = @CXXPROG@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DTASM_DIR = @DTASM_DIR@
DTASM_EXISTS = @DTASM_EXISTS@
DTASM_PATH = @DTASM_PATH@
DUMPBIN = @DUMPBIN@
DYNEXPORT = @DYNEXPORT@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EFENCE = @EFENCE@
EGREP = @EGREP@
EPS2PDF = @EPS2PDF@
EXEEXT = @EXEEXT@
EXTERNAL_RELEASE_FLAG = @EXTERNAL_RELEASE_FLAG@
EXTRA_CFLAGS = @EXTRA_CFLAGS@
FGREP = @FGREP@
FIG2DEV = @FIG2DEV@
FOP = @FOP@
GCC_MAJOR = @GCC_MAJOR@
GCC_MINOR = @GCC_MINOR@
GCC_VERSION = @GCC_VERSION@
GDB_TESTS = @GDB_TESTS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
InfoHome = @InfoHome@
JITFLAGS = @JITFLAGS@
JIT_CCFLAGS = @JIT_CCFLAGS@
JIT_OK = @JIT_OK@
LANG_FRONTEND = @LANG_FRONTEND@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_CFLAGS = @LEX_CFLAGS@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LOG_USAGE = @LOG_USAGE@
LTLIBOBJS = @LTLIBOBJS@
LZ4 = @LZ4@
LZ4_CFLAGS = @LZ4_CFLAGS@
LZ4_EXISTS = @LZ4_EXISTS@
LZ4_LDFLAGS = @LZ4_LDFLAGS@
LZ4_LTLIBS = @LZ4_LTLIBS@
LZ4_STATIC_LDFLAGS = @LZ4_STATIC_LDFLAGS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MINGW = @MINGW@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OCC = @OCC@
OPT_ENABLED = @OPT_ENABLED@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
OssUrl = @OssUrl@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PLASMA = @PLASMA@
PLASMA_CFLAGS = @PLASMA_CFLAGS@
PLASMA_LIBS = @PLASMA_LIBS@
PLASMA_LIB_PATHS = @PLASMA_LIB_PATHS@
PLASMA_LTLIBS = @PLASMA_LTLIBS@
PLASMA_PATH = @PLASMA_PATH@
PREST = @PREST@
PlasmaConfig = @PlasmaConfig@
RANLIB = @RANLIB@
READLINK = @READLINK@
RFLAG = @RFLAG@
RNUMBER_BL_LIB_LIB = @RNUMBER_BL_LIB_LIB@
RNUMBER_BL_LIB_PATH = @RNUMBER_BL_LIB_PATH@
RNUMBER_CFLAGS = @RNUMBER_CFLAGS@
RNUMBER_CONFIG = @RNUMBER_CONFIG@
RNUMBER_DEPEND = @RNUMBER_DEPEND@
RNUMBER_HELPERS = @RNUMBER_HELPERS@
RNUMBER_LIBS = @RNUMBER_LIBS@
RNUMBER_LIBS_ONLY = @RNUMBER_LIBS_ONLY@
RNUMBER_LIB_PATHS = @RNUMBER_LIB_PATHS@
RNUMBER_LTLIBS = @RNUMBER_LTLIBS@
RNUMBER_STATIC_LIBS = @RNUMBER_STATIC_LIBS@
RNV = @RNV@
RUNSIM_DIR = @RUNSIM_DIR@
RUNSIM_EXISTS = @RUNSIM_EXISTS@
RUNSIM_PATH = @RUNSIM_PATH@
RelDir = @RelDir@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SWIG = @SWIG@
SYSTEMC_CFLAGS = @SYSTEMC_CFLAGS@
SYSTEMC_EXISTS = @SYSTEMC_EXISTS@
SYSTEMC_INCLUDE_DIR = @SYSTEMC_INCLUDE_DIR@
SYSTEMC_LIBS = @SYSTEMC_LIBS@
SYSTEMC_LIB_DIR = @SYSTEMC_LIB_DIR@
TCLSH = @TCLSH@
TCL_INC_PATHS = @TCL_INC_PATHS@
TCL_LIBS = @TCL_LIBS@
TCL_LIB_PATHS = @TCL_LIB_PATHS@
TCL_STATIC_LIBS = @TCL_STATIC_LIBS@
TCL_VERSION = @TCL_VERSION@
USAGE_LOG_PORT = @USAGE_LOG_PORT@
USAGE_LOG_SERVER = @USAGE_LOG_SERVER@
VERSION = @VERSION@
WISH = @WISH@
WebDir = @WebDir@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
adl_top_srcdir = @adl_top_srcdir@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
archsuffix = @archsuffix@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
so_support = @so_support@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = foreign
ADLCOMP = $(AM_V_GEN) $(Iss)/make-iss  $< -o $@ $($(patsubst %.cc,%_ADLFLAGS,$(subst -,_,$(@)))) --no-warn-redefine
PlasmaFlags = $(PLASMA_CFLAGS)
PlasmaLibs = $(PLASMA_LTLIBS)
PlasmaPfx = $(PLASMA_PATH)/lib
Helpers = $(top_builddir)/helpers
Iss = $(top_builddir)/iss
Designs = $(top_srcdir)/designs
TestsIss = $(top_srcdir)/tests/iss
MakeIss = $(Iss)/make-iss
CLANG = $(LLVM_BINDIR)/clang++
EXTRACT = $(Iss)/adl-llvm-extract
AM_CPPFLAGS = -I$(top_srcdir) $(RNUMBER_CFLAGS)

# Note:  We use .cc as an extension for generated models so
# that we can remove them all using a pattern.  Files with .C
# extensions should be original files, not generated.
CLEANFILES = *.cc *.cc.h
ADLFLAGS = 

# We override the default to add on per-compilation flags using the ADLCXXFLAGS
# suffix.  This allows us to do per-file compilation flags for ADL files without
# confusing automake.
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$($(patsubst %.o,%_ADLCXXFLAGS,$(subst -,_,$(@))))

OccFlags = $(PLASMA_CFLAGS)

# Place here any files to be distributed in all cases.
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@EXTRA_DIST = power.adl \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	generic32.adl \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	generic32mt.adl \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	generic32-trans.ttc \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	generic32-config.tcl \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__append_3)
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@BUILT_SOURCES =  \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	generic32.cc.h \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(am__append_2)
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@BC_INCLUDES = -I$(top_srcdir) -I$(top_builddir) $(RNUMBER_CFLAGS)
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@basic_dependencies = $(Iss)/libAdlIssExec.la $(Iss)/libAdlIssMain.la				\
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@										 $(Iss)/libAdlIssLogging.la $(Iss)/libAdlReaders.la			\
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@										 $(Iss)/libAdlParsing.la $(Iss)/libAdlIssSupport.la			\
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@										 $(Iss)/libAdlScript.la $(Helpers)/libIntbv.la					\
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@										 $(Helpers)/libIntbvRnum.la $(Helpers)/libAdlSupport.la	\
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@										 $(Helpers)/libAdlLogUsage.la

@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@nodist_generic32_SOURCES = \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	generic32.cc

@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@generic32_ADLFLAGS = --no-line-directives $(ADL_JIT) --decode-cache --no-td-api
@LANG_FRONTEND_TRUE@@LLVM_TRUE@@MINIMAL_BUILD_FALSE@generic32_DEPENDENCIES = $(BCDIR)/generic32.bc $(JIT_LIBS) $(basic_dependencies)
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@generic32_LDFLAGS = -export-dynamic
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@nodist_generic32mt_SOURCES = \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	generic32mt.cc

@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@generic32mt_ADLFLAGS = --no-line-directives --decode-cache --mt-support
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@generic32_cache_SOURCES = \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	generic32-cache.adl

@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@generic32_cache_ADLFLAGS = --no-line-directives $(ADL_JIT) --decode-cache --no-td-api
@LANG_FRONTEND_TRUE@@LLVM_TRUE@@MINIMAL_BUILD_FALSE@generic32_cache_DEPENDENCIES = $(BCDIR)/generic32-cache.bc $(JIT_LIBS) $(basic_dependencies)
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@generic32_cache_LDFLAGS = -export-dynamic
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@g32_tdriver_SOURCES = tdriver.C
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@g32_tdriver_CXXFLAGS = $(CXXFLAGS) -DMTYPE=powerpc -DMODEL='"generic32.cc.h"' -DMNAME='"powerpc"'
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@g32_tdriver_LDADD = $(transactional_iss_libraries)

# QuickEngine core.
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@nodist_qe_SOURCES = \
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	qe.adl


# StarCore SC3400.  Generated as 3 implementation files, plus we use the "low memory" feature, which shrinks the
# size of the decode tree.
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@nodist_sc3400_arch_SOURCES = \
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	sc3400_arch.adl

@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@sc3400_arch_ADLFLAGS = --jobs=3 --low-mem
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@nodist_sc3400_arch_OBJECTS = sc3400_arch.$(OBJEXT) sc3400_arch-0.$(OBJEXT) sc3400_arch-1.$(OBJEXT) sc3400_arch-2.$(OBJEXT)

# Single-threaded Altair, generated using 3 implementation files.
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@nodist_altair_r1_ut_SOURCES = \
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	altair_r1_ut.adl 

@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@altair_r1_ut_ADLFLAGS = --jobs=3
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@nodist_altair_r1_ut_OBJECTS = altair_r1_ut.$(OBJEXT) altair_r1_ut-0.$(OBJEXT) altair_r1_ut-1.$(OBJEXT) altair_r1_ut-2.$(OBJEXT)

# Multi-threaded Altair.
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@nodist_altair_r1_mt_SOURCES = \
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	altair_r1_mt.adl

@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@altair_r1_mt_ADLFLAGS = --jobs=3 --config=$(Designs)/altair_r1_mt.ttc
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@nodist_altair_r1_mt_OBJECTS = altair_r1_mt.$(OBJEXT) altair_r1_mt-0.$(OBJEXT) altair_r1_mt-1.$(OBJEXT) altair_r1_mt-2.$(OBJEXT)
@LANG_FRONTEND_TRUE@@LLVM_TRUE@@MINIMAL_BUILD_FALSE@JIT_LIBS = $(Iss)/libAdlIssJitSupport.la
#JIT_LDADD = $(JIT_LIBS)  -lboost_thread -lboost_system -lboost_regex $(LLVM_LDFLAGS) $(LLVM_LIBS) $(BOOST_LDFLAGS)
@LANG_FRONTEND_TRUE@@LLVM_TRUE@@MINIMAL_BUILD_FALSE@JIT_LDADD = $(JIT_LIBS) $(LLVM_LDFLAGS) $(LLVM_LIBS)
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@LDADD = \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssMain.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssExec.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssLogging.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlReaders.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlParsing.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlIssSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Iss)/libAdlScript.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(JIT_LDADD) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@  $(Helpers)/libIntbv.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@  $(Helpers)/libIntbvRnum.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(Helpers)/libAdlLogUsage.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(TCL_LIB_PATHS) $(TCL_LIBS) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libgc.la -ldl \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(RNUMBER_LIBS) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(LZ4_LTLIBS) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(PlasmaPfx)/libltdl.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@  $(BOOST_LDFLAGS) -lboost_thread -lboost_system -lboost_regex -lboost_atomic -lboost_iostreams -lrt -lpthread

@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@transactional_iss_libraries = \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@    $(Iss)/libAdlIssMain.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@    $(Iss)/libAdlIssExec.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@    $(Iss)/libAdlIssTransLogging.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@    $(Iss)/libAdlReaders.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@    $(Iss)/libAdlParsing.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@    $(Iss)/libAdlIssSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@    $(Iss)/libAdlScript.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@    $(Helpers)/libIntbv.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@    $(Helpers)/libIntbvRnum.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@    $(Helpers)/libAdlSupport.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@		$(Helpers)/libAdlLogUsage.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@		$(TCL_LIB_PATHS) $(TCL_LIBS) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@		$(RNUMBER_LIBS) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@		$(LZ4_LTLIBS) \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	 	$(PlasmaPfx)/libltdl.la \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@		$(BOOST_LDFLAGS) -lboost_thread -lboost_system -lboost_regex -lboost_atomic -lboost_context -lboost_iostreams -lrt \
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@    $(PlasmaPfx)/libgc.la -ldl

@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@LINK = $(LIBTOOL) --mode=link $(CXX) -o $@
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@MakeTdriver = $(AM_V_GEN) $(MakeIss) --config=$(srcdir)/$*-trans.ttc --transactional-iss $< -o=$@ $(ADLFLAGS)
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@ADL2ISS = $(top_builddir)/scripts/adl2iss --prefix=$(top_builddir) $< --output=$@  --no-warn-redefine
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .C .adl .cc .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign designs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign designs/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

altair_r1_mt$(EXEEXT): $(altair_r1_mt_OBJECTS) $(altair_r1_mt_DEPENDENCIES) $(EXTRA_altair_r1_mt_DEPENDENCIES) 
	@rm -f altair_r1_mt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(altair_r1_mt_OBJECTS) $(altair_r1_mt_LDADD) $(LIBS)

altair_r1_ut$(EXEEXT): $(altair_r1_ut_OBJECTS) $(altair_r1_ut_DEPENDENCIES) $(EXTRA_altair_r1_ut_DEPENDENCIES) 
	@rm -f altair_r1_ut$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(altair_r1_ut_OBJECTS) $(altair_r1_ut_LDADD) $(LIBS)

g32_tdriver$(EXEEXT): $(g32_tdriver_OBJECTS) $(g32_tdriver_DEPENDENCIES) $(EXTRA_g32_tdriver_DEPENDENCIES) 
	@rm -f g32_tdriver$(EXEEXT)
	$(AM_V_CXXLD)$(g32_tdriver_LINK) $(g32_tdriver_OBJECTS) $(g32_tdriver_LDADD) $(LIBS)

generic32$(EXEEXT): $(generic32_OBJECTS) $(generic32_DEPENDENCIES) $(EXTRA_generic32_DEPENDENCIES) 
	@rm -f generic32$(EXEEXT)
	$(AM_V_CXXLD)$(generic32_LINK) $(generic32_OBJECTS) $(generic32_LDADD) $(LIBS)

generic32-cache$(EXEEXT): $(generic32_cache_OBJECTS) $(generic32_cache_DEPENDENCIES) $(EXTRA_generic32_cache_DEPENDENCIES) 
	@rm -f generic32-cache$(EXEEXT)
	$(AM_V_CXXLD)$(generic32_cache_LINK) $(generic32_cache_OBJECTS) $(generic32_cache_LDADD) $(LIBS)

generic32mt$(EXEEXT): $(generic32mt_OBJECTS) $(generic32mt_DEPENDENCIES) $(EXTRA_generic32mt_DEPENDENCIES) 
	@rm -f generic32mt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(generic32mt_OBJECTS) $(generic32mt_LDADD) $(LIBS)

qe$(EXEEXT): $(qe_OBJECTS) $(qe_DEPENDENCIES) $(EXTRA_qe_DEPENDENCIES) 
	@rm -f qe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(qe_OBJECTS) $(qe_LDADD) $(LIBS)

sc3400_arch$(EXEEXT): $(sc3400_arch_OBJECTS) $(sc3400_arch_DEPENDENCIES) $(EXTRA_sc3400_arch_DEPENDENCIES) 
	@rm -f sc3400_arch$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sc3400_arch_OBJECTS) $(sc3400_arch_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/altair_r1_mt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/altair_r1_ut.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/g32_tdriver-tdriver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generic32-cache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generic32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generic32mt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sc3400_arch.Po@am__quote@

.C.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.C.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

g32_tdriver-tdriver.o: tdriver.C
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g32_tdriver_CXXFLAGS) $(CXXFLAGS) -MT g32_tdriver-tdriver.o -MD -MP -MF $(DEPDIR)/g32_tdriver-tdriver.Tpo -c -o g32_tdriver-tdriver.o `test -f 'tdriver.C' || echo '$(srcdir)/'`tdriver.C
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/g32_tdriver-tdriver.Tpo $(DEPDIR)/g32_tdriver-tdriver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tdriver.C' object='g32_tdriver-tdriver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g32_tdriver_CXXFLAGS) $(CXXFLAGS) -c -o g32_tdriver-tdriver.o `test -f 'tdriver.C' || echo '$(srcdir)/'`tdriver.C

g32_tdriver-tdriver.obj: tdriver.C
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g32_tdriver_CXXFLAGS) $(CXXFLAGS) -MT g32_tdriver-tdriver.obj -MD -MP -MF $(DEPDIR)/g32_tdriver-tdriver.Tpo -c -o g32_tdriver-tdriver.obj `if test -f 'tdriver.C'; then $(CYGPATH_W) 'tdriver.C'; else $(CYGPATH_W) '$(srcdir)/tdriver.C'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/g32_tdriver-tdriver.Tpo $(DEPDIR)/g32_tdriver-tdriver.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tdriver.C' object='g32_tdriver-tdriver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g32_tdriver_CXXFLAGS) $(CXXFLAGS) -c -o g32_tdriver-tdriver.obj `if test -f 'tdriver.C'; then $(CYGPATH_W) 'tdriver.C'; else $(CYGPATH_W) '$(srcdir)/tdriver.C'; fi`

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
@CREATE_EXTERNAL_RELEASE_FALSE@dist-hook:
@LANG_FRONTEND_FALSE@dist-hook:
@MINIMAL_BUILD_TRUE@dist-hook:

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am dist-hook distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@generic32.cc: generic32.adl $(MakeIss) power.adl
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@$(BCDIR)/generic.bc: generic32.cc

@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@generic32mt.cc: generic32mt.adl $(MakeIss) generic32.adl power.adl

@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@generic32-cache.cc: generic32-cache.adl $(Iss)/make-iss power.adl
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@$(BCDIR)/generic32-cache.bc: generic32-cache.cc

@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@generic32.cc.h: generic32.adl $(Iss)/make-iss generic32.adl generic32.adl power.adl generic32-trans.ttc

# Use this to properly create the dependencies for the generated C++ files created by a multi-file compile job.
# Use within a foreach loop, where you loop over job numbers, e.g. "0 1 2".
# arg1:  The base name, e.g. altair_r1_ut
# arg2:  The job number, e.g. 0
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@define MultiFile
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@$(1)-$(2).cc: $(1).cc
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@$(1)-$(2).$(OBJEXT): $(1)-$(2).cc
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@$(1)-$(2).$(OBJEXT): $(1).cc
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@endef

@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@altair_r1_mt.cc: altair_r1_mt.adl $(Iss)/make-iss isel_apu.adl power.adl \
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@                 altivec_apu.adl fp_helpers.adl cfp_apu.adl altair_mmu.adl \
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@                 altair_cache.adl mt_apu.adl ps_apu.adl altair_r1.adl altair_r1_mt.ttc
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@$(foreach xx,0 1 2,$(eval $(call MultiFile,altair_r1_mt,$(xx))))

@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@altair_r1_ut.cc: altair_r1_ut.adl $(Iss)/make-iss isel_apu.adl power.adl altivec_apu.adl \
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@                 fp_helpers.adl cfp_apu.adl altair_mmu.adl altair_cache.adl altair_r1.adl
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@$(foreach xx,0 1 2,$(eval $(call MultiFile,altair_r1_ut,$(xx))))

@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@qe.cc: qe.adl $(Iss)/make-iss 

@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@sc3400_arch.cc: sc3400_arch.adl dalu_arithmetic.adl dalu_mac.adl dalu_mpy.adl dalu_barrel-shifter_dbs.adl dalu_logical_bfu.adl \
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@				agu_arithmetic_aau.adl agu_cache.adl agu_loop_control.adl agu_move.adl agu_nonloop_cof.adl agu_program_control.adl \
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@				agu_stack.adl bmu.adl $(Iss)/make-iss 
@IS_EXTERNAL_RELEASE_FALSE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@$(foreach xx,0 1 2,$(eval $(call MultiFile,sc3400_arch,$(xx))))

# For external releases, we create a dummy file which identifies this as such.
@CREATE_EXTERNAL_RELEASE_TRUE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@dist-hook:
@CREATE_EXTERNAL_RELEASE_TRUE@@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	touch $(distdir)/$(EXTERNAL_RELEASE_FLAG)

@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@.adl.cc:
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(ADLCOMP)

@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@tdriver.C: $(TestsIss)/tdriver.C
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	ln -s $(TestsIss)/tdriver.C $@

@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@%.cc.h : %.adl ;
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(MakeTdriver)

@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@$(BCDIR)/%.bc : %.cc ;
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	@mkdir -p $(BCDIR)
@LANG_FRONTEND_TRUE@@MINIMAL_BUILD_FALSE@	$(ADL2ISS) $(ADLFLAGS) --jit --jit-compile-only $<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
