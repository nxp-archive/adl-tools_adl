

CORE n=:P

= asm

 lwz  r2,0x1000(0)
 addi r10,r10,0x100
 add  r3,r2,r1
 subic. r5,r5,2
 stw  r3,0(r4)
 stw  r3,0(r6) # Note:  Should wraparound on 32-bit boundary.
 lhz  r7,0x1004(r0)
 lbz  r8,0x1005(r0)
 stb  r8,0x2004(r0)
 sth  r7,0x2008(r0)

= /asm

= mdopts

 instr-offset: 0x100

= /mdopts

# <GEN>
MD n=Mem ra=0x00000100 d=0x80401000	#	lwz  r2,0x1000(0)
MD n=Mem ra=0x00000104 d=0x394A0100	#	addi r10,r10,0x100
MD n=Mem ra=0x00000108 d=0x7C620A14	#	add  r3,r2,r1
MD n=Mem ra=0x0000010c d=0x34A5FFFE	#	subic. r5,r5,2
MD n=Mem ra=0x00000110 d=0x90640000	#	stw  r3,0(r4)
MD n=Mem ra=0x00000114 d=0x90660000	#	stw  r3,0(r6) # Note:  Should wraparound on 32-bit boundary.
MD n=Mem ra=0x00000118 d=0xA0E01004	#	lhz  r7,0x1004(r0)
MD n=Mem ra=0x0000011c d=0x89001005	#	lbz  r8,0x1005(r0)
MD n=Mem ra=0x00000120 d=0x99002004	#	stb  r8,0x2004(r0)
MD n=Mem ra=0x00000124 d=0xB0E02008	#	sth  r7,0x2008(r0)
# </GEN>

RD n=NIA d=0x0100
RD n=GPR i=1 d=0x2fff
RD n=GPR i=4 d=0x2000
RD n=GPR i=6 d=0xfffffffe

MD n=Mem ra=0x1000 d=0xdeadbeef
MD n=Mem ra=0x1004 d=0x12345678
MD n=Mem ra=0x2000 d=0x00000000
MD n=Mem ra=0xfffffffc d=0
MD n=Mem ra=0x00000000 d=0

RESULTS

RD n=GPR i=2 d=0xdeadbeef
RD n=GPR i=3 d=0xdeadeeee
RD n=GPR i=5 d=0xfffffffe
RD n=GPR i=7 d=0x00001234
RD n=GPR i=8 d=0x00000034
RD n=GPR i=10 d=0x100

MD n=Mem ra=0x00001000 d=0xdeadbeef
MD n=Mem ra=0x00002000 d=0xdeadeeee
MD n=Mem ra=0x00002004 d=0x34000000
MD n=Mem ra=0x00002008 d=0x12340000
MD n=Mem ra=0xfffffffc d=0x0000dead
MD n=Mem ra=0x00000000 d=0xeeee0000


