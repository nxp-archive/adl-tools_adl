#
# This checks for a particular situation, in which we exceed our time quanta
# with the decode cache, and the next instruction has a breakpoint on it.  We
# want to make sure that we detect the breakpoint even though we're handling a
# time-quanta exceeded situation.
#
= asm

		addi r1,r1,1
		bl L1
		addi r4,r4,4
		.long 0x0		
L1:
		addi r2,r2,2
		addi r3,r3,3
		blr

= /asm

# <GEN>
MD n=Mem ra=0x00000000 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000004 d=0x4800000D	#	bl L1
MD n=Mem ra=0x00000008 d=0x38840004	#	addi r4,r4,4
MD n=Mem ra=0x0000000c d=0x00000000	#	.long 0x0		
MD n=Mem ra=0x00000010 d=0x38420002	#	addi r2,r2,2
MD n=Mem ra=0x00000014 d=0x38630003	#	addi r3,r3,3
MD n=Mem ra=0x00000018 d=0x4E800020	#	blr
# </GEN>

CORE n=:P

RD n=NIA   d=0x0

BP ea=0x8

RESULTS

RD n=GPR i=1  d=1
RD n=GPR i=2  d=2
RD n=GPR i=3  d=3
RD n=GPR i=4  d=4

# This only occurs because the driver sets it when it detects a breakpoint.
RD n=GPR i=10 d=1
