#
# Example program using decorated loads and stores.  A tcl script
# implements the side-effects which would be generated by the memory 
# controller.
#
= asm

  lwdx  r1,r0,r2
  addi  r2,r2,4
  stwdx r1,r0,r2

= /asm

= aopts
  -mregnames -me500mc
= /aopts

# <GEN>
MD n=Mem ra=0x00000000 d=0x7C201486	#	lwdx  r1,r0,r2
MD n=Mem ra=0x00000004 d=0x38420004	#	addi  r2,r2,4
MD n=Mem ra=0x00000008 d=0x7C201586	#	stwdx r1,r0,r2
# </GEN>

RD n=NIA        d=0x00000000
RD n=GPR i=0    d=0x00000002
RD n=GPR i=2    d=0x00001000

MD n=Mem ra=0x1000 d=0x00000000 
MD n=Mem ra=0x1004 d=0x00000000 

CORE n=:P

TRACE

I ea=0x0 id=1
A l=0 m="TlbCam miss."
A l=1 m="Translated using tlb 0 at -1,-1"
M n=Mem t=ifetch ea=0x0 ra=0x0 d=0x7c201486
INSTR op=0x7c201486					asm="lwdx r1,r0,r2"
D n=Mem t=read ea=0x1000 nb=4
M n=Mem t=read ea=0x1000 ra=0x1000 d=0x00000001
R n=GPR i=1 d=0x00000001
R n=Decoration d=0x00000000
A l=0 m="TlbCam miss."
A l=1 m="Translated using tlb 0 at -1,-1"
A l=0 m="Pre-read to 0x1000"
A l=1 m="Decorated load of 1 at 0x1000"
A l=0 m="Post-read to 0x1000"

I ea=0x4 id=2
M n=Mem t=ifetch ea=0x4 ra=0x4 d=0x38420004
INSTR op=0x38420004					asm="addi r2,r2,4"
R n=GPR i=2 d=0x00001004

I ea=0x8 id=3
A l=1 m="Translated using tlb 0 at -1,-1"
M n=Mem t=ifetch ea=0x8 ra=0x8 d=0x7c201586
INSTR op=0x7c201586					asm="stwdx r1,r0,r2"
D n=Mem t=write ea=0x1004 nb=4
M n=Mem t=write ea=0x1004 ra=0x1004 d=0x00000001
A l=0 m="TlbCam miss."
A l=1 m="Translated using tlb 0 at -1,-1"
A l=0 m="Aligned write to 0x1004"
A l=1 m="Decorated store of 2 at 0x1004"
A l=0 m="Post-write to 0x1004"

I ea=0xc id=4
M n=Mem t=ifetch ea=0xc ra=0xc d=0x00000000
INSTR op=0x00000000					asm="halt "

RESULTS

RD n=GPR i=0 d=0x00000002
RD n=GPR i=1 d=0x00000001
RD n=GPR i=2 d=0x00001004

MD n=Mem ra=0x0000000000001000 d=0x00000001	#	(1)
MD n=Mem ra=0x0000000000001004 d=0x00000002	#	(2)
