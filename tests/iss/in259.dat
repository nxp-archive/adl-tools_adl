#
# Simple test of MP for JITs.  Each core only makes progress if it sees an
# incremented value from the other core, 
#
= asm

	L1: 
			addi r1,r1,1        # Proc1 producer value is in r1.
			stw  r1,0x1000(r0)  # Proc1 -> Proc2 via 0x1000
	L2:
			lwz r3,0x100c(r0)
			cmpwi r3,0
			bne L3
			lwz r2,0x1008(r0)  # Proc1 temp value is in r2.
			cmp 0,r2,r10   		 # Proc1 consumed value is in r10.
			ble L2
			mr r10,r2
			nop
			nop
			nop
			bdnz L1
	L3:
			addi r20,r20,1
			stw r20,0x1004(r0) # Proc1 -> Proc2 done flag.
			.long 0x0
			.long 0x0
			.long 0x0
			.long 0x0
			.long 0x0
	L4: 
			addi r1,r1,2			# Proc2 producer value is in r1.
			stw r1,0x1008(r0) # Proc2 -> Proc1 via 0x1004
	L5:
			lwz r3,0x1004(r0)
			cmpwi r3,0
			bne L6
			lwz r2,0x1000(r0) # Proc2 temp value is in r2.
			cmp 0,r2,r10   		# Proc2 consumed value is in r10.
			ble L5
			mr r10,r2
			nop
			nop
			nop
			nop
			nop
			nop
			bdnz L4
  L6:
			addi r20,r20,1
			stw r20,0x100c(r0) # Proc2 -> Proc1 done flag.
			.long 0x0
			
= /asm

#
# <GEN>
MD n=Mem ra=0x00000000 d=0x38210001	#	addi r1,r1,1        # Proc1 producer value is in r1.
MD n=Mem ra=0x00000004 d=0x90201000	#	stw  r1,0x1000(r0)  # Proc1 -> Proc2 via 0x1000
MD n=Mem ra=0x00000008 d=0x8060100C	#	lwz r3,0x100c(r0)
MD n=Mem ra=0x0000000c d=0x2C030000	#	cmpwi r3,0
MD n=Mem ra=0x00000010 d=0x40820024	#	bne L3
MD n=Mem ra=0x00000014 d=0x80401008	#	lwz r2,0x1008(r0)  # Proc1 temp value is in r2.
MD n=Mem ra=0x00000018 d=0x7C025000	#	cmp 0,r2,r10   		 # Proc1 consumed value is in r10.
MD n=Mem ra=0x0000001c d=0x4081FFEC	#	ble L2
MD n=Mem ra=0x00000020 d=0x7C4A1378	#	mr r10,r2
MD n=Mem ra=0x00000024 d=0x60000000	#	nop
MD n=Mem ra=0x00000028 d=0x60000000	#	nop
MD n=Mem ra=0x0000002c d=0x60000000	#	nop
MD n=Mem ra=0x00000030 d=0x4200FFD0	#	bdnz L1
MD n=Mem ra=0x00000034 d=0x3A940001	#	addi r20,r20,1
MD n=Mem ra=0x00000038 d=0x92801004	#	stw r20,0x1004(r0) # Proc1 -> Proc2 done flag.
MD n=Mem ra=0x0000003c d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000040 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000044 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000048 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x0000004c d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000050 d=0x38210002	#	addi r1,r1,2			# Proc2 producer value is in r1.
MD n=Mem ra=0x00000054 d=0x90201008	#	stw r1,0x1008(r0) # Proc2 -> Proc1 via 0x1004
MD n=Mem ra=0x00000058 d=0x80601004	#	lwz r3,0x1004(r0)
MD n=Mem ra=0x0000005c d=0x2C030000	#	cmpwi r3,0
MD n=Mem ra=0x00000060 d=0x40820030	#	bne L6
MD n=Mem ra=0x00000064 d=0x80401000	#	lwz r2,0x1000(r0) # Proc2 temp value is in r2.
MD n=Mem ra=0x00000068 d=0x7C025000	#	cmp 0,r2,r10   		# Proc2 consumed value is in r10.
MD n=Mem ra=0x0000006c d=0x4081FFEC	#	ble L5
MD n=Mem ra=0x00000070 d=0x7C4A1378	#	mr r10,r2
MD n=Mem ra=0x00000074 d=0x60000000	#	nop
MD n=Mem ra=0x00000078 d=0x60000000	#	nop
MD n=Mem ra=0x0000007c d=0x60000000	#	nop
MD n=Mem ra=0x00000080 d=0x60000000	#	nop
MD n=Mem ra=0x00000084 d=0x60000000	#	nop
MD n=Mem ra=0x00000088 d=0x60000000	#	nop
MD n=Mem ra=0x0000008c d=0x4200FFC4	#	bdnz L4
MD n=Mem ra=0x00000090 d=0x3A940001	#	addi r20,r20,1
MD n=Mem ra=0x00000094 d=0x9280100C	#	stw r20,0x100c(r0) # Proc2 -> Proc1 done flag.
MD n=Mem ra=0x00000098 d=0x00000000	#	.long 0x0
# </GEN>

CORE n=PMT

RD n=TEN d=0xc0000000

CORE n=:PMT:t0

RD n=NIA d=0x0
RD n=CTR d=10000

CORE n=:PMT:t1

RD n=NIA d=0x50
RD n=CTR d=10000

RESULTS

# We don't check the CTR value because it's possible that one core might exit
# via the done flag and thus leave CTR with a value of 1.

CORE n=:PMT:t0

RD n=GPR i=1  d=10000
RD n=GPR i=2  d=20000
RD n=GPR i=10 d=20000
RD n=GPR i=20 d=1

CORE n=:PMT:t1

RD n=GPR i=1  d=20000
RD n=GPR i=2  d=10000
RD n=GPR i=10 d=10000
RD n=GPR i=20 d=1
