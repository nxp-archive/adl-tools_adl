#
# Test of a situation in which a JIT model is translating
# a basic block during a branch-fix-up operation, but gets
# an exception.  We should still register that block's
# exception-handling frame.
#
= asm

  addi  r31,r31,1
  mfspr r30,SRR0
  addi r30,r30,4
  mtspr SRR0,r30
  rfi
  .long 0x0
  .long 0x0
  addi r1,r1,1
  addi r1,r1,1
  bc 0x14,0,L2
L1:
  addi r1,r1,1
  .long 0x0
  .long 0x0
L2:
  addi r2,r2,2
  addi r2,r2,2
  tweq r2,r10      # Will cause a program exception.
  bc 0x14,0,L1

= /asm

= mdopts

instr-offset: 0x10fbc

= /mdopts

CORE n=:P

RD n=NIA      d=0xfd8
RD n=IVOR6    d=0xfbc
RD n=GPR i=10 d=4

# ea=0x0000 ra=0x10000
TD n=TlbCam set=0 way=0 V=1 TID=0 SIZE=1 TS=0 RPN=0x40 WIMG=0x1 SX=1 SR=1 SW=1 EPN=0

# ea=0x1000 ra=0xA1000
TD n=TlbCam set=0 way=1 V=1 TID=0 SIZE=1 TS=0 RPN=0x284 WIMG=0x2 SX=0 SR=1 SW=1 EPN=0x4

# <GEN>
MD n=Mem ra=0x00010fbc d=0x3BFF0001	#	addi  r31,r31,1
MD n=Mem ra=0x00010fc0 d=0x7FDA02A6	#	mfspr r30,SRR0
MD n=Mem ra=0x00010fc4 d=0x3BDE0004	#	addi r30,r30,4
MD n=Mem ra=0x00010fc8 d=0x7FDA03A6	#	mtspr SRR0,r30
MD n=Mem ra=0x00010fcc d=0x4C000064	#	rfi
MD n=Mem ra=0x00010fd0 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00010fd4 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00010fd8 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00010fdc d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00010fe0 d=0x42800010	#	bc 0x14,0,L2
MD n=Mem ra=0x00010fe4 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00010fe8 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00010fec d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00010ff0 d=0x38420002	#	addi r2,r2,2
MD n=Mem ra=0x00010ff4 d=0x38420002	#	addi r2,r2,2
MD n=Mem ra=0x00010ff8 d=0x7C825008	#	tweq r2,r10      # Will cause a program exception.
MD n=Mem ra=0x00010ffc d=0x4280FFE8	#	bc 0x14,0,L1
# </GEN>

RESULTS

RD n=GPR i=1  d=0x00000003
RD n=GPR i=2  d=0x00000004
RD n=GPR i=31 d=0x00000001
