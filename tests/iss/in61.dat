#
# Tests the use of an exception to switch threads.
#

= asm

  lwz r2,0x1000(r1)
  lwz r3,0x1004(r1)
  .long 0
  addi r1,r2,2
  addi r2,r1,3
  mtspr 51,r0
  .long 0

= /asm

# <GEN>
MD n=Mem ra=0x00000000 d=0x80411000	#	lwz r2,0x1000(r1)
MD n=Mem ra=0x00000004 d=0x80611004	#	lwz r3,0x1004(r1)
MD n=Mem ra=0x00000008 d=0x00000000	#	.long 0
MD n=Mem ra=0x0000000c d=0x38220002	#	addi r1,r2,2
MD n=Mem ra=0x00000010 d=0x38410003	#	addi r2,r1,3
MD n=Mem ra=0x00000014 d=0x7C130BA6	#	mtspr 51,r0
MD n=Mem ra=0x00000018 d=0x00000000	#	.long 0
# </GEN>

MD n=Mem ra=0x1000 d=0xdeadbeef
MD n=Mem ra=0x1004 d=0x12345678

CORE n=:PMT:t0

RD n=CCR d=0x80000000
RD n=NIA0 d=0

CORE n=:PMT:t1

RD n=CCR d=0x80000000
RD n=NIA1 d=0xc

TRACE

CORE n=:PMT:t0

I ea=0x0 id=1
M n=Mem t=ifetch ea=0x0 ra=0x0 d=0x80411000
INSTR op=0x80411000					asm="lwz    r2,4096(r1)"
D n=Mem t=read ea=0x1000 nb=4
C n=L1d a=miss t=read set=32 way=0 lm=0x7f ra=0x1000
C n=L1d a=load t=read set=32 way=0 lm=0x7f ra=0x1000
E n=ThreadSwap
R n=TACTIVE d=0x00000001

CORE n=:PMT:t1

I ea=0xc id=2
M n=Mem t=ifetch ea=0xc ra=0xc d=0x38220002
INSTR op=0x38220002					asm="addi   r1,r2,2"
R n=GPR i=1 d=0x00000002

I ea=0x10 id=3
M n=Mem t=ifetch ea=0x10 ra=0x10 d=0x38410003
INSTR op=0x38410003					asm="addi   r2,r1,3"
R n=GPR i=2 d=0x00000005

I ea=0x14 id=4
M n=Mem t=ifetch ea=0x14 ra=0x14 d=0x7c130ba6
INSTR op=0x7c130ba6					asm="mtspr  r0,51"
R n=TACTIVE d=0x00000000
R n=SWAP d=0x00000000

CORE n=:PMT:t0

I ea=0x0 id=5
M n=Mem t=ifetch ea=0x0 ra=0x0 d=0x80411000
INSTR op=0x80411000					asm="lwz    r2,4096(r1)"
D n=Mem t=read ea=0x1000 nb=4
C n=L1d a=hit t=read set=32 way=0 lm=0x7f ra=0x1000
M n=Mem t=read ea=0x1000 ra=0x1000 d=0xdeadbeef
R n=GPR i=2 d=0xdeadbeef

I ea=0x4 id=6
M n=Mem t=ifetch ea=0x4 ra=0x4 d=0x80611004
INSTR op=0x80611004					asm="lwz    r3,4100(r1)"
D n=Mem t=read ea=0x1004 nb=4
C n=L1d a=hit t=read set=32 way=0 lm=0x7f ra=0x1000
M n=Mem t=read ea=0x1004 ra=0x1004 d=0x12345678
R n=GPR i=3 d=0x12345678

I ea=0x8 id=7
M n=Mem t=ifetch ea=0x8 ra=0x8 d=0x00000000
INSTR op=0x0					asm="halt   "

RESULTS

CORE n=:PMT:t0

RD n=GPR i=2 d=0xdeadbeef
RD n=GPR i=3 d=0x12345678

CORE n=:PMT:t1

RD n=GPR i=1 d=2
RD n=GPR i=2 d=5

