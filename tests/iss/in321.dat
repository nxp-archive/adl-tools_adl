#
# Test to make sure that we can handle an icache touch if it occurs as the last
# element of our unrolled decode-cache kernel sw-pipelined loop.  This checks
# for a special corner case and is a somewhat fragile test, unfortunately.
#

= asm

addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1
addi r1,r1,1

= /asm

# <GEN>
MD n=Mem ra=0x00000000 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000004 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000008 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x0000000c d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000010 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000014 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000018 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x0000001c d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000020 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000024 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000028 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x0000002c d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000030 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000034 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000038 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x0000003c d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000040 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000044 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000048 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x0000004c d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000050 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000054 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000058 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x0000005c d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000060 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000064 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000068 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x0000006c d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000070 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000074 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000078 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x0000007c d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000080 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000084 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000088 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x0000008c d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000090 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000094 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000098 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x0000009c d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x000000a0 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x000000a4 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x000000a8 d=0x38210001	#	addi r1,r1,1
# </GEN>

CORE n=:P

# This is set so that the implicitly added icache touch will occur on the 20th
# instruction, thus causing a call to the icache touch handler in the last
# element of the decode-cache kernel.
RD n=NIA d=0x34

RESULTS

RD n=GPR i=1 d=30



