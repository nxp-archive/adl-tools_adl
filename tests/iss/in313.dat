#
# Test to make sure that one thread in a uADL model can initialize another
# thread's program counter and then enable the other thread, and that the other
# thread will start executing at the proper location.
#

= asm

	addi r1,r1,1
	addi r2,r2,2
	addi r3,r3,3
	lis  r4,T1@h
	ori  r4,r4,T1@l    # Setup other thread's PC.
	mtspr 31,r4
	oris r4,r0,0xc000
	mtspr 70,r4        # Activate other thread.
	.long 0x0
	.long 0x0
	.long 0x0
T1:
	addi r7,r7,7
	addi r8,r8,8
	addi r9,r9,9
	addi r10,r10,10
	addi r11,r11,11
	addi r12,r12,12
	.long 0x0	

= /asm

# <GEN>
MD n=Mem ra=0x00000000 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000004 d=0x38420002	#	addi r2,r2,2
MD n=Mem ra=0x00000008 d=0x38630003	#	addi r3,r3,3
MD n=Mem ra=0x0000000c d=0x3C800000	#	lis  r4,T1@h
MD n=Mem ra=0x00000010 d=0x6084002C	#	ori  r4,r4,T1@l    # Setup other thread's PC.
MD n=Mem ra=0x00000014 d=0x7C9F03A6	#	mtspr 31,r4
MD n=Mem ra=0x00000018 d=0x6404C000	#	oris r4,r0,0xc000
MD n=Mem ra=0x0000001c d=0x7C8613A6	#	mtspr 70,r4        # Activate other thread.
MD n=Mem ra=0x00000020 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000024 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000028 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x0000002c d=0x38E70007	#	addi r7,r7,7
MD n=Mem ra=0x00000030 d=0x39080008	#	addi r8,r8,8
MD n=Mem ra=0x00000034 d=0x39290009	#	addi r9,r9,9
MD n=Mem ra=0x00000038 d=0x394A000A	#	addi r10,r10,10
MD n=Mem ra=0x0000003c d=0x396B000B	#	addi r11,r11,11
MD n=Mem ra=0x00000040 d=0x398C000C	#	addi r12,r12,12
MD n=Mem ra=0x00000044 d=0x00000000	#	.long 0x0	
# </GEN>

CORE n=:PMT

RD n=CCR d=0xC0000000

CORE n=:PMT:t0

RD n=NIA d=0x0

CORE n=:PMT:t1


RESULTS

CORE n=:PMT:t0

RD n=GPR i=1  d=1
RD n=GPR i=2  d=2
RD n=GPR i=3  d=3
RD n=GPR i=7  d=0
RD n=GPR i=8  d=0
RD n=GPR i=9  d=0
RD n=GPR i=10 d=0
RD n=GPR i=11 d=0
RD n=GPR i=12 d=0

CORE n=:PMT:t1

RD n=GPR i=1  d=0x00000000
RD n=GPR i=2  d=0x00000000
RD n=GPR i=3  d=0x00000000
RD n=GPR i=7  d=0x00000007
RD n=GPR i=8  d=0x00000008
RD n=GPR i=9  d=0x00000009
RD n=GPR i=10 d=0x0000000a
RD n=GPR i=11 d=0x0000000b
RD n=GPR i=12 d=0x0000000c
