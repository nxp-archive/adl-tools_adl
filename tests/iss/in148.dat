#
# Tests that we can handle a basic block which runs up against the limits of the
# maximum allowed size.  This causes us to generate multple basic blocks with
# jumps chaining them together.
#
= asm

  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r1,r1,1  
  addi r2,r1,0

= /asm


CORE n=:P

# <GEN>
MD n=Mem ra=0x00000000 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000004 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000008 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x0000000c d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000010 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000014 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000018 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x0000001c d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000020 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000024 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000028 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x0000002c d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000030 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000034 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000038 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x0000003c d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000040 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000044 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000048 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x0000004c d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000050 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000054 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000058 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x0000005c d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000060 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000064 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000068 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x0000006c d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000070 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000074 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000078 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x0000007c d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000080 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000084 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000088 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x0000008c d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000090 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000094 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000098 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x0000009c d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000a0 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000a4 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000a8 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000ac d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000b0 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000b4 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000b8 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000bc d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000c0 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000c4 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000c8 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000cc d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000d0 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000d4 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000d8 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000dc d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000e0 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000e4 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000e8 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000ec d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000f0 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000f4 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000f8 d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x000000fc d=0x38210001	#	addi r1,r1,1  
MD n=Mem ra=0x00000100 d=0x38410000	#	addi r2,r1,0
# </GEN>

RESULTS

RD n=GPR i=1 d=64
RD n=GPR i=2 d=64
