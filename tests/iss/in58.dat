#
# This implements the Sieve of Eratosthenes.
#
# Little endian version of in41.dat
#
# The original C code is:
# //#include <stdlib.h>
# //#include <stdio.h>
# 
# #define N 100
# unsigned int sieve[N];
# unsigned int results[N];
# 

= ccode

 int main()
 {
 
    int i,j;
    for (i = 0; i != N; ++i) {
       sieve[i] = 1;
       results[i] = 0;
    }
 
    for (i = 2; i*i < N; ++i) {
       if (sieve[i]) {
          for (j = i+i; j < N; j += i) {
             sieve[j] = 0;
          }
       }
    }
 
    i = 0;
    for (j = 2; j < N; ++j) {
       if (sieve[j]) {
          results[i++] = j;
       }
    }
 
    //   for (i = 0; i != N; ++i) {
    //      if (!results[i]) {
    //         break;
    //      }
    //      printf ("%d\n",results[i]);
    //   }
 
    return 0;
 }
 
= /ccode

= asm

       .file   "sieve.c"
 gcc2_compiled.:
       .section        ".text"
       .align 2
       .globl main
       .type    main,@function
 main:
       li 7,100
       mtctr 7
       lis 9,0x0
       lis 11,0x0
       la 9,0x1000(9)
       la 11,0x2000(11)
       li 8,1
       li 0,0
       li 10,0
 .L26:
       stwx 8,10,9
       stwx 0,10,11
       addi 10,10,4
       bdnz .L26
       lis 9,0x0
       la 9,0x1000(9)
       mr 5,9
       li 8,2
 .L11:
       slwi 7,8,2
       lwzx 0,9,7
       addi 6,8,1
       cmpwi 0,0,0
       bc 12,2,.L10
       add 10,8,8
       cmpwi 0,10,99
       bc 12,1,.L10
       slwi 0,10,2
       add 11,0,5
       mr 0,7
       li 7,0
 .L16:
       add 10,10,8
       cmpwi 0,10,99
       stw 7,0(11)
       add 11,11,0
       bc 4,1,.L16
 .L10:
       mr 8,6
       mullw 0,8,8
       cmpwi 0,0,99
       bc 4,1,.L11
       li 0,98
       mtctr 0
       lis 9,0x0
       la 9,0x1000(9)
       lis 11,0x0
       addi 9,9,8
       la 11,0x2000(11)
       li 10,2
 .L25:
       lwz 0,0(9)
       addi 9,9,4
       cmpwi 0,0,0
       bc 12,2,.L21
       stw 10,0(11)
       addi 11,11,4
 .L21:
       addi 10,10,1
       bdnz .L25
       li 3,0
 #      blr
 .Lfe1:
       .size    main,.Lfe1-main
       .comm   sieve,400,4
       .comm   results,400,4
       .ident  "GCC: (GNU) 2.95.3 19991030 (prerelease)"

= /asm

= aopts 

 -mlittle
= /aopts


CORE n=:P

# <GEN>
MD n=Mem ra=0x00000000 d=0x6400E038	#	li 7,100
MD n=Mem ra=0x00000004 d=0xA603E97C	#	mtctr 7
MD n=Mem ra=0x00000008 d=0x0000203D	#	lis 9,0x0
MD n=Mem ra=0x0000000c d=0x0000603D	#	lis 11,0x0
MD n=Mem ra=0x00000010 d=0x00102939	#	la 9,0x1000(9)
MD n=Mem ra=0x00000014 d=0x00206B39	#	la 11,0x2000(11)
MD n=Mem ra=0x00000018 d=0x01000039	#	li 8,1
MD n=Mem ra=0x0000001c d=0x00000038	#	li 0,0
MD n=Mem ra=0x00000020 d=0x00004039	#	li 10,0
MD n=Mem ra=0x00000024 d=0x2E490A7D	#	stwx 8,10,9
MD n=Mem ra=0x00000028 d=0x2E590A7C	#	stwx 0,10,11
MD n=Mem ra=0x0000002c d=0x04004A39	#	addi 10,10,4
MD n=Mem ra=0x00000030 d=0xF4FF0042	#	bdnz .L26
MD n=Mem ra=0x00000034 d=0x0000203D	#	lis 9,0x0
MD n=Mem ra=0x00000038 d=0x00102939	#	la 9,0x1000(9)
MD n=Mem ra=0x0000003c d=0x784B257D	#	mr 5,9
MD n=Mem ra=0x00000040 d=0x02000039	#	li 8,2
MD n=Mem ra=0x00000044 d=0x3A100755	#	slwi 7,8,2
MD n=Mem ra=0x00000048 d=0x2E38097C	#	lwzx 0,9,7
MD n=Mem ra=0x0000004c d=0x0100C838	#	addi 6,8,1
MD n=Mem ra=0x00000050 d=0x0000002C	#	cmpwi 0,0,0
MD n=Mem ra=0x00000054 d=0x34008241	#	bc 12,2,.L10
MD n=Mem ra=0x00000058 d=0x1442487D	#	add 10,8,8
MD n=Mem ra=0x0000005c d=0x63000A2C	#	cmpwi 0,10,99
MD n=Mem ra=0x00000060 d=0x28008141	#	bc 12,1,.L10
MD n=Mem ra=0x00000064 d=0x3A104055	#	slwi 0,10,2
MD n=Mem ra=0x00000068 d=0x142A607D	#	add 11,0,5
MD n=Mem ra=0x0000006c d=0x783BE07C	#	mr 0,7
MD n=Mem ra=0x00000070 d=0x0000E038	#	li 7,0
MD n=Mem ra=0x00000074 d=0x14424A7D	#	add 10,10,8
MD n=Mem ra=0x00000078 d=0x63000A2C	#	cmpwi 0,10,99
MD n=Mem ra=0x0000007c d=0x0000EB90	#	stw 7,0(11)
MD n=Mem ra=0x00000080 d=0x14026B7D	#	add 11,11,0
MD n=Mem ra=0x00000084 d=0xF0FF8140	#	bc 4,1,.L16
MD n=Mem ra=0x00000088 d=0x7833C87C	#	mr 8,6
MD n=Mem ra=0x0000008c d=0xD641087C	#	mullw 0,8,8
MD n=Mem ra=0x00000090 d=0x6300002C	#	cmpwi 0,0,99
MD n=Mem ra=0x00000094 d=0xB0FF8140	#	bc 4,1,.L11
MD n=Mem ra=0x00000098 d=0x62000038	#	li 0,98
MD n=Mem ra=0x0000009c d=0xA603097C	#	mtctr 0
MD n=Mem ra=0x000000a0 d=0x0000203D	#	lis 9,0x0
MD n=Mem ra=0x000000a4 d=0x00102939	#	la 9,0x1000(9)
MD n=Mem ra=0x000000a8 d=0x0000603D	#	lis 11,0x0
MD n=Mem ra=0x000000ac d=0x08002939	#	addi 9,9,8
MD n=Mem ra=0x000000b0 d=0x00206B39	#	la 11,0x2000(11)
MD n=Mem ra=0x000000b4 d=0x02004039	#	li 10,2
MD n=Mem ra=0x000000b8 d=0x00000980	#	lwz 0,0(9)
MD n=Mem ra=0x000000bc d=0x04002939	#	addi 9,9,4
MD n=Mem ra=0x000000c0 d=0x0000002C	#	cmpwi 0,0,0
MD n=Mem ra=0x000000c4 d=0x0C008241	#	bc 12,2,.L21
MD n=Mem ra=0x000000c8 d=0x00004B91	#	stw 10,0(11)
MD n=Mem ra=0x000000cc d=0x04006B39	#	addi 11,11,4
MD n=Mem ra=0x000000d0 d=0x01004A39	#	addi 10,10,1
MD n=Mem ra=0x000000d4 d=0xE4FF0042	#	bdnz .L25
MD n=Mem ra=0x000000d8 d=0x00006038	#	li 3,0
# </GEN>

# This activates instruction and data little-endian mode.
RD n=MSR d=0x000c0000

# Final results data block.  This is required so that the DatWriter
# knows to print results for this memory.
MD n=Mem ra=0x00002000 d=0x00000000
MD n=Mem ra=0x00002004 d=0x00000000
MD n=Mem ra=0x00002008 d=0x00000000
MD n=Mem ra=0x0000200c d=0x00000000
MD n=Mem ra=0x00002010 d=0x00000000
MD n=Mem ra=0x00002014 d=0x00000000
MD n=Mem ra=0x00002018 d=0x00000000
MD n=Mem ra=0x0000201c d=0x00000000
MD n=Mem ra=0x00002020 d=0x00000000
MD n=Mem ra=0x00002024 d=0x00000000
MD n=Mem ra=0x00002028 d=0x00000000
MD n=Mem ra=0x0000202c d=0x00000000
MD n=Mem ra=0x00002030 d=0x00000000
MD n=Mem ra=0x00002034 d=0x00000000
MD n=Mem ra=0x00002038 d=0x00000000
MD n=Mem ra=0x0000203c d=0x00000000
MD n=Mem ra=0x00002040 d=0x00000000
MD n=Mem ra=0x00002044 d=0x00000000
MD n=Mem ra=0x00002048 d=0x00000000
MD n=Mem ra=0x0000204c d=0x00000000
MD n=Mem ra=0x00002050 d=0x00000000
MD n=Mem ra=0x00002054 d=0x00000000
MD n=Mem ra=0x00002058 d=0x00000000
MD n=Mem ra=0x0000205c d=0x00000000
MD n=Mem ra=0x00002060 d=0x00000000
MD n=Mem ra=0x00002064 d=0x00000000


RESULTS
RD n=CR d=0x20000000
RD n=CTR d=0x00000000
RD n=HID0 d=0x00000000
RD n=HID1 d=0x00000000
RD n=LR d=0x00000000
RD n=NIA d=0x000000e0
RD n=XER d=0x00000000
RD n=GPR i=0 d=0x00000000
RD n=GPR i=1 d=0x00000000
RD n=GPR i=2 d=0x00000000
RD n=GPR i=3 d=0x00000000
RD n=GPR i=4 d=0x00000000
RD n=GPR i=5 d=0x00001000
RD n=GPR i=6 d=0x0000000a
RD n=GPR i=7 d=0x00000024
RD n=GPR i=8 d=0x0000000a
RD n=GPR i=9 d=0x00001190
RD n=GPR i=10 d=0x00000064
RD n=GPR i=11 d=0x00002064
RD n=GPR i=12 d=0x00000000
RD n=GPR i=13 d=0x00000000
RD n=GPR i=14 d=0x00000000
RD n=GPR i=15 d=0x00000000
RD n=GPR i=16 d=0x00000000
RD n=GPR i=17 d=0x00000000
RD n=GPR i=18 d=0x00000000
RD n=GPR i=19 d=0x00000000
RD n=GPR i=20 d=0x00000000
RD n=GPR i=21 d=0x00000000
RD n=GPR i=22 d=0x00000000
RD n=GPR i=23 d=0x00000000
RD n=GPR i=24 d=0x00000000
RD n=GPR i=25 d=0x00000000
RD n=GPR i=26 d=0x00000000
RD n=GPR i=27 d=0x00000000
RD n=GPR i=28 d=0x00000000
RD n=GPR i=29 d=0x00000000
RD n=GPR i=30 d=0x00000000
RD n=GPR i=31 d=0x00000000
MD n=Mem ra=0x0000000000002000 d=0x02000000	#	(33554432)
MD n=Mem ra=0x0000000000002004 d=0x03000000	#	(50331648)
MD n=Mem ra=0x0000000000002008 d=0x05000000	#	(83886080)
MD n=Mem ra=0x000000000000200c d=0x07000000	#	(117440512)
MD n=Mem ra=0x0000000000002010 d=0x0b000000	#	(184549376)
MD n=Mem ra=0x0000000000002014 d=0x0d000000	#	(218103808)
MD n=Mem ra=0x0000000000002018 d=0x11000000	#	(285212672)
MD n=Mem ra=0x000000000000201c d=0x13000000	#	(318767104)
MD n=Mem ra=0x0000000000002020 d=0x17000000	#	(385875968)
MD n=Mem ra=0x0000000000002024 d=0x1d000000	#	(486539264)
MD n=Mem ra=0x0000000000002028 d=0x1f000000	#	(520093696)
MD n=Mem ra=0x000000000000202c d=0x25000000	#	(620756992)
MD n=Mem ra=0x0000000000002030 d=0x29000000	#	(687865856)
MD n=Mem ra=0x0000000000002034 d=0x2b000000	#	(721420288)
MD n=Mem ra=0x0000000000002038 d=0x2f000000	#	(788529152)
MD n=Mem ra=0x000000000000203c d=0x35000000	#	(889192448)
MD n=Mem ra=0x0000000000002040 d=0x3b000000	#	(989855744)
MD n=Mem ra=0x0000000000002044 d=0x3d000000	#	(1023410176)
MD n=Mem ra=0x0000000000002048 d=0x43000000	#	(1124073472)
MD n=Mem ra=0x000000000000204c d=0x47000000	#	(1191182336)
MD n=Mem ra=0x0000000000002050 d=0x49000000	#	(1224736768)
MD n=Mem ra=0x0000000000002054 d=0x4f000000	#	(1325400064)
MD n=Mem ra=0x0000000000002058 d=0x53000000	#	(1392508928)
MD n=Mem ra=0x000000000000205c d=0x59000000	#	(1493172224)
MD n=Mem ra=0x0000000000002060 d=0x61000000	#	(1627389952)
MD n=Mem ra=0x0000000000002064 d=0x00000000	#	(0)
