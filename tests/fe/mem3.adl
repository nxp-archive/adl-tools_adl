// Check emory entries validity:
// Size must be specified 
// addr_unit must be specified and be a power of 2 
// offset must be divisble by addr_unit 
// Memory range should be within the parent's range

define (arch=minippc) {

  define (regfile=GPR) {
    """
General purpose registers.
    """;
    size = 32;
    prefix = r;
  }

  define (instrfield=OPCD) {
    """
    Primary opcode.
    """;
    bits = (0,5);
  }

  define (instrfield=XO) {
    """
    Extended opcode.
    """;
    bits = (21,30);
  }

  define (instrfield=RA) {
    """
    Field used to specify a General Purpose Register to be used as a source.
    """;
    bits = (11,15);
  }
  define (instrfield=RB) {
    """
    Field used to specify a General Purpose Register to be used as a source.
    """;
    bits = (16,20);
  }
  define (instrfield=RT) {
    """
    Field used to specify a General Purpose Register to be used as a target.
    """;
    bits = (6,10);
  }
  define (instrfield=D) {
    """
    Immediate field used to specify a 16-bit signed two's complement integer
    which is sign-extended to 64-bits.
    """;
    bits = (16,31);
  }

  define (mem=instr) {
    addr_unit = 1; 	
  }	


  define (mem=instr1) {
    size = 1024;
  }

  define (mem=instr2) {
    size = 1024;
    addr_unit = 4;		 		
    instr_mem = true;
  }

  define (mem=data) {
    size = 512;
    addr_unit = 6;	
  }


  define (mem=data2) {
    size = 512;
    addr_unit = 4;
    parent = (instr2, 254);			
  }

  define (mem=data3) {
    size = 512;
    addr_unit = 1;	
    parent = (instr2, 1024);	
  }	


  define (reg = pc) {
    attrs = (cia,nia);
  }

}

define (core=P) {
  archs=minippc;
}
