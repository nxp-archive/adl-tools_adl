//
// Make sure that a sparse register-file can refer to a register-file alias and
// that we don't have any ordering issues due to names.
//

define (arch = MiniPPC) {

  attrs = (load,store,privileged,read_only);

  //
  // Registers.
  //

  define (reg=CIA) {
    """
      Current instruction address.
      """;
    attrs = cia;

  }

  define (reg=NIA) {
    """
      Next instruction address.
      """;
    attrs = nia;
  }

  define (regfile=GPR) {
    """
      General purpose registers.
      """;
    size = 32;
    prefix = r;
  }

  define (regfile=PMC) {
    """
      General purpose registers.
      """;
    size = 8;
    prefix = p;
  }

  define (regfile=UPMC) {
    attrs = read_only;
    """
      General purpose registers.
      """;
    alias = PMC;
  }

  // Should be OK b/c size of UPMC should be set before we check PMC entries.
  define (regfile=PMR) {
    """
      Special purpose registers.
      """;
    size=1024;
    define (entry=0)  { reg = UPMC(0); }
    define (entry=1)  { reg = UPMC(1); }
    define (entry=2)  { reg = UPMC(2); }
    define (entry=3)  { reg = UPMC(3); }
    define (entry=4)  { reg = UPMC(4); }
    define (entry=5)  { reg = UPMC(5); }
    define (entry=6)  { reg = UPMC(6); }
    define (entry=7)  { reg = UPMC(7); }
  }

  //
  // Instruction fields.
  //

  define (instrfield=OPCD) {
    """
Primary opcode.
    """;
    bits = (0,5);
  }

  define (instrfield=XO) {
    """
Extended opcode.
    """;
    bits = (21,30);
  }

  define (instrfield=PMRN) {
    """
Field used to specify a Special Purpose Register for the *mtspr* and *mfspr* instructions.
    """;
    bits = ((16,20),(11,15));
    ref = PMR;
    type = regfile;
  }

  define (instrfield=RA) {
    """
Field used to specify a General Purpose Register to be used as a source.
    """;
    bits = (11,15);
    ref = GPR;
    type = regfile;
  }

  define (instrfield=RB) {
    """
Field used to specify a General Purpose Register to be used as a source.
    """;
    bits = (16,20);
    ref = GPR;
    type = regfile;
  }

  define (instrfield=RT) {
    """
Field used to specify a General Purpose Register to be used as a target.
    """;
    bits = (6,10);
    ref = GPR;
    type = regfile;
  }

  define (instrfield=RS) {
    """
Field used to specify a General Purpose Register as a target.
    """;
    bits = (6,10);
    ref = GPR;
    type = regfile;
  }

  //
  // Instructions.
  //

  define (instr=add) {
    """
The sum GPR(RA) + GPR(RB) is placed into RD.

The add instruction is preferred for additions because it sets few status bits.
    """;
    fields=(OPCD(31),RT,RA,RB,XO(266));
    action = {
      GPR(RT) = GPR(RA) + GPR(RB);
    };
  }
}

define (core = P) {
  archs = MiniPPC;
}
