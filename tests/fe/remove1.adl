//
// Simple test of the remove feature.
//

define (arch = minippc) {

  //
  // Registers.
  //

  define (reg=CIA) {
    """
    Current instruction address.
    """;
    attrs = cia;
  }

  define (reg=NIA) {
    """
    Next instruction address.
    """;
    attrs = nia;
  }

  define (regfile=GPR) {
    """
    General purpose registers.
    """;
    size = 32;
  }

  //
  // Instruction fields.
  //

  define (instrfield=OPCD) {
    """
    Primary opcode.
    """;
    bits = (0,5);
  }

  define (instrfield=RA) {
    """
    Field used to specify a General Purpose Register to be used as a source.
    """;
    bits = (11,15);
  }

  define (instrfield=RT) {
    """
    Field used to specify a General Purpose Register to be used as a target.
    """;
    bits = (6,10);
  }

  define (instrfield=D) {
    """
    Signed immediate field for addressing.
    """;
    bits = (16,31);
    display = dec;
    is_signed = true;
  }

  define (instr=a) {
    fields=(OPCD(46),RT,RA,D);
    exclude_targets = GPR(RT);
    exclude_sources = GPR(RA);
    action = {
      GPR(RT) = GPR(RA) + D;
    };
  }  

  defmod (instrfield=D) {
    remove is_signed;  // This will remove an item.
    remove foo;        // This should be ignored.
  }

  defmod(instr=a) {
    remove exclude_targets; // This will remove an item.
    remove exclude_sources; // This will remove an item.
  }

  defmod(instr=a) {
    exclude_sources = GPR(RA); // Now we add it back in.
  }

}

define (core = P) {
  archs = (minippc);
}
