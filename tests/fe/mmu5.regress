======
Cores:
======
Name:  "P"
Exceptions:
  Name:  DTlbMiss
  Action:  func (  ) {
}
  -------------------------------
  Name:  ITlbMiss
  Action:  func (  ) {
}
  -------------------------------
  Name:  ProtectionFault
  Action:  func (  ) {
}
  -------------------------------
Registers:
  Name:  "MSR"
  Usage:  read, field-read
  Width:  32
    DR[10]   
      Usage:  field-read
    IR[10]   
      Usage:  field-read
  -------------------------------
  Name:  "pc"
  Usage:  read, written
  Width:  32
  Attributes:  cia nia
  -------------------------------
Current-instruction-address register:  pc
Next-instruction-address register:  pc
Real-address Mask:
  Initial mask:  0xffffffff (constant)
Effective-address Mask:
  Initial mask:  0xffffffff (constant)
MMU:

  Interleaved fetch :  1
  Interleaved reads :  1
  Interleaved writes:  1

  Instr enable:  {
    return MSR . IR (  ) ;
}
    Source Registers:  MSR[mask 0x00200000]/p 

  Data enable:  {
    return MSR . DR (  ) ;
}
    Source Registers:  MSR[mask 0x00200000]/p 

  Instr miss action:  func ( addr_t  , unsigned  ) {
    raiseException ( ITlbMiss ) ;
}
    Does raise exceptions.

  Data miss action:  func ( addr_t  , unsigned  ) {
    raiseException ( DTlbMiss ) ;
}
    Does raise exceptions.

  Lookup:  BatBase (interface)
    Type:  both
    Priority:  0
    Size:  BL field (left-justified mask) << 0
    Page Number Shift:  0
    Real-page Field:  BRPN
    Min Page Size:  1 (bytes)
    Array:  8 entries, fully associative.
    Way Fields:
      BEPI:  15 bits.
        Reset value:  0
      BL:  11 bits.
        Reset value:  0
      BRPN:  15 bits.
        Reset value:  0
      PP:  2 bits.
        Reset value:  0
      Vp:  1 bits.
        Reset value:  0
      Vs:  1 bits.
        Reset value:  0
      WIMG:  4 bits.
        Reset value:  0

    Tests:

      Check ( ( MSR . PR (  ) == 0 ) ? Vs : Vp )
      AddrComp ( BEPI )

    Execute permission:  func ( TransType t , addr_t  , unsigned seq ) {
    if ( ! ( t . PP ( 1 ) == 1 ) ) {
        raiseException ( ProtectionFault ) ;
    }
}
      Does raise exceptions.

    Load permission:  func ( TransType t , addr_t  , unsigned seq ) {
    if ( ! ( t . PP ( 1 ) == 1 ) ) {
        raiseException ( ProtectionFault ) ;
    }
}
      Does raise exceptions.

    Store permission:  func ( TransType t , addr_t  , unsigned seq ) {
    if ( ! ( t . PP == 2 ) ) {
        raiseException ( ProtectionFault ) ;
    }
}
      Does raise exceptions.
  -------------------------------

  Lookup:  DBat (parent: BatBase)
    Type:  data
    Priority:  0
    Size:  BL field (left-justified mask) << 0
    Page Number Shift:  0
    Real-page Field:  BRPN
    Min Page Size:  1 (bytes)
    Array:  8 entries, fully associative.
    Way Fields:
      BEPI:  15 bits.
        Reset value:  0
      BL:  11 bits.
        Reset value:  0
      BRPN:  15 bits.
        Reset value:  0
      PP:  2 bits.
        Reset value:  0
      Vp:  1 bits.
        Reset value:  0
      Vs:  1 bits.
        Reset value:  0
      WIMG:  4 bits.
        Reset value:  0

    Tests:

      Check ( ( MSR . PR (  ) == 0 ) ? Vs : Vp )
      AddrComp ( BEPI )

    Execute permission:  func ( TransType t , addr_t  , unsigned seq ) {
    if ( ! ( t . PP ( 1 ) == 1 ) ) {
        raiseException ( ProtectionFault ) ;
    }
}
      Does raise exceptions.

    Load permission:  func ( TransType t , addr_t  , unsigned seq ) {
    if ( ! ( t . PP ( 1 ) == 1 ) ) {
        raiseException ( ProtectionFault ) ;
    }
}
      Does raise exceptions.

    Store permission:  func ( TransType t , addr_t  , unsigned seq ) {
    if ( ! ( t . PP == 2 ) ) {
        raiseException ( ProtectionFault ) ;
    }
}
      Does raise exceptions.
  -------------------------------

  Lookup:  IBat (parent: BatBase)
    Type:  instr
    Priority:  0
    Size:  BL field (left-justified mask) << 0
    Page Number Shift:  0
    Real-page Field:  BRPN
    Min Page Size:  1 (bytes)
    Array:  8 entries, fully associative.
    Way Fields:
      BEPI:  15 bits.
        Reset value:  0
      BL:  11 bits.
        Reset value:  0
      BRPN:  15 bits.
        Reset value:  0
      PP:  2 bits.
        Reset value:  0
      Vp:  1 bits.
        Reset value:  0
      Vs:  1 bits.
        Reset value:  0
      WIMG:  4 bits.
        Reset value:  0

    Tests:

      Check ( ( MSR . PR (  ) == 0 ) ? Vs : Vp )
      AddrComp ( BEPI )

    Execute permission:  func ( TransType t , addr_t  , unsigned seq ) {
    if ( ! ( t . PP ( 1 ) == 1 ) ) {
        raiseException ( ProtectionFault ) ;
    }
}
      Does raise exceptions.

    Load permission:  func ( TransType t , addr_t  , unsigned seq ) {
    if ( ! ( t . PP ( 1 ) == 1 ) ) {
        raiseException ( ProtectionFault ) ;
    }
}
      Does raise exceptions.

    Store permission:  func ( TransType t , addr_t  , unsigned seq ) {
    if ( ! ( t . PP == 2 ) ) {
        raiseException ( ProtectionFault ) ;
    }
}
      Does raise exceptions.
  -------------------------------

  Lookup:  Seg
    Type:  both
    Priority:  1
    Page Number Shift:  0
    Min Page Size:  0 (bytes)
    Array:  16 entries, 1-way set-associative.
    Way Fields:
      Kp:  1 bits.
        Reset value:  0
      Ks:  1 bits.
        Reset value:  0
      N:  1 bits.
        Reset value:  0
      T:  1 bits.
        Reset value:  0
      VSID:  24 bits.
        Reset value:  0

    Tests:

      AddrIndex ( 0 , 3 )

    Lookup:  PTE
      Type:  both
      Priority:  0
      Size:  4096 bytes.
      Page Number Shift:  0
      Real-page Field:  RPN
      Min Page Size:  4096 (bytes)
      Array:  128 entries, 2-way set-associative.
      Way Fields:
        API:  16 bits.
          Reset value:  0
        C:  1 bits.
          Reset value:  0
        H:  1 bits.
          Reset value:  0
        PP:  2 bits.
          Reset value:  0
        R:  1 bits.
          Reset value:  0
        RPN:  20 bits.
          Reset value:  0
        V:  1 bits.
          Reset value:  0
        VSID:  24 bits.
          Reset value:  0
        WIMG:  4 bits.
          Reset value:  0

      Tests:

        Compare ( VSID , Seg . VSID )
        AddrComp ( API )

      Execute permission:  func ( PTE_t p , Seg_t s , addr_t  , unsigned seq ) {
    if ( ! ( s . N == 1 ) ) {
        raiseException ( ProtectionFault ) ;
    }
}
        Does raise exceptions.

      Load permission:  func ( PTE_t p , Seg_t s , addr_t  , unsigned seq ) {
    if ( ( MSR . PR (  ) ? s . KS : s . KP ) == 1 && ( p . PP == 0 ) ) {
        raiseException ( ProtectionFault ) ;
    }
}
        Source Registers:  MSR 
        Does raise exceptions.

      Store permission:  func ( PTE_t p , Seg_t s , addr_t  , unsigned seq ) {
    if ( ( ( MSR . PR (  ) ? s . KS : s . KP ) == 1 && ( p . PP == 1 ) ) || ( p . PP == 11 ) ) {
        raiseException ( ProtectionFault ) ;
    }
}
        Source Registers:  MSR 
        Does raise exceptions.
    -------------------------------
  -------------------------------
-------------------------------
-------------------------------

