======
Cores:
======
Name:  "qe_risc"
Registers:
  Name:  "CIA"
  Usage:  read, written
  Width:  32
  Attributes:  cia
  Documention:

  Current instruction address for fetch.
  
  -------------------------------
  Name:  "NIA"
  Usage:  read, written
  Width:  32
  Attributes:  nia
  Documention:

  Next instruction address for fetch.
     
  -------------------------------
Current-instruction-address register:  CIA
Next-instruction-address register:  NIA
Real-address Mask:
  Initial mask:  0xffffffff (constant)
Effective-address Mask:
  Initial mask:  0xffffffff (constant)
Instruction Fields:
  BIT: [6,10] [not used] 
      Conditional BIT select for JMP instruction.
  
  BS: [22,23] 
      Bite select bit for ALUIS instructions.
  
  FLAGS: [10,10] 
      CR update for ALU instruction.
  
  HWS: [4,4] 
      High Word Select for ALU immideate instructions
  
  IMM16: [16,31] 
      immideate 16.
  
  IMM8: [24,31] 
      immideate 8.
  
  INSTR_OFFSET: [16,31] 
      instruction offset for imm. jmp instructions
  
  INVA: [5,5] 
      INV operand B in ALU instruction.
  
  ML: [6,10] 
      Mask Left.
  
  MR: [26,30] 
      Mask Rigth.
  
  NOP_J: [5,5] 
      NOP option in JMP instruction.
  
  NOT_J: [4,4] 
      Condition NOT for JMP instructions
  
  OPCD: [0,4] 
      Primary opcode.
  
  OPCD_ALU: [6,8] 
      Secondary opcode for ALU instructions.
  
  OPCD_B31: [31,31] 
      Secondary opcode.
  
  OPCD_B5: [5,5] 
      Secondary opcode.
  
  OPCD_SHRT: [0,3] 
      Primary short opcode.
  
  RA: [11,15] 
      RA.
  
  RB: [16,20] 
      RB.
  
  RC: [21,25] 
      RC.
  
  RSV_B21: [21,21] 
      Reserved bit.
  
  SM: [4,4] [not used] 
      Semaphor option for DMA instruction
  
  SW: [4,4] [not used] 
      Swap option for LD instruction
  
  UPDATE: [9,9] 
      Update option of ALU instruction.
  
Instructions:
  Name:  addi (rank: 100)
  Width:  32
  Fields:  OPCD_SHRT(14) HWS INVA(0) OPCD_ALU(0) UPDATE FLAGS RA IMM16
  Action:  {
     ;
}
  -------------------------------
  Name:  andi (rank: 100)
  Width:  32
  Fields:  OPCD_SHRT(14) HWS INVA OPCD_ALU(2) UPDATE FLAGS RA IMM16
  Action:  {
     ;
}
  -------------------------------
  Name:  andis (rank: 100)
  Width:  32
  Fields:  OPCD(30) INVA OPCD_ALU(2) UPDATE FLAGS RA RB RSV_B21(0) BS IMM8
  Action:  {
     ;
}
  -------------------------------
  Name:  jmp (rank: 100)
  Width:  32
  Fields:  OPCD_SHRT(11) NOT_J NOP_J RA INSTR_OFFSET
  Action:  {
     ;
}
  -------------------------------
  Name:  merge (rank: 100)
  Width:  32
  Fields:  OPCD(25) OPCD_B5(0) ML RA RB RC MR OPCD_B31(0)
  Action:  {
     ;
}
  -------------------------------
  Name:  ori (rank: 100)
  Width:  32
  Fields:  OPCD_SHRT(14) HWS INVA OPCD_ALU(3) UPDATE FLAGS RA IMM16
  Action:  {
     ;
}
  -------------------------------
  Name:  oris (rank: 100)
  Width:  32
  Fields:  OPCD(30) INVA OPCD_ALU(3) UPDATE FLAGS RA RB RSV_B21(0) BS IMM8
  Action:  {
     ;
}
  -------------------------------
  Name:  subi (rank: 100)
  Width:  32
  Fields:  OPCD_SHRT(14) HWS INVA(1) OPCD_ALU(0) UPDATE FLAGS RA IMM16
  Action:  {
     ;
}
  -------------------------------
  Name:  xori (rank: 100)
  Width:  32
  Fields:  OPCD_SHRT(14) HWS INVA OPCD_ALU(4) UPDATE FLAGS RA IMM16
  Action:  {
     ;
}
  -------------------------------
  Name:  xoris (rank: 100)
  Width:  32
  Fields:  OPCD(30) INVA OPCD_ALU(4) UPDATE FLAGS RA RB RSV_B21(0) BS IMM8
  Action:  {
     ;
}
  -------------------------------

Instruction Tables:
other:
    Mask:  0xf0000000
    11(b0000000):  jmp
    12(c0000000):      Mask:  0xc000001
      134217728(8000000):  merge
    14(e0000000):      Mask:  0x3800000
      0(0):        Mask:  0x4000000
        0(0):  addi
        1(4000000):  subi
      2(1000000):  andi
      3(1800000):  ori
      4(2000000):  xori
    15(f0000000):      Mask:  0xb800400
      16384(1000000):  andis
      24576(1800000):  oris
      32768(2000000):  xoris
-------------------------------

