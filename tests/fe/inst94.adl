// StarCore instructions (so far)


define (arch = sc3400){

  bit_endianness = little;

  define (reg=PC) {
    attrs = (cia,nia);
  }

  define (instrfield=OPCD) {
    width = variable; 
    pseudo = true;
  }


  define (instrfield=Src1) {
    width = 6; 
    pseudo = true;
    pseudo=true;
  }

  define (instrfield=Src2) {
    width = 2; 
    pseudo = true;
  }

  define (instrfield=Res) {
    width = 4; 
    pseudo = true;
  }

  define (regfile=D) {
    size = 256;
    width = 32;
    prefix = d;
  }

  define (instrfield=RA) {
    pseudo = true;
    width = 6;
    ref = D;
  }

  define (instrfield=RA1) {
    pseudo = true;
    width = 6;
    ref = D;
  }

  define (instrfield=RB) {
    pseudo = true;
    width = 2;
    ref = D;
  }

  define (instrfield=RT) {
    pseudo = true;
    width = 4;
    ref = D;
  }


  define(instr=add_outer) { 
    fields = (OPCD, Src1, Src2, Res); 
    width = 16;
    define(instr=add_nested1) { 
      fields = (
	  (bits(6), RA(0)),       
	  (bits(7), RA(1)),       
	  (bits(8), RA(2)),       
	  (bits(9), RA(3)),       
	  (bits(10),RA(4)),       
	  (bits(11),RA(5)),
	  (bits(0), RT(0)),       
	  (bits(1), RT(1)),       
	  (bits(2), RT(2)),       
	  (bits(3), RT(3)),       
	  (bits(4), RB(0)),       
	  (bits(5), RB(1)),       
	  (bits(12),b0),
	  (bits(13),b0),
	  (bits(14),b0),
	  (bits(15),b0));

      alias = add_outer(OPCD(OPCD),Src1(RA>>1),Src2(RB),Res(RT)); 
      syntax = ("add %f,%f,%f",RA,RB,RT);
    } 
    define(instr=add_nested2) { 
      fields = (
	  (bits(6), RA(0)),       
	  (bits(7), RA(1)),       
	  (bits(8), RA(2)),       
	  (bits(9), RA(3)),       
	  (bits(10),RA(4)),       
	  (bits(11),RA(5)),
	  (bits(0), RT(0)),       
	  (bits(1), RT(1)),       
	  (bits(2), RT(2)),       
	  (bits(3), RT(3)),       
	  (bits(4), RB(0)),       
	  (bits(5), RB(1)),       
	  (bits(12),b0),
	  (bits(13),b0),
	  (bits(14),b1),
	  (bits(15),b0));

      alias = add_outer(OPCD(OPCD),Src1(RA),Src2(RB),Res(RT)); 
      syntax = ("add %f,%f,%f",RA,RB,RT);
    } 

    action = { D(Res) = D(Src1) + D(Src2); };
  }

  
  defmod(instr=add_nested2) {
    syntax = ("aaaaaaa %f,%f,%f",RA,RB,RT);
  }
  defmod(instr=add_nested1) {
    remove = 1;
  }
} // arch

define (core = StarCore)
{
  archs = sc3400;
}
