//
// Tests of helper code.  Should fail b/c of unrecognized resources.
//

// A sample declaration
const int RegSize = 64;

define (arch=Base) {

  void foo (int a,int b) { X = a; }

  attrs = (foo,stuff);

  define (regfile=sprs) {
    size = 1024;
    attrs = foo;
  }
}

define (arch=minippc) {

  attrs = gpr;

  // This should replace Base::bar.
  // This should compile b/c we reference valid registers.
  void  bar (int x,int y) { 
    """ Hello there! """;
    a = x; 
    b = y; 
  }

  define (regfile=gprs) {
    size = 32;
    attrs = (foo,stuff);
  }

  define (reg=a) {
    """ This is a sample register!. """;
    width = 32;
    attrs = (foo,cia,nia);
  }

  define (reg=b) {
    width = 32;
  }

  define (reg=c) {
    width = 32;
  }

  define (reg=d) {
    width = 32;
    attrs = stuff;
  }

  defmod(regfile=sprs) {
    define (entry=20) { reg=a; };
    define (entry=21) { reg=b; };
    define (entry=22) { reg=c; };
    define (entry=50) { reg=d; };
  }

}

define (core=P) {
  archs = (Base,minippc);
}

