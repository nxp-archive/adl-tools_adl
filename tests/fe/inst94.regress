======
Cores:
======
Name:  "StarCore"
Bit Order:              little endian
Register Files:
  Name:  "D"
  Size:  256
  Prefix:  d
  Usage:  read, written
  Width:  32
  -------------------------------
Registers:
  Name:  "PC"
  Usage:  read, written
  Width:  32
  Attributes:  cia nia
  -------------------------------
Current-instruction-address register:  PC
Next-instruction-address register:  PC
Real-address Mask:
  Initial mask:  0xffffffff (constant)
Effective-address Mask:
  Initial mask:  0xffffffff (constant)
Instruction Fields:
  OPCD: 
    Pseudo:  1
    Complementary:  1
  RA: [regfile:  D]
    Pseudo:  1
    Width:   6
  RA1: [regfile:  D] [not used]
    Pseudo:  1
    Width:   6
  RA_imp_bits__11_11_x_10_10_x_9_9_x_8_8_x_7_7_x_6_6_: [11,6] 
    Implements:  RA
  RB: [regfile:  D]
    Pseudo:  1
    Width:   2
  RB_imp_bits__5_5_x_4_4_: [5,4] 
    Implements:  RB
  RT: [regfile:  D]
    Pseudo:  1
    Width:   4
  RT_imp_bits__3_3_x_2_2_x_1_1_x_0_0_: [3,0] 
    Implements:  RT
  Res: 
    Pseudo:  1
    Width:   4
  Src1: 
    Pseudo:  1
    Width:   6
  Src2: 
    Pseudo:  1
    Width:   2
  VarInstrOpcode_imp_bits__15_15_x_14_14_x_13_13_x_12_12_: [15,12] 
Instructions:
  Name:  add_outer (rank: 100)
  Fields:  OPCD Src1 Src2 Res
  Action:  {
    D ( Res ) = D ( Src1 ) + D ( Src2 ) ;
}
  Source Registers:  D(Src1) D(Src2) 
  Target Registers:  D(Res) 
  Nested insructions:  
    Name:  add_nested2 (rank: 100)
    Width:  16
    Syntax:  "aaaaaaa %f,%f,%f":   RA RB RT
    Fields:  VarInstrOpcode_imp_bits__15_15_x_14_14_x_13_13_x_12_12_ RA_imp_bits__11_11_x_10_10_x_9_9_x_8_8_x_7_7_x_6_6_ RB_imp_bits__5_5_x_4_4_ RT_imp_bits__3_3_x_2_2_x_1_1_x_0_0_
    Alias:  add_outer OPCD(4) Src1(RA) Src2(RB) Res(RT) 
    Source Registers:  D(Src1) D(Src2) 
    Target Registers:  D(Res) 
    -------------------------------
  -------------------------------

Instruction Tables:
other:
    Mask:  0xf0000000
    4(40000000):  add_nested2
-------------------------------

