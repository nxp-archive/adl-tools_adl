//
// Tests to make sure that we'll catch bare integer fields in an instruction
// field specification.
//

define (arch = MiniPPC) {

  //
  // Registers.
  //

  define (reg=CIA) {
    """
      Current instruction address.
      """;
    attrs = cia;

  }

  define (reg=NIA) {
    """
      Next instruction address.
      """;
    attrs = nia;
  }

  define (regfile=GPR) {
    """
      General purpose registers.
      """;
    size = 32;
    prefix = r;
  }

  //
  // Instruction fields.
  //

  define (instrfield=OPCD) {
    """
Primary opcode.
    """;
    bits = (0,5);
  }

  define (instrfield=XO) {
    """
Extended opcode.
    """;
    bits = (21,30);
  }

  define (instrfield=RB) {
    """
Field used to specify a General Purpose Register to be used as a source.
    """;
    bits = (16,20);
    ref = GPR;
    type = regfile;
  }

  define (instrfield=RT) {
    """
Field used to specify a General Purpose Register to be used as a target.
    """;
    bits = (6,10);
    ref = GPR;
    type = regfile;
  }

  //
  // Instructions.
  //

  define (instr=add) {
    fields=(OPCD(31),RT,0x4,RB,XO(266));
    action = {
      GPR(RT) = GPR(RA) + GPR(RB);
    };
  }
}

define (core = P) {
  archs = MiniPPC;
}
