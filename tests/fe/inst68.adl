define (arch = sc3400){


// ------------------------------------------------------------------------------------------
// fails because of wrong syntax with nested field
// ------------------------------------------------------------------------------------------


define (mem=DMEM)    
{
	size= 0x2000;	// size of memory in bytes
	addr_unit=1;	
}
	
define (mem=IMEM)
{
	size=0x1000;
	addr_unit=1;
	instr_mem = true;
} 



define (reg=PC)
{  
	attrs = (cia,nia);
}




define (instrfield = ENC1) { bits = (0,15);};
define (instrfield = HIGHREG1) { bits = (16,18);};
define (instrfield = ESG1) { bits = (19);};
define (instrfield = YY) { bits = (0,5);};
define (instrfield = OPCD1) { bits = (6,15);};
define (instrfield = CCC) { bits = (0,2);};
define (instrfield = LPA) { bits = (3);};
define (instrfield = LPB) { bits = (4);};
define (instrfield = OPCD2) { bits = (5,8);};
define (instrfield = VLESSIZE) { bits = (9,11);};
define (instrfield = OPCD3) { bits = (12,15);};
define (instrfield = HIGHREG2) { bits = (3,4);};
define (instrfield = ESG2) { bits = (51);};
define (instrfield = HIGHREG3) { bits = (48,50);};
define (instrfield = ENC3) { bits = (32,47);};
define (instrfield = ENC4) { bits = (16,31);};
define (instrfield = JJJ) { bits = (18);};
define (instrfield = OPCD4) { bits = (3,6);};
define (instrfield = FFF) { bits = ((7,9),16);};
define (instrfield = OPCD5) { bits = (10,13);};
define (instrfield = OPCD6) { bits = (15);};
define (instrfield = OPCD7) { bits = (19);};
define (instrfield = OPCD8) { bits = (0,2);};
define (instrfield = A32) { bits = ((3,5),(16,28),(33,45));};
define (instrfield = OPCD9) { bits = (8,15);};
define (instrfield = OPCD10) { bits = (29,32);};
define (instrfield = OPCD11) { bits = (46,47);};
define (instrfield = PSD) { width = 32; pseudo = true;};

define (instrfield = DaDb) 
{ 
	width = 7; // number of  input  bits 
   	size = 8; // number of  output bits
	pseudo = true;
	
    	define (instrfield=JJJJJ) 
	{ 
		bits = (0,4); 
		table = ((0,4),(0,5),(0,6),(0,7), 
		 	(1,4),(1,5),(1,6),(1,7), 
		 	(2,4),(2,5),(2,6),(2,7),
		 	(3,4),(3,5),(3,6),(3,7), 
		 	(0,0),(0,1),(0,2),(0,3),
		 	(4,4),(4,5),(4,6),(4,7),
		 	(1,2),(1,3),(5,6),(5,7),
		 	(2,2),(2,3),(6,6),(6,7)); 
 	}
	
	fields = (6,JJJJJ(1),5,JJJJJ(0));
    	
   	define(instrfield=Da) { // This nested field refers to the computed value of DaDb
        	width = 4;
		fields = (0,3);  // ! changed from bits (0,3) of ThisField.
   	}	
   	define(instrfield=Db) {
		width=4;
		fields = (4,7);	  // ! changed from (7,4)
   	}	

}
define (instr=OneWord) 
{  
  	fields = (ENC1(112),HIGHREG1,ESG1(1));
  	width = 24;
        action = {}; 
}

define (instr=ThreeWords) 
{  
  	fields = (ESG2(1),HIGHREG3,OPCD1(123),ENC4(21));
	width = 56;
  	action = {};
}




define (instr=OW_Prefix)  	// One word prefix
{
  	fields =(LPA,LPB,OPCD2(6),VLESSIZE,OPCD8(7));	
  	width = 16;
	action = {};
}


define (instr=OW_HR_Prefix)  
{
  	fields = (HIGHREG2,OPCD2(14),VLESSIZE,OPCD8(9));
  	width = 16;
	action = {};
}



define(instr=cmpeq)  			// if Da==Dn , then 1-> SR.T , else 0 -> SR.T
{ 
   fields = (JJJ,OPCD4(12),FFF,OPCD5(12),OPCD6(0),OPCD8(0)); 
   width = 24;	   
   action = {};
    
}
define (instr=ADD1) {
  fields = ((bits(0,24),0xadada),
	    (bits(25,31),DaDb));
  syntax = ("%i %f",DaDb.Dc);
  action = {};
}

define (instr=ADD2) {
  fields = ((bits(0,24),0xbdada),
	    (bits(25,31),DaDb));
  syntax = ("%i %f",DaDb.Dc);
  action = {};
}

define (instr=ADD3) {
  fields = ((bits(0,24),0xcdada),
	    (bits(25,31),DaDb));
  syntax = ("%i %f",DaD.Da);
  action = {};
}

define (instr=ADD4) {
  fields = ((bits(0,24),0xddada),
	    (bits(25,31),DaDb));
  syntax = ("%i %f %f",PSD,DaDb.Db,DaDb.Da(PSD>0?DaDb.Da : DaDb.Db));
  action = {};
}


define (instr=jmp) {
   	fields = (OPCD11(118));
   	action = {}; 
}

define (instr=ESG_Prefix)  
{
	fields = (YY,OPCD1(0xC0));
  	width = 16;
	action = {};
}


// --------------------------------------------------------------------------------------------------------

} // arch


define (core = StarCore)
{
	archs = sc3400;
}
