//
// Make sure that we don't use the conflict mask until we've tried all words w/o
// using them first.  This avoids more serious conflicts when we just look at a
// conflict mask that might be too specific.
//
define (arch=minippc) {
  attrs = (one,two); 
  
  define (reg = REG1) {
    attrs = (cia,nia);
  }
  define(instrfield=R1){
    width = 6;
    pseudo = true;
  }
  define(instrfield=R2) {
    width = 6;
    pseudo = true;
  }
  define(instrfield=R3){
    width = 6;
    pseudo = true;
  }

  define (instrfield=CG) {
    width = 1;
    pseudo = true;
    allow_conflict = true;
  }

  define (instr = a){
    attrs = one;
    fields = (
              (bits(0,3),b1100),
              (bits(4),CG),
              (bits(5,7),b100),
              (bits(8,10),b100),
              (bits(11,16),R1),
              (bits(17,22),R2),
              (bits(26,31),R3),
              (bits(54,63),0xff)
              );
    action={};
  }

  define (instr = b){
    attrs = (one,two);
    fields = (
              (bits(0,3),b1100),
              (bits(4),CG),
              (bits(5,7),b100),
              (bits(8,10),b100),
              (bits(11,16),R1),
              (bits(17,22),R2),
              (bits(26,31),R3),
              (bits(54,63),0xfe)
              );
    action={};
  }

  define (instr = c){
    attrs = (one,two);
    fields = (
              (bits(0,3),b1100),
              (bits(4),CG),
              (bits(5,7),b100),
              (bits(8,10),b100),
              (bits(11,16),R1),
              (bits(17,22),R2),
              (bits(26,31),R3),
              (bits(54,63),0xfd)
              );
    action={};
  }

}

define (core=P) {
  archs=minippc;
  instrtables = (one);
}
