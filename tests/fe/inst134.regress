======
Cores:
======
Name:  "P"
Bit Order:              little endian
Blocks:
dalu ipu lsu 
Register Files:
  Name:  "GPR"
  Size:  32
  Prefix:  r
  Usage:  read, written
  Width:  32
  -------------------------------
Registers:
  Name:  "LC"
  Width:  32
  -------------------------------
  Name:  "PC"
  Usage:  read, written
  Width:  32
  Serial: 1
  Attributes:  cia nia
  -------------------------------
  Name:  "SP"
  Read alias/hook:
    {
    if ( SR . T1 == 0 ) {
        return GPR ( 0 ) ;
    } else if ( SR . T1 == 1 ) {
        return GPR ( 1 ) ;
    }
}
    Source Registers:  GPR(0)? GPR(1)? SR[mask 0x00000001]/p 

  Width:  32
  Attributes:  doc_hidden
  Documention:

 Stack Pointer
 
  -------------------------------
  Name:  "SR"
  Usage:  field-read
  Width:  32
    T1[0]   
      Usage:  field-read
       SR.T1 field
    T6[1]   
  -------------------------------
Parallel execution packet size: 3
Current-instruction-address register:  PC
Next-instruction-address register:  PC
Real-address Mask:
  Initial mask:  0xffffffff (constant)
Effective-address Mask:
  Initial mask:  0xffffffff (constant)
Instruction Fields:
  CE: 
    Pseudo:  1
    Width:   4
    Assembler:  1
    Default value :'0'
  CE1: [not used] 
    Pseudo:  1
    Width:   2
    Assembler:  1
    Default value :'0'
  CE_imp_bits__17_17_x_16_16_x_5_5_x_4_4_: [17,16] [5,4] 
    Implements:  CE
  CondEx: [instrfield: CondExec] [not used]
    Pseudo:  1
    Width:   6
    Size: 2
    Prefix:  1
    Indexed:  2 
    Default value :'0'
  CondExec: 
    Pseudo:  1
    Width:   6
    Size: 2
    Prefix:  1
    Indexed:  2 
    Default value :'0'
  CondExec_imp_bits__17_16_: [17,16] 
    Implements:  CondExec
  CondExec_imp_bits__33_32_: [33,32] 
    Implements:  CondExec
  Enc1: 
    Pseudo:  1
    Width:   16
  Enc1_imp_bits__15_0_: [15,0] 
    Implements:  Enc1
  Enc2: 
    Pseudo:  1
    Width:   32
  Enc2_imp_bits__31_0_: [31,0] 
    Implements:  Enc2
  FIDD11: [not used] 
    Pseudo:  1
    Width:   4
    Assembler:  1
    Default value :'11'
  IFT: [instrfield: CondExec]
    Pseudo:  1
    Width:   6
    Size: 2
    Prefix:  1
    Indexed:  2 
    Default value :'0'
  IFT_imp_bits__11_11_x_10_10_x_9_9_x_8_8_x_7_7_x_6_6_: [11,6] 
    Implements:  IFT
  IMM: [not used] 
    Signed:  1
    Pseudo:  1
    Width:   3
  OP1: 
    Pseudo:  1
    Width:   2
  OP1_imp_bits__7_7_x_6_6_: [7,6] 
    Implements:  OP1
  OP2: 
    Pseudo:  1
    Width:   2
  OP2_imp_bits__13_13_x_8_8_: [13,13] [8,8] 
    Implements:  OP2
  OPCD: 
    Pseudo:  1
    Complementary:  1
  RA: [regfile:  GPR]
    Pseudo:  1
    Width:   3
  RA_imp_bits__11_11_x_10_10_x_9_9_: [11,9] 
    Implements:  RA
  RB: [regfile:  GPR] [not used]
    Pseudo:  1
    Width:   3
  RT: [regfile:  GPR]
    Pseudo:  1
    Width:   2
  Res1: [not used] 
    Pseudo:  1
    Width:   5
  Rk: [regfile:  GPR] [not used]
    Pseudo:  1
    Width:   4
    Enums:  'r0::r7' 'r1::r8' 'r2::r10' 'r3::r11' 'r4::r12' 'r5::r13' 'r6::r14' 'r7::r15' 
  SG: 
    Pseudo:  1
    Width:   1
    Reserved:  1
    Assembler:  1
    Default value :'0'
  SG_imp_bits__15_15_: [15,15] 
    Implements:  SG
  Src1: [not used] 
    Pseudo:  1
    Width:   3
  Src2: [not used] 
    Pseudo:  1
    Width:   3
  VarInstrOpcode_imp_bits__14_14_x_12_12_x_3_3_x_2_2_x_1_1_x_0_0_: [14,14] [12,12] [3,0] 
  VarPrefixOpcode_imp_bits__15_15_x_14_14_x_13_13_x_12_12_x_5_5_x_4_4_x_3_3_x_2_2_x_1_1_x_0_0_: [15,12] [5,0] 
    Prefix:  1
  VlesSize: [not used] 
    Pseudo:  1
    Width:   3
    Prefix:  1
    Default value :'0'
Instructions:
  Name:  LPREFIX (rank: 100)
  Width:  16
  Syntax:  "LPREFIX,  IFT => %f":   IFT
  Attributes:  prefix
  Fields:  VarPrefixOpcode_imp_bits__15_15_x_14_14_x_13_13_x_12_12_x_5_5_x_4_4_x_3_3_x_2_2_x_1_1_x_0_0_ IFT_imp_bits__11_11_x_10_10_x_9_9_x_8_8_x_7_7_x_6_6_
  Prefix:  1
  -------------------------------
  Name:  OneWord (rank: 100)
  Width:  18
  Fetch width:  16
  Fields:  CondExec_imp_bits__17_16_ Enc1_imp_bits__15_0_
  Pseudo:  1
  -------------------------------
  Name:  TwoWord (rank: 100)
  Width:  34
  Fetch width:  32
  Fields:  CondExec_imp_bits__33_32_ Enc2_imp_bits__31_0_
  Pseudo:  1
  -------------------------------
  Name:  move_family (rank: 100)
  Block:  dalu
  Fields:  OPCD RA OP1 OP2 CE
  Action:  {
    info ( 1 , "CE= " << CE , ", RA= " << RA , ", OP1= " << OP1 , ", OP2= " << OP2 ) ;
    GPR ( RA + OP1 ) = 1 ;
    GPR ( RA + OP2 ) = 2 ;
}
  Target Registers:  GPR(RA + OP1) GPR(RA + OP2) 
  Nested insructions:  
    Name:  move (rank: 100)
    Width:  18
    Fetch width:  16
    Syntax:  "move %f,%f":   RA RT
    Block:  dalu
    Attributes:  type1 first
    Fields:  CE_imp_bits__17_17_x_16_16_x_5_5_x_4_4_ SG_imp_bits__15_15_(reserved) VarInstrOpcode_imp_bits__14_14_x_12_12_x_3_3_x_2_2_x_1_1_x_0_0_ OP2_imp_bits__13_13_x_8_8_ RA_imp_bits__11_11_x_10_10_x_9_9_ OP1_imp_bits__7_7_x_6_6_
    Alias:  move_family OPCD(63) RA(RA) OP1(OP1) OP2(OP2) CE(CE) 
    Target Registers:  GPR(RA + OP1) GPR(RA + OP2) 
    Type:  OneWord
    -------------------------------
  -------------------------------

Instruction Tables:
prefix(prefix):
    Mask:  0xf03f0000
    3(30000):  LPREFIX
type1:
    Mask:  0x1c73c000
    20815(1453c000):  move
type2:
  
Assember configuration:
  Comment strings: ';' 
  Line comment strings: ';' 
  Line separators: '\n' 
  Explicit regnames: 1
  Packet grouping: ('[',']') '\n' 
  Assembler instruction tables: prefix type2 type1
  Disassembler instruction tables: prefix type2 type1 
-------------------------------

