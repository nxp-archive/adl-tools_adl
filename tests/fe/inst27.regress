======
Cores:
======
Name:  "P"
Register Files:
  Name:  "GPR"
  Size:  32
  Usage:  read, written
  Width:  32
  Documention:

    General purpose registers.
    
  -------------------------------
Registers:
  Name:  "CIA"
  Usage:  read, written
  Width:  32
  Attributes:  cia
  Documention:

    Current instruction address.
    
  -------------------------------
  Name:  "CTR"
  Width:  32
  Documention:

    The counter register.
    
  -------------------------------
  Name:  "NIA"
  Usage:  read, written
  Width:  32
  Attributes:  nia
  Documention:

    Next instruction address.
    
  -------------------------------
Current-instruction-address register:  CIA
Next-instruction-address register:  NIA
Real-address Mask:
  Initial mask:  0xffffffff (constant)
Effective-address Mask:
  Initial mask:  0xffffffff (constant)
Instruction Fields:
  OPCD: [0,5] 
        Primary opcode.
    
  RA: [11,15] 
        Field used to specify a General Purpose Register to be used as a source.
    
  RT: [6,10] 
        Field used to specify a General Purpose Register to be used as a target.
    
  SI: [16,31] 
        Signed immediate field for arithmetic operations.
    
Instructions:
  Name:  addis (rank: 100)
  Width:  32
  Fields:  OPCD(15) RT RA SI
  Action:  {
     var f = bits < 64 > ( 0xFFFFFFFFFFFFFFFFULL ) ;
    if ( RA == 0 ) {
        GPR ( RT ) = signExtend ( SI , 32 ) << 16 ;
    } else {
        GPR ( RT ) = GPR ( RA ) + ( signExtend ( SI , 24 ) << 16 ) ;
    }
}
  Source Registers:  GPR(RA)? 
  Target Registers:  GPR(RT) 
  -------------------------------
  Name:  halt1 (rank: 100)
  Width:  8
  Fields:  OPCD(0)
  Action:  {
    halt (  ) ;
}
  Post-fetch logic disabled.
  -------------------------------
  Name:  halt2 (rank: 100)
  Width:  8
  Fields:  OPCD(1)
  Action:  {
    halt (  ) ;
}
  Post-fetch enable:  func (  ) {
    return ( GPR ( 31 ) == 0 ) ;
}
Source Registers:  GPR(31) 

  -------------------------------

Instruction Tables:
other:
    Mask:  0xfc000000
    0(0):  halt1
    1(4000000):  halt2
    15(3c000000):  addis
-------------------------------

