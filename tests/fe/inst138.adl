//
// Tests to make sure that we can group and remove relocations.
//
define (arch=minippc) {


  define(reloc=R1) {
    value = 1;
  }		
  define(reloc=R2) {
    value = 8;
  }

  define(reloc=R8) {
    value = 12;
  }

  define(reloc=D1) {
    value = 7;
    width = 32;
  };

  define (reg = pc) {
    attrs = (cia,nia);
  }

  define (instrfield=OPCD) {
    """
    Primary opcode.
    """;
    bits = (0,5);
    reloc = R8;	
  }

  define (instrfield=XO) {
    """
    Extended opcode.
    """;
    bits = (21,30);
    reloc = R1;
  }

  define (instrfield=SPRN) {
    """
    Field used to specify a Special Purpose Register for the *mtspr* and *mfspr* instructions.
    """;
    bits = ((16,20),(11,15));
  }
  define (instrfield=RA) {
    """
    Field used to specify a General Purpose Register to be used as a source.
    """;
    bits = (11,15);
    reloc = R2;
  }
  define (instrfield=RB) {
    """
    Field used to specify a General Purpose Register to be used as a source.
    """;
    pseudo = true;
    width = 3;
    reloc = D1;
  }
  define(instr=Foo) {
     fields = (SPRN(3),RB);
     width = 32;
     action = {};
  } 	

  define (group = all_relocs) {
    items = "*";
    type = reloc;
  }

  define (group = all_if) {
    items = "*";
    type = instrfield;
  }

  defmod (reloc= *all_relocs) {
    remove = 1;
  }

  defmod (instrfield=*all_if) {
    remove reloc;
  }

}

define (core=P) {
  archs=minippc;
}
