//
// Tests that we'll consider partial writes, e.g. slice and field accesses,
// as both register sources and targets.
//

define (arch=minippc) {

  define (mem=MemA) {
    size = 2048;
    addr_unit = 1;
  }

  define (reg=A) { }

  define (reg=B) { 
    define (field=X) {
      indexed = 8;
    } 
  }

  define (reg=C) {
    define (field=Y) {
      bits=(0,15);
    }   
  }

  define (regfile = GPR) {
    size = 32;

    define (field=X) {
      bits = (16,31);
    }
  }

  define (instrfield=OPCD) {
    bits = (0,5);
  }

  define (instrfield=XO) {
    bits = (21,30);
  }

  define (instrfield=RA) {
    bits = (11,15);
    ref = GPR;
    type=regfile;
  }

  define (instrfield=RB) {
    bits = (16,20);
    ref = GPR;
    type=regfile;
  }

  define (instrfield=RT) {
    bits = (6,10);
    ref = GPR;
    type=regfile;
  }

  define (instr=add) {
    fields=(OPCD(31),RT,RA,RB,XO(266));
    action = {
      // These should show up as partial targets, since we're modifying slices
      // and fields.
      A(2,10) = 10;
      B.X(1) = 20;
      C.Y = 30;

      GPR(RT)(0,15) = 20;
      GPR(RA).X = 30;
    };
  }

  define (reg = pc) {
    attrs = (cia,nia);
  }

}

define (core=P) {
  archs=minippc;
}
