======
Cores:
======
Name:  "P"
Blocks:
blue green red 
Register Files:
  Name:  "GPR"
  Size:  32
  Usage:  read, written
  Width:  32
  -------------------------------
Registers:
  Name:  "pc"
  Usage:  read, written
  Width:  32
  Attributes:  cia nia
  -------------------------------
Current-instruction-address register:  pc
Next-instruction-address register:  pc
Real-address Mask:
  Initial mask:  0xffffffff (constant)
Effective-address Mask:
  Initial mask:  0xffffffff (constant)
Instruction Fields:
  OPCD: [0,5] 
  R1: 
    Pseudo:  1
    Width:   5
  R2: 
    Pseudo:  1
    Width:   5
  R3: 
    Pseudo:  1
    Width:   5
  RA: [11,15] 
  RB: [16,20] 
  RT: [6,10] 
  SI: [16,31] 
  XO: [21,30] 
Instructions:
  Name:  add (rank: 100)
  Width:  32
  Block:  green
  Fields:  OPCD(31) RT RA RB XO(266)
  Action:  {
    GPR ( RT ) = GPR ( RA ) + GPR ( RB ) ;
}
  Source Registers:  GPR(RA) GPR(RB) 
  Target Registers:  GPR(RT) 
  -------------------------------
  Name:  add2 (rank: 100) (shorthand) (no-disassemble)
  Width:  32
  Syntax:  "add %f,%f,%f,%f":   R1 R2 R3 SI
  Blocks:  red green
  Fields:  R3 SI R1 R2
  Alias:  addi RT(R3) RA(R3) SI(SI) , add RT(R1) RA(R2) RB(R3) 
  Source Registers:  GPR(RA)? GPR(RB) 
  Target Registers:  GPR(RT) 
  -------------------------------
  Name:  add3 (rank: 100) (shorthand) (no-disassemble)
  Width:  32
  Syntax:  "add %f,%f":   R1 SI
  Block:  blue
  Fields:  R1 SI
  Alias:  addi RT(R1) RA(R1) SI(SI) , add RT(R1) RA(R1) RB(R1) 
  Source Registers:  GPR(RA)? GPR(RB) 
  Target Registers:  GPR(RT) 
  -------------------------------
  Name:  addi (rank: 100)
  Width:  32
  Block:  red
  Fields:  OPCD(14) RT RA SI
  Action:  {
    if ( RA == 0 ) {
        GPR ( RT ) = SI ;
    } else {
        GPR ( RT ) = GPR ( RA ) + SI ;
    }
}
  Source Registers:  GPR(RA)? 
  Target Registers:  GPR(RT) 
  -------------------------------

Instruction Tables:
other:
    Mask:  0xfc000000
    14(38000000):  addi
    31(7c000000):      Mask:  0x7fe
      266(214):  add
-------------------------------

