//
// Tests that we'll consider partial writes, e.g. slice and field accesses,
// as both register sources and targets.
//

define (arch=minippc) {

  define (mem=MemA) {
    size = 2048;
    addr_unit = 1;
  }

  define (reg=A) { }

  define (reg=B) { }

  define (regfile = GPR) { 
    size = 32;
  }

  define (instrfield=OPCD) {
    bits = (0,5);
  }

  define (instrfield=XO) {
    bits = (21,30);
  }

  define (instrfield=RA) {
    bits = (11,15);
    ref = GPR;
    type=regfile;
  }

  define (instrfield=RB) {
    bits = (16,20);
    ref = GPR;
    type=regfile;
  }

  define (instrfield=RT) {
    bits = (6,10);
    ref = GPR;
    type=regfile;
  }

  define (instr=add) {
    fields=(OPCD(31),RT,RA,RB,XO(266));
    action = {
      A += B;
    };
  }

  define (instr=addi) {
    fields=(OPCD(31),RT,RA,RB,XO(267));
    action = {
      var a = 20;
      a *= 3;
      GPR(RT) += B;
    };
  }

  define (reg = pc) {
    attrs = (cia,nia);
  }

}

define (core=P) {
  archs=minippc;
}
