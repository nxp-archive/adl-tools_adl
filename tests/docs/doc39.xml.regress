<?xml version="1.0" encoding="UTF-8" ?>

<data>
<cores>
<core name="rubber">
<bit_endianness>
<str>little</str>
</bit_endianness>
<RaMask>
<initial>
<str>0xffffffff</str>
</initial>
<constant>
<true />
</constant>
</RaMask>
<EaMask>
<initial>
<str>0xffffffff</str>
</initial>
<constant>
<true />
</constant>
</EaMask>
<regs>
<register name="cIA">
<doc>
<str><![CDATA[
    Current instruction address
    
]]></str>
</doc>
<width>
<int>32</int>
</width>
<attributes>
<attribute name="cia">
<str></str>
</attribute>
</attributes>
<shared>
<int>0</int>
</shared>
</register>
<register name="nIA">
<doc>
<str><![CDATA[
    Next instruction address
    
]]></str>
</doc>
<width>
<int>32</int>
</width>
<attributes>
<attribute name="nia">
<str></str>
</attribute>
</attributes>
<shared>
<int>0</int>
</shared>
</register>
</regs>
<relocations>
<reloc name="R_MEM_18">
<abbrev>
<str>fun2</str>
</abbrev>
<field_width>
<int>18</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>3</int>
</value>
<right_shift>
<int>0</int>
</right_shift>
</reloc>
<reloc name="R_PMEM_18">
<abbrev>
<str>fun</str>
</abbrev>
<field_width>
<int>18</int>
</field_width>
<pcrel>
<false />
</pcrel>
<value>
<int>2</int>
</value>
<right_shift>
<int>2</int>
</right_shift>
</reloc>
</relocations>
<instrfields>
<instrfield name="LI18R2">
<doc>
<str><![CDATA[
    Immediate address field for jump instruction
    
]]></str>
</doc>
<pseudo>
<true />
</pseudo>
<width>
<int>18</int>
</width>
<size>
<int>18</int>
</size>
<shift>
<int>2</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0x0</str>
</mask>
<addr>
<str>abs</str>
</addr>
<display>
<str>hex</str>
</display>
<type>
<str>imm</str>
</type>
<reloc>
<str>R_PMEM_18</str>
</reloc>
</instrfield>
<instrfield name="LI18R2_imp_bits__18_1_">
<bits>
<range>
<int>18</int>
<int>1</int>
</range>
</bits>
<width>
<int>18</int>
</width>
<size>
<int>18</int>
</size>
<shift>
<int>2</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0x7fffe</str>
</mask>
<addr>
<str>abs</str>
</addr>
<display>
<str>hex</str>
</display>
<type>
<str>imm</str>
</type>
<implements>
<str>LI18R2</str>
</implements>
<reloc>
<str>R_PMEM_18</str>
</reloc>
</instrfield>
<instrfield name="LI18R3">
<doc>
<str><![CDATA[
    Immediate address field for jump instruction
    
]]></str>
</doc>
<pseudo>
<true />
</pseudo>
<width>
<int>18</int>
</width>
<size>
<int>18</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0x0</str>
</mask>
<addr>
<str>abs</str>
</addr>
<display>
<str>hex</str>
</display>
<type>
<str>imm</str>
</type>
<reloc>
<str>R_MEM_18</str>
</reloc>
</instrfield>
<instrfield name="LI18R3_imp_bits__18_1_">
<bits>
<range>
<int>18</int>
<int>1</int>
</range>
</bits>
<width>
<int>18</int>
</width>
<size>
<int>18</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0x7fffe</str>
</mask>
<addr>
<str>abs</str>
</addr>
<display>
<str>hex</str>
</display>
<type>
<str>imm</str>
</type>
<implements>
<str>LI18R3</str>
</implements>
<reloc>
<str>R_MEM_18</str>
</reloc>
</instrfield>
<instrfield name="VarInstrOpcode_imp_bits__31_0_">
<bits>
<range>
<int>31</int>
<int>0</int>
</range>
</bits>
<width>
<int>32</int>
</width>
<size>
<int>32</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xffffffff</str>
</mask>
<type>
<str>imm</str>
</type>
</instrfield>
<instrfield name="VarInstrOpcode_imp_bits__31_30_">
<bits>
<range>
<int>31</int>
<int>30</int>
</range>
</bits>
<width>
<int>2</int>
</width>
<size>
<int>2</int>
</size>
<shift>
<int>0</int>
</shift>
<offset>
<int>0</int>
</offset>
<mask>
<str>0xc0000000</str>
</mask>
<type>
<str>imm</str>
</type>
</instrfield>
</instrfields>
<instrs>
<instruction name="done">
<width>
<int>32</int>
</width>
<syntax>
<str>done</str>
</syntax>
<dsyntax>
<str>done</str>
</dsyntax>
<fields>
<field name="VarInstrOpcode_imp_bits__31_0_">
<int>0</int>
</field>
</fields>
<action>
<str><![CDATA[
{
    halt (  ) ;
}
]]></str>
</action>
<disassemble>
<true />
</disassemble>
</instruction>
<instruction name="jmp">
<width>
<int>32</int>
</width>
<syntax>
<str>jmp LI18R2</str>
</syntax>
<dsyntax>
<str>jmp ${LI18R2}</str>
</dsyntax>
<fields>
<field name="VarInstrOpcode_imp_bits__31_30_">
<int>2</int>
</field>
<field name="LI18R2_imp_bits__18_1_">
<str></str>
</field>
</fields>
<action>
<str><![CDATA[
{
    nIA = LI18R2 ;
}
]]></str>
</action>
<disassemble>
<true />
</disassemble>
<outputs>
<str>nIA</str>
</outputs>
</instruction>
<instruction name="jmp2">
<width>
<int>32</int>
</width>
<syntax>
<str>jmp2 LI18R3</str>
</syntax>
<dsyntax>
<str>jmp ${LI18R3}</str>
</dsyntax>
<fields>
<field name="VarInstrOpcode_imp_bits__31_30_">
<int>3</int>
</field>
<field name="LI18R3_imp_bits__18_1_">
<str></str>
</field>
</fields>
<action>
<str><![CDATA[
{
    nIA = LI18R3 ;
}
]]></str>
</action>
<disassemble>
<true />
</disassemble>
<outputs>
<str>nIA</str>
</outputs>
</instruction>
<instruction name="nop">
<width>
<int>32</int>
</width>
<syntax>
<str>nop</str>
</syntax>
<dsyntax>
<str>nop</str>
</dsyntax>
<fields>
<field name="VarInstrOpcode_imp_bits__31_0_">
<int>65535</int>
</field>
</fields>
<action>
<str><![CDATA[
{
}
]]></str>
</action>
<disassemble>
<true />
</disassemble>
</instruction>
</instrs>
<core-level-hooks>
<decode-miss>
<str><![CDATA[

]]></str>
</decode-miss>
<pre-cycle>
<str><![CDATA[

]]></str>
</pre-cycle>
<post-cycle>
<str><![CDATA[

]]></str>
</post-cycle>
<pre-fetch>
<str><![CDATA[

]]></str>
</pre-fetch>
<post-fetch>
<str><![CDATA[

]]></str>
</post-fetch>
<post-exec>
<str><![CDATA[

]]></str>
</post-exec>
<post-asm>
<str><![CDATA[

]]></str>
</post-asm>
<post-packet-asm>
<str><![CDATA[

]]></str>
</post-packet-asm>
<post-packet>
<str><![CDATA[

]]></str>
</post-packet>
<active-watch>
<str><![CDATA[

]]></str>
</active-watch>
<instr-table-watch>
<str><![CDATA[

]]></str>
</instr-table-watch>
</core-level-hooks>
<asm_config>
<comments>
<str>#</str>
</comments>
<line_comments>
<str>#</str>
</line_comments>
</asm_config>
</core>
</cores>
<systems>
</systems>
</data>
