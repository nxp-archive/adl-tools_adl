=================
ADL Documentation
=================

.. contents:: Table of Contents
   :backlinks: entry
   :depth: 2

.. sectnum::

.. |ne|:  mathml:: ne
.. |le|:  mathml:: leq
.. |ge|:  mathml:: geq
.. |la|:  mathml:: wedge
.. |lo|:  mathml:: vee
.. |xor|: mathml:: oplus


.. _adl-internal-target-0:
Core: P
=======


.. _adl-internal-target-1:
Registers
---------


.. _adl-internal-target-2:
*CIA*
`````


.. raw:: html

   <table class="field">
   <tr><td colspan="2" width="100%" class="field">CIA</td>
   </tr>
   <tr>
   <td class="leftodd">0</td><td class="rightodd">31</td>
   </tr>
   </table>
   
Description:

  Current instruction address.
  
  


.. _adl-internal-target-3:
*CR*
````


.. raw:: html

   <table class="field">
   <tr><td colspan="2" width="100%" class="field">CR</td>
   </tr>
   <tr>
   <td class="leftodd">0</td><td class="rightodd">31</td>
   </tr>
   </table>
   
Description:

  The condition register.
  
  


.. _adl-internal-target-4:
*CTR*
`````


.. raw:: html

   <table class="field">
   <tr><td colspan="2" width="100%" class="field">CTR</td>
   </tr>
   <tr>
   <td class="leftodd">0</td><td class="rightodd">31</td>
   </tr>
   </table>
   
Description:

  The counter register.
  
  


.. _adl-internal-target-5:
*HID0*
``````


.. raw:: html

   <table class="field">
   <tr><td colspan="2" width="100%" class="field">HID0</td>
   </tr>
   <tr>
   <td class="leftodd">0</td><td class="rightodd">31</td>
   </tr>
   </table>
   

.. _adl-internal-target-6:
*HID1*
``````


.. raw:: html

   <table class="field">
   <tr><td colspan="2" width="100%" class="field">HID1</td>
   </tr>
   <tr>
   <td class="leftodd">0</td><td class="rightodd">31</td>
   </tr>
   </table>
   

.. _adl-internal-target-7:
*LR*
````


.. raw:: html

   <table class="field">
   <tr><td colspan="2" width="100%" class="field">LR</td>
   </tr>
   <tr>
   <td class="leftodd">0</td><td class="rightodd">31</td>
   </tr>
   </table>
   
Description:

  The link register.
  
  


.. _adl-internal-target-8:
*NIA*
`````


.. raw:: html

   <table class="field">
   <tr><td colspan="2" width="100%" class="field">NIA</td>
   </tr>
   <tr>
   <td class="leftodd">0</td><td class="rightodd">31</td>
   </tr>
   </table>
   
Description:

  Next instruction address.
  
  


.. _adl-internal-target-9:
*XER*
`````


.. raw:: html

   <table class="field">
   <tr><td width="3.125%" class="field">SO</td>
   <td width="3.125%" class="field">OV</td>
   <td width="3.125%" class="field">CA</td>
   <td colspan="2" width="90.625%" class="reserved" title="Reserved"></td>
   </tr>
   <tr>
   <td class="singleodd">0</td>
   <td class="singleeven">1</td>
   <td class="singleodd">2</td>
   <td class="lefteven">3</td><td class="righteven">31</td>
   </tr>
   </table>
   
Description:

  The overflow and carry register.
  
  

Fields:
  .. list-table::
     :class: attributes
     :widths: 15 10 40
     :header-rows: 1
  
     * - Field
       - Range
       - Description
     * - SO
       -  [0] 
       - 
     * - OV
       -  [1] 
       - 
     * - CA
       -  [2] 
       - 


.. _adl-internal-target-10:
Register Files
--------------


.. _adl-internal-target-11:
*GPR*
`````


.. raw:: html

   <table class="field">
   <tr><td colspan="2" width="100%" class="field">GPR</td>
   </tr>
   <tr>
   <td class="leftodd">0</td><td class="rightodd">31</td>
   </tr>
   </table>
   
Number of registers in file:  32

Description:

  General purpose registers.
  
  


.. _adl-internal-target-12:
*SPR*
`````


.. raw:: html

   <table class="field">
   <tr><td colspan="2" width="100%" class="field">SPR</td>
   </tr>
   <tr>
   <td class="leftodd">0</td><td class="rightodd">31</td>
   </tr>
   </table>
   
Number of registers in file:  1024

Description:

  Special purpose registers.
  
  

.. list-table:: Constituent Registers
   :class: sparsecontents
   :widths: 10 40
   :header-rows: 1

   * - Index
     - Register Usage
   * - 1
     - `XER <#adl-internal-target-9>`__
   * - 8
     - `LR <#adl-internal-target-7>`__
   * - 9
     - `CTR <#adl-internal-target-4>`__
   * - 50
     - `HID0 <#adl-internal-target-5>`__
   * - 51
     - `HID1 <#adl-internal-target-6>`__
   

.. _adl-internal-target-13:
Instruction Fields
------------------

.. raw:: html

   <a href="#ifield-section-a">&nbsp;&nbsp;A&nbsp;&nbsp;</a> <a href="#ifield-section-b">&nbsp;&nbsp;B&nbsp;&nbsp;</a> <a href="#ifield-section-c">&nbsp;&nbsp;C&nbsp;&nbsp;</a> <a href="#ifield-section-d">&nbsp;&nbsp;D&nbsp;&nbsp;</a> <a href="#ifield-section-l">&nbsp;&nbsp;L&nbsp;&nbsp;</a> <a href="#ifield-section-m">&nbsp;&nbsp;M&nbsp;&nbsp;</a> <a href="#ifield-section-o">&nbsp;&nbsp;O&nbsp;&nbsp;</a> <a href="#ifield-section-r">&nbsp;&nbsp;R&nbsp;&nbsp;</a> <a href="#ifield-section-s">&nbsp;&nbsp;S&nbsp;&nbsp;</a> <a href="#ifield-section-u">&nbsp;&nbsp;U&nbsp;&nbsp;</a> <a href="#ifield-section-x">&nbsp;&nbsp;X&nbsp;&nbsp;</a> <a href="#ifield-section-y">&nbsp;&nbsp;Y&nbsp;&nbsp;</a> 


.. _ifield-section-a:


.. _adl-internal-target-14:
*AA*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 1
   * - Bits
     - [30,30] 

Description:

  Absolute address bit.
  
  


.. _ifield-section-b:


.. _adl-internal-target-15:
*BD*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 14
   * - Shift
     - 2
   * - Bits
     - [16,29] 
   * - Addressing
     - PC-Relative
   * - Signed
     - True

Description:

  Immediate field specifying a 14-bit signed two's complement branch displacement
  which is concatenated on the right with 0b00 and sign-extended.
  
  


Semantics:  **CIA + (SignExtend(BD << 2))**


.. _adl-internal-target-16:
*BF*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 3
   * - Bits
     - [6,8] 

Description:

  Field used to specify one of the Condition Register fields or one of the
  Floating-Point Status and Control Register fields to be used as a target.
  
  


.. _adl-internal-target-17:
*BI*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 5
   * - Bits
     - [11,15] 

Description:

  Field used to specify a bit in the Condition Register to be used
  as the condition of a Branch Conditional instruction.
  
  


.. _adl-internal-target-18:
*BO*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 5
   * - Bits
     - [6,10] 

Description:

  Field used to specify options for the Branch Conditional instructions.
  
  


.. _ifield-section-c:


.. _adl-internal-target-19:
*CRn*
`````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 3

Description:

  Assembler field used to specify a CR field for a conditional branch.
  
  


.. _ifield-section-d:


.. _adl-internal-target-20:
*D*
```


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 16
   * - Bits
     - [16,31] 
   * - Signed
     - True

Description:

  Immediate field used to specify a 16-bit signed two's complement integer
  which is sign-extended to 64-bits.
  
  


Semantics:  **SignExtend(D)**


.. _ifield-section-l:


.. _adl-internal-target-21:
*L*
```


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 1
   * - Bits
     - [10,10] 

Description:

  Unused for 32-bit implementations.
  
  


.. _adl-internal-target-22:
*LI*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 24
   * - Shift
     - 2
   * - Bits
     - [6,29] 
   * - Addressing
     - PC-Relative
   * - Signed
     - True

Description:

  Immediate address field for branch instructions.
  
  


Semantics:  **CIA + (SignExtend(LI << 2))**


.. _adl-internal-target-23:
*LK*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 1
   * - Bits
     - [31,31] 

Description:

  LINK bit.
  
  


.. _ifield-section-m:


.. _adl-internal-target-24:
*MB*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 5
   * - Bits
     - [21,25] 


.. _adl-internal-target-25:
*MBE*
`````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 32

Description:

  In order to support a 4-operand form of rlwinm, we use this field, which is
  interpreted as a bitmask.
  
  


.. _adl-internal-target-26:
*ME*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 5
   * - Bits
     - [26,30] 


.. _ifield-section-o:


.. _adl-internal-target-27:
*OPCD*
``````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 6
   * - Bits
     - [0,5] 

Description:

  Primary opcode.
  
  


.. _ifield-section-r:


.. _adl-internal-target-28:
*RA*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 5
   * - Bits
     - [11,15] 

Description:

  Field used to specify a General Purpose Register to be used as a source.
  
  


Reference: **`GPR <#adl-internal-target-11>`__**

Permitted values:
  r0 - r31


.. _adl-internal-target-29:
*RB*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 5
   * - Bits
     - [16,20] 

Description:

  Field used to specify a General Purpose Register to be used as a source.
  
  


Reference: **`GPR <#adl-internal-target-11>`__**

Permitted values:
  r0 - r31


.. _adl-internal-target-30:
*RS*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 5
   * - Bits
     - [6,10] 

Description:

  Field used to specify a General Purpose Register as a target.
  
  


Reference: **`GPR <#adl-internal-target-11>`__**

Permitted values:
  r0 - r31


.. _adl-internal-target-31:
*RT (Target)*
`````````````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 5
   * - Bits
     - [6,10] 

Description:

  Field used to specify a General Purpose Register to be used as a target.
  
  


Reference: **`GPR <#adl-internal-target-11>`__**

Permitted values:
  r0 - r31


.. _ifield-section-s:


.. _adl-internal-target-32:
*SH*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 5
   * - Bits
     - [16,20] 


.. _adl-internal-target-33:
*SI*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 16
   * - Bits
     - [16,31] 
   * - Signed
     - True

Description:

  Signed immediate field for arithmetic operations.
  
  


Semantics:  **SignExtend(SI)**


.. _adl-internal-target-34:
*SPRN*
``````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 10
   * - Bits
     - [16,20] [11,15] 

Description:

  Field used to specify a Special Purpose Register for the *mtspr* and *mfspr* instructions.
  
  


Reference: **`SPR <#adl-internal-target-12>`__**

Permitted values:
  0 - 1023


.. _ifield-section-u:


.. _adl-internal-target-35:
*UI*
````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 16
   * - Bits
     - [16,31] 

Description:

  Unsigned immediate field for arithmetic operations.
  
  


.. _ifield-section-x:


.. _adl-internal-target-36:
*XO (OPCD)*
```````````


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 10
   * - Bits
     - [21,30] 

Description:

  Extended opcode.
  
  


.. _ifield-section-y:


.. _adl-internal-target-37:
*Y*
```


.. list-table::
   :class: attributes
   :widths: 10 8
   :header-rows: 0

   * - Size
     - 1
   * - Bits
     - [10,10] 

Description:

  This is a hint bit for conditional branches.
  
  


.. _adl-internal-target-38:
Instructions
------------

.. raw:: html

   <a href="#instr-section-a">&nbsp;&nbsp;A&nbsp;&nbsp;</a> <a href="#instr-section-b">&nbsp;&nbsp;B&nbsp;&nbsp;</a> <a href="#instr-section-c">&nbsp;&nbsp;C&nbsp;&nbsp;</a> <a href="#instr-section-h">&nbsp;&nbsp;H&nbsp;&nbsp;</a> <a href="#instr-section-l">&nbsp;&nbsp;L&nbsp;&nbsp;</a> <a href="#instr-section-m">&nbsp;&nbsp;M&nbsp;&nbsp;</a> <a href="#instr-section-o">&nbsp;&nbsp;O&nbsp;&nbsp;</a> <a href="#instr-section-r">&nbsp;&nbsp;R&nbsp;&nbsp;</a> <a href="#instr-section-s">&nbsp;&nbsp;S&nbsp;&nbsp;</a> 


.. _instr-section-a:


.. _adl-internal-target-39:
*add Target, RA, RB*
````````````````````

Description:
  
  The sum GPR(RA) + GPR(RB) is placed into RD.
  
  The add instruction is preferred for additions because it sets few status bits.
  
  
  
Action:
  
  .. code_block:: cpp
     :color:
  
    {
        GPR ( RT ) = GPR ( RA ) + GPR ( RB ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RB)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RT)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">31&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">Target</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="15.625%" class="field">RB</td>
     <td colspan="2" width="31.25%" class="field">266&nbsp;OPCD</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     

.. _adl-internal-target-40:
*addi Target, RA, SI*
`````````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        if ( RA == 0 ) {
            GPR ( RT ) = SI ;
        } else GPR ( RT ) = GPR ( RA ) + SI ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - Conditional
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RT)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">14&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">Target</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">SI</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     
Aliases:

.. _adl-internal-target-41:
*la Target,SI(RA)*
::::::::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">14&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RT</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">SI</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-42:
*li Target, SI*
:::::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">14&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RT</td>
     <td colspan="2" width="15.625%" class="field">0&nbsp;RA</td>
     <td colspan="2" width="50%" class="field">SI</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     


Operands for Instruction **addi Target, RA, SI**:
  .. list-table::
     :class: attributes
     :widths: 10 20 30
     :header-rows: 1
  
     * - Operand
       - Mapping
       - Applies To
     * - `RA <#adl-internal-target-28>`__
       - `RA <#adl-internal-target-28>`__
       - ::
          
            la Target,SI(RA)
     * - `RT (Target) <#adl-internal-target-31>`__
       - `RT (Target) <#adl-internal-target-31>`__
       - ::
          
            la Target,SI(RA)
            li Target, SI
     * - `SI <#adl-internal-target-33>`__
       - `SI <#adl-internal-target-33>`__
       - ::
          
            la Target,SI(RA)
            li Target, SI


.. _adl-internal-target-43:
*addic Target, RA, SI*
``````````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var carry = Carry ( GPR ( RA ) , SI , 0 ) ;
        GPR ( RT ) = GPR ( RA ) + SI ;
        setXerField ( false , false , true , carry ) ;
    }
    
  The code above uses the following routines (directly or indirectly): `setXerField <#adl-internal-target-44>`__
  
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RT)
       - Entire Register
       - 
     * - `XER <#adl-internal-target-9>`__
       - CA
       - Partial
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">12&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">Target</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">SI</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

.. _adl-internal-target-45:
*addic. Target, RA, SI*
```````````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var carry = Carry ( GPR ( RA ) , SI , 0 ) ;
        GPR ( RT ) = GPR ( RA ) + SI ;
        setCrField ( 0 , GPR ( RT ) , 0 ) ;
        setXerField ( false , false , true , carry ) ;
    }
    
  The code above uses the following routines (directly or indirectly): `setCrField <#adl-internal-target-46>`__, `setXerField <#adl-internal-target-44>`__
  
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
     * - `XER <#adl-internal-target-9>`__
       - SO
       - Partial
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `CR <#adl-internal-target-3>`__
       - Mask:  0xf0000000
       - Partial
     * - `GPR <#adl-internal-target-11>`__ (RT)
       - Entire Register
       - 
     * - `XER <#adl-internal-target-9>`__
       - CA
       - Partial
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">13&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">Target</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">SI</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

.. _adl-internal-target-47:
*addis Target, RA, SI*
``````````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        if ( RA == 0 ) {
            GPR ( RT ) = SI << 16 ;
        } else {
            GPR ( RT ) = GPR ( RA ) + ( SI << 16 ) ;
        }
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - Conditional
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RT)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">15&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">Target</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">SI</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     
Aliases:

.. _adl-internal-target-48:
*lis Target, SI*
::::::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">15&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RT</td>
     <td colspan="2" width="15.625%" class="field">0&nbsp;RA</td>
     <td colspan="2" width="50%" class="field">SI</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     


Operands for Instruction **addis Target, RA, SI**:
  .. list-table::
     :class: attributes
     :widths: 10 20
     :header-rows: 1
  
     * - Operand
       - Mapping
     * - `RT (Target) <#adl-internal-target-31>`__
       - `RT (Target) <#adl-internal-target-31>`__
  
     * - `SI <#adl-internal-target-33>`__
       - `SI <#adl-internal-target-33>`__
  


.. _adl-internal-target-49:
*andi. RS, RA, UI*
``````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        GPR ( RA ) = GPR ( RS ) & UI ;
        setCrField ( 0 , GPR ( RA ) , 0 ) ;
    }
    
  The code above uses the following routines (directly or indirectly): `setCrField <#adl-internal-target-46>`__
  
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RS)
       - Entire Register
       - 
     * - `XER <#adl-internal-target-9>`__
       - SO
       - Partial
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `CR <#adl-internal-target-3>`__
       - Mask:  0xf0000000
       - Partial
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">28&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">UI</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

.. _instr-section-b:


.. _adl-internal-target-50:
*b LI*
``````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        NIA = LI ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `CIA <#adl-internal-target-2>`__
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `NIA <#adl-internal-target-8>`__
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">18&nbsp;OPCD</td>
     <td colspan="2" width="75%" class="field">LI</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     

.. _adl-internal-target-51:
*bc BO,BI,BD*
`````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        if ( ( BO ( 2 ) ) == 0 ) {
            CTR = CTR - 1 ;
        }
         var ctr_ok = ( BO ( 2 ) != 0 ) || ( ( ( CTR != 0 ) ^ BO ( 3 ) ) != 0 ) ;
         var cond_ok = ( BO ( 0 ) != 0 ) || ( CR ( BI ) == BO ( 1 ) ) ;
        if ( ctr_ok && cond_ok ) {
            NIA = BD ;
        }
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `CIA <#adl-internal-target-2>`__
       - Entire Register
       - 
     * - `CR <#adl-internal-target-3>`__
       - Entire Register
       - Partial
     * - `CTR <#adl-internal-target-4>`__
       - Entire Register
       - Conditional
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `CTR <#adl-internal-target-4>`__
       - Entire Register
       - Conditional
     * - `NIA <#adl-internal-target-8>`__
       - Entire Register
       - Conditional
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     
Aliases:

.. _adl-internal-target-52:
*bdnz BD*
:::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">16&nbsp;BO</td>
     <td colspan="2" width="15.625%" class="field">0&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-53:
*bdnz+ BD*
::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">16&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">0&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-54:
*bdnz- BD*
::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">16&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">0&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-55:
*beq BD*
::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO</td>
     <td colspan="2" width="15.625%" class="field">2&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-56:
*beq+ CRn,BD*
:::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-57:
*beq+ BD*
:::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">2&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-58:
*beq- CRn,BD*
:::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-59:
*beq- BD*
:::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">2&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-60:
*bge BD*
::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO</td>
     <td colspan="2" width="15.625%" class="field">0&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-61:
*bge+ CRn,BD*
:::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-62:
*bge+ BD*
:::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">0&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-63:
*bge- CRn,BD*
:::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-64:
*bge- BD*
:::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">0&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-65:
*bgt BD*
::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO</td>
     <td colspan="2" width="15.625%" class="field">1&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-66:
*bgt+ CRn,BD*
:::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-67:
*bgt+ BD*
:::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">1&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-68:
*bgt- CRn,BD*
:::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-69:
*bgt- BD*
:::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">1&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-70:
*ble BD*
::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO</td>
     <td colspan="2" width="15.625%" class="field">1&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-71:
*ble+ CRn,BD*
:::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-72:
*ble+ BD*
:::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">1&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-73:
*ble- CRn,BD*
:::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-74:
*ble- BD*
:::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">1&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-75:
*blt BD*
::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO</td>
     <td colspan="2" width="15.625%" class="field">0&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-76:
*blt+ CRn,BD*
:::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-77:
*blt+ BD*
:::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">0&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-78:
*blt- CRn,BD*
:::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-79:
*blt- BD*
:::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">12&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">0&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-80:
*bne BD*
::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO</td>
     <td colspan="2" width="15.625%" class="field">2&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-81:
*bne+ CRn,BD*
:::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-82:
*bne+ BD*
:::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">2&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-83:
*bne- CRn,BD*
:::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-84:
*bne- BD*
:::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">4&nbsp;BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">2&nbsp;BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


Operands for Instruction **bc BO,BI,BD**:
  .. list-table::
     :class: attributes
     :widths: 10 20 30
     :header-rows: 1
  
     * - Operand
       - Mapping
       - Applies To
     * - `BD <#adl-internal-target-15>`__
       - `BD <#adl-internal-target-15>`__
       - ::
          
            bdnz BD
            bdnz+ BD
            bdnz- BD
            beq BD
            beq+ CRn,BD
            beq+ BD
            beq- CRn,BD
            beq- BD
            bge BD
            bge+ CRn,BD
            bge+ BD
            bge- CRn,BD
            bge- BD
            bgt BD
            bgt+ CRn,BD
            bgt+ BD
            bgt- CRn,BD
            bgt- BD
            ble BD
            ble+ CRn,BD
            ble+ BD
            ble- CRn,BD
            ble- BD
            blt BD
            blt+ CRn,BD
            blt+ BD
            blt- CRn,BD
            blt- BD
            bne BD
            bne+ CRn,BD
            bne+ BD
            bne- CRn,BD
            bne- BD
     * - `BI <#adl-internal-target-17>`__
       - BI(CRn * 4 + 2)
       - ::
          
            beq+ CRn,BD
            beq- CRn,BD
            bne+ CRn,BD
            bne- CRn,BD
     * - `BI <#adl-internal-target-17>`__
       - BI(CRn * 4)
       - ::
          
            bge+ CRn,BD
            bge- CRn,BD
            blt+ CRn,BD
            blt- CRn,BD
     * - `BI <#adl-internal-target-17>`__
       - BI(CRn * 4 + 1)
       - ::
          
            bgt+ CRn,BD
            bgt- CRn,BD
            ble+ CRn,BD
            ble- CRn,BD
     * - `Y <#adl-internal-target-37>`__
       - Y(( BD < 0 ) ? 0 : 1)
       - ::
          
            bdnz+ BD
            beq+ CRn,BD
            beq+ BD
            bge+ CRn,BD
            bge+ BD
            bgt+ CRn,BD
            bgt+ BD
            ble+ CRn,BD
            ble+ BD
            blt+ CRn,BD
            blt+ BD
            bne+ CRn,BD
            bne+ BD
     * - `Y <#adl-internal-target-37>`__
       - Y(( BD < 0 ) ? 1 : 0)
       - ::
          
            bdnz- BD
            beq- CRn,BD
            beq- BD
            bge- CRn,BD
            bge- BD
            bgt- CRn,BD
            bgt- BD
            ble- CRn,BD
            ble- BD
            blt- CRn,BD
            blt- BD
            bne- CRn,BD
            bne- BD


.. _adl-internal-target-85:
*bcl BO,BI,BD*
``````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        if ( ( BO ( 2 ) ) == 0 ) {
            CTR = CTR - 1 ;
        }
         var ctr_ok = ( BO ( 2 ) != 0 ) || ( ( ( CTR != 0 ) ^ BO ( 3 ) ) != 0 ) ;
         var cond_ok = ( BO ( 0 ) != 0 ) || ( CR ( BI ) == BO ( 1 ) ) ;
        LR = CIA + 4 ;
        if ( ctr_ok && cond_ok ) {
            NIA = BD ;
        }
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `CIA <#adl-internal-target-2>`__
       - Entire Register
       - 
     * - `CR <#adl-internal-target-3>`__
       - Entire Register
       - Partial
     * - `CTR <#adl-internal-target-4>`__
       - Entire Register
       - Conditional
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `CTR <#adl-internal-target-4>`__
       - Entire Register
       - Conditional
     * - `LR <#adl-internal-target-7>`__
       - Entire Register
       - 
     * - `NIA <#adl-internal-target-8>`__
       - Entire Register
       - Conditional
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">16&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="43.75%" class="field">BD</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">1&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     

.. _adl-internal-target-86:
*bclr BO,BI*
````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        if ( BO ( 2 ) == 0 ) {
            CTR = CTR - 1 ;
        }
         var ctr_ok = ( BO ( 2 ) != 0 ) || ( ( ( CTR != 0 ) ^ BO ( 3 ) ) != 0 ) ;
         var cond_ok = ( BO ( 0 ) != 0 ) || ( CR ( BI ) == BO ( 1 ) ) ;
        if ( ctr_ok && cond_ok ) {
            NIA = LR & ~ 0x3ULL ;
        }
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `CR <#adl-internal-target-3>`__
       - Entire Register
       - Partial
     * - `CTR <#adl-internal-target-4>`__
       - Entire Register
       - Conditional
     * - `LR <#adl-internal-target-7>`__
       - Entire Register
       - Conditional
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `CTR <#adl-internal-target-4>`__
       - Entire Register
       - Conditional
     * - `NIA <#adl-internal-target-8>`__
       - Entire Register
       - Conditional
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">19&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="15.625%" class="reserved" title="Reserved">0000&nbsp;/&nbsp;0</td>
     <td colspan="2" width="31.25%" class="field">16&nbsp;OPCD</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     
Aliases:

.. _adl-internal-target-87:
*blr*
:::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">19&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">20&nbsp;BO</td>
     <td colspan="2" width="15.625%" class="field">0&nbsp;BI</td>
     <td colspan="2" width="15.625%" class="reserved" title="Reserved">0000&nbsp;/&nbsp;0</td>
     <td colspan="2" width="31.25%" class="field">16&nbsp;OPCD</td>
     <td width="3.125%" class="field">0&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     



.. _adl-internal-target-88:
*bclrl BO,BI*
`````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        if ( BO ( 2 ) == 0 ) {
            CTR = CTR - 1 ;
        }
         var ctr_ok = ( BO ( 2 ) != 0 ) || ( ( ( CTR != 0 ) ^ BO ( 3 ) ) != 0 ) ;
         var cond_ok = ( BO ( 0 ) != 0 ) || ( CR ( BI ) == BO ( 1 ) ) ;
        if ( ctr_ok && cond_ok ) {
            NIA = LR & ~ 0x3ULL ;
            LR = CIA + 4 ;
        }
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `CIA <#adl-internal-target-2>`__
       - Entire Register
       - Conditional
     * - `CR <#adl-internal-target-3>`__
       - Entire Register
       - Partial
     * - `CTR <#adl-internal-target-4>`__
       - Entire Register
       - Conditional
     * - `LR <#adl-internal-target-7>`__
       - Entire Register
       - Conditional
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `CTR <#adl-internal-target-4>`__
       - Entire Register
       - Conditional
     * - `LR <#adl-internal-target-7>`__
       - Entire Register
       - Conditional
     * - `NIA <#adl-internal-target-8>`__
       - Entire Register
       - Conditional
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">19&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">BO<table class="subfield"><tr>
     <td class="subfieldunused" title="Reserved" width="80%">[6,9]</td>
     <td class="subfield" width="20%">Y[10]</td>
     </tr></table>
     </td>
     <td colspan="2" width="15.625%" class="field">BI</td>
     <td colspan="2" width="15.625%" class="reserved" title="Reserved">0000&nbsp;/&nbsp;0</td>
     <td colspan="2" width="31.25%" class="field">16&nbsp;OPCD</td>
     <td width="3.125%" class="field">1&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     

.. _adl-internal-target-89:
*bl LI*
```````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        NIA = LI ;
        LR = CIA + 4 ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `CIA <#adl-internal-target-2>`__
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `LR <#adl-internal-target-7>`__
       - Entire Register
       - 
     * - `NIA <#adl-internal-target-8>`__
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">18&nbsp;OPCD</td>
     <td colspan="2" width="75%" class="field">LI</td>
     <td width="3.125%" class="field">0&nbsp;AA</td>
     <td width="3.125%" class="field">1&nbsp;LK</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">29</td>
     <td class="singleodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     

.. _instr-section-c:


.. _adl-internal-target-90:
*cmp BF, RA, RB*
````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        setCrField ( BF , GPR ( RA ) , GPR ( RB ) ) ;
    }
    
  The code above uses the following routines (directly or indirectly): `setCrField <#adl-internal-target-46>`__
  
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RB)
       - Entire Register
       - 
     * - `XER <#adl-internal-target-9>`__
       - SO
       - Partial
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `CR <#adl-internal-target-3>`__
       - Entire Register
       - Partial
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">31&nbsp;OPCD</td>
     <td colspan="2" width="9.375%" class="field">BF</td>
     <td colspan="2" width="6.25%" class="reserved" title="Reserved">00</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="15.625%" class="field">RB</td>
     <td colspan="2" width="31.25%" class="field">0&nbsp;OPCD</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">8</td>
     <td class="leftodd">9</td><td class="rightodd">10</td>
     <td class="lefteven">11</td><td class="righteven">15</td>
     <td class="leftodd">16</td><td class="rightodd">20</td>
     <td class="lefteven">21</td><td class="righteven">30</td>
     <td class="singleodd">31</td>
     </tr>
     </table>
     

.. _adl-internal-target-91:
*cmpi BF, L, RA, SI*
````````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        setCrField ( BF , GPR ( RA ) , SI ) ;
    }
    
  The code above uses the following routines (directly or indirectly): `setCrField <#adl-internal-target-46>`__
  
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
     * - `XER <#adl-internal-target-9>`__
       - SO
       - Partial
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `CR <#adl-internal-target-3>`__
       - Entire Register
       - Partial
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">11&nbsp;OPCD</td>
     <td colspan="2" width="9.375%" class="field">BF</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     <td width="3.125%" class="field">L</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">SI</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">8</td>
     <td class="singleodd">9</td>
     <td class="singleeven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     
Aliases:

.. _adl-internal-target-92:
*cmpwi BF, RA, SI*
::::::::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">11&nbsp;OPCD</td>
     <td colspan="2" width="9.375%" class="field">BF</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     <td width="3.125%" class="field">0&nbsp;L</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">SI</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">8</td>
     <td class="singleodd">9</td>
     <td class="singleeven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-93:
*cmpwi RA,SI*
:::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">11&nbsp;OPCD</td>
     <td colspan="2" width="9.375%" class="field">0&nbsp;BF</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     <td width="3.125%" class="field">0&nbsp;L</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">SI</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">8</td>
     <td class="singleodd">9</td>
     <td class="singleeven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     


Operands for Instruction **cmpi BF, L, RA, SI**:
  .. list-table::
     :class: attributes
     :widths: 10 20 30
     :header-rows: 1
  
     * - Operand
       - Mapping
       - Applies To
     * - `BF <#adl-internal-target-16>`__
       - `BF <#adl-internal-target-16>`__
       - ::
          
            cmpwi BF, RA, SI
     * - `RA <#adl-internal-target-28>`__
       - `RA <#adl-internal-target-28>`__
       - ::
          
            cmpwi BF, RA, SI
            cmpwi RA,SI
     * - `SI <#adl-internal-target-33>`__
       - `SI <#adl-internal-target-33>`__
       - ::
          
            cmpwi BF, RA, SI
            cmpwi RA,SI


.. _instr-section-h:


.. _adl-internal-target-94:
*halt*
``````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        halt (  ) ;
    }
    
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">0&nbsp;OPCD</td>
     <td colspan="2" width="81.25%" class="reserved" title="Reserved">0000&nbsp;/&nbsp;0000&nbsp;/&nbsp;0000&nbsp;/&nbsp;0000&nbsp;/&nbsp;0000&nbsp;/&nbsp;0000&nbsp;/&nbsp;00</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">31</td>
     </tr>
     </table>
     

.. _instr-section-l:


.. _adl-internal-target-95:
*lbz Target,D(RA)*
``````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var b = ( RA == 0 ) ? 0 : GPR ( RA ) ;
         var addr = b + D ;
        GPR ( RT ) = Mem ( addr , 1 ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RT)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">34&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">Target</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">D</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

Attributes:
  load


.. _adl-internal-target-96:
*lhz Target,D(RA)*
``````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var b = ( RA == 0 ) ? 0 : GPR ( RA ) ;
         var addr = b + D ;
        GPR ( RT ) = Mem ( addr , 2 ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RT)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">40&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">Target</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">D</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

Attributes:
  load


.. _adl-internal-target-97:
*lmw Target,D(RA)*
``````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var b = ( RA == 0 ) ? 0 : GPR ( RA ) ;
         var addr = b + D ;
         int r = RT . uint32 (  ) ;
        do {
            GPR ( r ) = Mem ( addr , 4 ) ;
            r = r + 1 ;
            addr = addr + 4 ;
        } while ( r <= 31 ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RT . uint32 (  ), 31)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">46&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">Target</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">D</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

Attributes:
  load


.. _adl-internal-target-98:
*lwz Target,D(RA)*
``````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var b = ( RA == 0 ) ? 0 : GPR ( RA ) ;
         var addr = b + D ;
        GPR ( RT ) = Mem ( addr , 4 ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RT)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">32&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">Target</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">D</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

Attributes:
  load


.. _adl-internal-target-99:
*lwzu Target,D(RA)*
```````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var addr = GPR ( RA . uint32 (  ) ) + D ;
        GPR ( RT ) = Mem ( addr , 4 ) ;
        GPR ( RA . uint32 (  ) ) = addr ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA . uint32 (  ))
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA . uint32 (  ))
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RT)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">33&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">Target</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">D</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

Attributes:
  load


.. _adl-internal-target-100:
*lwzx Target, RA, RB*
`````````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var b = ( RA == 0 ) ? 0 : GPR ( RA ) ;
         var addr = b + GPR ( RB ) ;
        GPR ( RT ) = Mem ( addr , 4 ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RB)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RT)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">31&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">Target</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="15.625%" class="field">RB</td>
     <td colspan="2" width="31.25%" class="field">23&nbsp;OPCD</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     

Attributes:
  load


.. _instr-section-m:


.. _adl-internal-target-101:
*mfspr Target,SPRN*
```````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        GPR ( RT ) = SPR ( SPRN ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `SPR <#adl-internal-target-12>`__ (SPRN)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RT)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">31&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">Target</td>
     <td colspan="2" width="15.625%" class="field">SPRN</td>
     <td colspan="2" width="15.625%" class="field">SPRN</td>
     <td colspan="2" width="31.25%" class="field">339&nbsp;OPCD</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     
Aliases:

.. _adl-internal-target-102:
*mflr Target*
:::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">31&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RT</td>
     <td colspan="2" width="15.625%" class="field">8&nbsp;SPRN</td>
     <td colspan="2" width="15.625%" class="field">8&nbsp;SPRN</td>
     <td colspan="2" width="31.25%" class="field">339&nbsp;OPCD</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


Operands for Instruction **mfspr Target,SPRN**:
  .. list-table::
     :class: attributes
     :widths: 10 20
     :header-rows: 1
  
     * - Operand
       - Mapping
     * - `RT (Target) <#adl-internal-target-31>`__
       - `RT (Target) <#adl-internal-target-31>`__
  


.. _adl-internal-target-103:
*mtspr SPRN,RS*
```````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        SPR ( SPRN ) = GPR ( RS ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RS)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `SPR <#adl-internal-target-12>`__ (SPRN)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">31&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">SPRN</td>
     <td colspan="2" width="15.625%" class="field">SPRN</td>
     <td colspan="2" width="31.25%" class="field">467&nbsp;OPCD</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     
Aliases:

.. _adl-internal-target-104:
*mtctr RS*
::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">31&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">9&nbsp;SPRN</td>
     <td colspan="2" width="15.625%" class="field">9&nbsp;SPRN</td>
     <td colspan="2" width="31.25%" class="field">467&nbsp;OPCD</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-105:
*mtlr RS*
:::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">31&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">8&nbsp;SPRN</td>
     <td colspan="2" width="15.625%" class="field">8&nbsp;SPRN</td>
     <td colspan="2" width="31.25%" class="field">467&nbsp;OPCD</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


Operands for Instruction **mtspr SPRN,RS**:
  .. list-table::
     :class: attributes
     :widths: 10 20 30
     :header-rows: 1
  
     * - Operand
       - Mapping
       - Applies To
     * - `RS <#adl-internal-target-30>`__
       - `RS <#adl-internal-target-30>`__
       - ::
          
            mtctr RS
            mtlr RS


.. _adl-internal-target-106:
*mullw Target, RA, RB*
``````````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        GPR ( RT ) = GPR ( RA ) * GPR ( RB ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RB)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RT)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">31&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">Target</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="15.625%" class="field">RB</td>
     <td colspan="2" width="31.25%" class="field">235&nbsp;OPCD</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     

.. _instr-section-o:


.. _adl-internal-target-107:
*or RA,RS,RB*
`````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        GPR ( RA ) = GPR ( RS ) | GPR ( RB ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RB)
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RS)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">31&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="15.625%" class="field">RB</td>
     <td colspan="2" width="31.25%" class="field">444&nbsp;OPCD</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     
Aliases:

.. _adl-internal-target-108:
*mr RA,RS*
::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">31&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="31.25%" class="field">444&nbsp;OPCD</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     


Operands for Instruction **or RA,RS,RB**:
  .. list-table::
     :class: attributes
     :widths: 10 20
     :header-rows: 1
  
     * - Operand
       - Mapping
     * - `RA <#adl-internal-target-28>`__
       - `RA <#adl-internal-target-28>`__
  
     * - `RB <#adl-internal-target-29>`__
       - `RS <#adl-internal-target-30>`__
  
     * - `RS <#adl-internal-target-30>`__
       - `RS <#adl-internal-target-30>`__
  


.. _adl-internal-target-109:
*ori RA,RS,UI*
``````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        GPR ( RA ) = GPR ( RS ) | UI ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RS)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">24&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">UI</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

.. _adl-internal-target-110:
*oris RA,RS,UI*
```````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        GPR ( RA ) = GPR ( RS ) | concat ( UI , zero ( 16 ) ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RS)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">25&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">UI</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

.. _instr-section-r:


.. _adl-internal-target-111:
*rlwinm RA,RS,SH,MB,ME*
```````````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var r = GPR ( RS ) . left_rotate ( SH ) ;
         bits < 32 > m ;
        m . mask ( MB , ME ) ;
        GPR ( RA ) = r & m ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RS)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">21&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="15.625%" class="field">SH</td>
     <td colspan="2" width="15.625%" class="field">MB</td>
     <td colspan="2" width="15.625%" class="field">ME</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">25</td>
     <td class="lefteven">26</td><td class="righteven">30</td>
     <td class="singleodd">31</td>
     </tr>
     </table>
     
Aliases:

.. _adl-internal-target-112:
*clrlwi RA,RS,MB*
:::::::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">21&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="15.625%" class="field">0&nbsp;SH</td>
     <td colspan="2" width="15.625%" class="field">MB</td>
     <td colspan="2" width="15.625%" class="field">31&nbsp;ME</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">25</td>
     <td class="lefteven">26</td><td class="righteven">30</td>
     <td class="singleodd">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-113:
*rlwinm RA,RS,SH,MBE*
:::::::::::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">21&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="15.625%" class="field">SH</td>
     <td colspan="2" width="15.625%" class="field">MB</td>
     <td colspan="2" width="15.625%" class="field">ME</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">25</td>
     <td class="lefteven">26</td><td class="righteven">30</td>
     <td class="singleodd">31</td>
     </tr>
     </table>
     


.. _adl-internal-target-114:
*slwi RA,RS,SH*
:::::::::::::::

Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">21&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="15.625%" class="field">SH</td>
     <td colspan="2" width="15.625%" class="field">0&nbsp;MB</td>
     <td colspan="2" width="15.625%" class="field">ME</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">25</td>
     <td class="lefteven">26</td><td class="righteven">30</td>
     <td class="singleodd">31</td>
     </tr>
     </table>
     


Operands for Instruction **rlwinm RA,RS,SH,MB,ME**:
  .. list-table::
     :class: attributes
     :widths: 10 20 30
     :header-rows: 1
  
     * - Operand
       - Mapping
       - Applies To
     * - `MB <#adl-internal-target-24>`__
       - `MB <#adl-internal-target-24>`__
       - ::
          
            clrlwi RA,RS,MB
     * - `MB <#adl-internal-target-24>`__
       - MB(count_leading_zeros ( MBE , 32 ))
       - ::
          
            rlwinm RA,RS,SH,MBE
     * - `ME <#adl-internal-target-26>`__
       - ME(31 - count_trailing_zeros ( MBE ))
       - ::
          
            rlwinm RA,RS,SH,MBE
     * - `ME <#adl-internal-target-26>`__
       - ME(31 - SH)
       - ::
          
            slwi RA,RS,SH
     * - `RA <#adl-internal-target-28>`__
       - `RA <#adl-internal-target-28>`__
       - ::
          
            clrlwi RA,RS,MB
            rlwinm RA,RS,SH,MBE
            slwi RA,RS,SH
     * - `RS <#adl-internal-target-30>`__
       - `RS <#adl-internal-target-30>`__
       - ::
          
            clrlwi RA,RS,MB
            rlwinm RA,RS,SH,MBE
            slwi RA,RS,SH
     * - `SH <#adl-internal-target-32>`__
       - `SH <#adl-internal-target-32>`__
       - ::
          
            rlwinm RA,RS,SH,MBE
            slwi RA,RS,SH


.. _instr-section-s:


.. _adl-internal-target-115:
*srw RA,RS,RB*
``````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var n = GPR ( RB ) ( 27 , 31 ) ;
        GPR ( RA ) = GPR ( RS ) >> n ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RB)
       - Mask:  0x0000001f
       - Partial
     * - `GPR <#adl-internal-target-11>`__ (RS)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">31&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="15.625%" class="field">RB</td>
     <td colspan="2" width="31.25%" class="field">536&nbsp;OPCD</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     

.. _adl-internal-target-116:
*stb RS,D(RA)*
``````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
        Mem ( ( ( ( RA == 0 ) ? 0 : GPR ( RA ) ) + D ) , 1 ) = GPR ( RS ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RS)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">38&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">D</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

Attributes:
  store


.. _adl-internal-target-117:
*sth RS,D(RA)*
``````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var b = ( RA == 0 ) ? 0 : GPR ( RA ) ;
         var addr = b + D ;
        Mem ( addr , 2 ) = GPR ( RS ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RS)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">44&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">D</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

Attributes:
  store


.. _adl-internal-target-118:
*sthx RS, RA, RB*
`````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var b = ( RA == 0 ) ? 0 : GPR ( RA ) ;
         var addr = b + GPR ( RB ) ;
        Mem ( addr , 2 ) = GPR ( RS ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RB)
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RS)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">31&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="15.625%" class="field">RB</td>
     <td colspan="2" width="31.25%" class="field">407&nbsp;OPCD</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     

Attributes:
  store


.. _adl-internal-target-119:
*stmw RS,D(RA)*
```````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var b = ( RA == 0 ) ? 0 : GPR ( RA ) ;
         var addr = b + D ;
         int r = RS . uint32 (  ) ;
        do {
            Mem ( addr , 4 ) = GPR ( r ) ;
            r = r + 1 ;
            addr = addr + 4 ;
        } while ( r <= 31 ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RS . uint32 (  ), 31)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">47&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">D</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

Attributes:
  store


.. _adl-internal-target-120:
*stw RS,D(RA)*
``````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var b = ( RA == 0 ) ? 0 : GPR ( RA ) ;
         var addr = b + D ;
        Mem ( addr , 4 ) = GPR ( RS ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RS)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">36&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">D</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

Attributes:
  store


.. _adl-internal-target-121:
*stwu RS,D(RA)*
```````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var addr = GPR ( RA ) + D ;
        Mem ( addr , 4 ) = GPR ( RS ) ;
        GPR ( RA ) = addr ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RS)
       - Entire Register
       - 
  
Affected by instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">37&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="50%" class="field">D</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">31</td>
     </tr>
     </table>
     

Attributes:
  store


.. _adl-internal-target-122:
*stwx RS, RA, RB*
`````````````````

Action:
  
  .. code_block:: cpp
     :color:
  
    {
         var b = ( RA == 0 ) ? 0 : GPR ( RA ) ;
         var addr = b + GPR ( RB ) ;
        Mem ( addr , 4 ) = GPR ( RS ) ;
    }
    
Affect instruction:
  .. list-table::
     :class: attributes
     :widths: 10 15 10
     :header-rows: 1
  
     * - Register
       - Fields
       - Details
     * - `GPR <#adl-internal-target-11>`__ (RA)
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RB)
       - Entire Register
       - 
     * - `GPR <#adl-internal-target-11>`__ (RS)
       - Entire Register
       - 
  
Encoding:
  
  .. raw:: html
  
     <table class="field">
     <tr><td colspan="2" width="18.75%" class="field">31&nbsp;OPCD</td>
     <td colspan="2" width="15.625%" class="field">RS</td>
     <td colspan="2" width="15.625%" class="field">RA</td>
     <td colspan="2" width="15.625%" class="field">RB</td>
     <td colspan="2" width="31.25%" class="field">151&nbsp;OPCD</td>
     <td width="3.125%" class="reserved" title="Reserved">0</td>
     </tr>
     <tr>
     <td class="leftodd">0</td><td class="rightodd">5</td>
     <td class="lefteven">6</td><td class="righteven">10</td>
     <td class="leftodd">11</td><td class="rightodd">15</td>
     <td class="lefteven">16</td><td class="righteven">20</td>
     <td class="leftodd">21</td><td class="rightodd">30</td>
     <td class="singleeven">31</td>
     </tr>
     </table>
     

Attributes:
  store


.. _adl-internal-target-123:
Instructions by Attribute
-------------------------


.. _adl-internal-target-124:
*load*
``````

* `lbz Target,D(RA) <#adl-internal-target-95>`__
* `lhz Target,D(RA) <#adl-internal-target-96>`__
* `lmw Target,D(RA) <#adl-internal-target-97>`__
* `lwz Target,D(RA) <#adl-internal-target-98>`__
* `lwzu Target,D(RA) <#adl-internal-target-99>`__
* `lwzx Target, RA, RB <#adl-internal-target-100>`__

.. _adl-internal-target-125:
*store*
```````

* `stb RS,D(RA) <#adl-internal-target-116>`__
* `sth RS,D(RA) <#adl-internal-target-117>`__
* `sthx RS, RA, RB <#adl-internal-target-118>`__
* `stmw RS,D(RA) <#adl-internal-target-119>`__
* `stw RS,D(RA) <#adl-internal-target-120>`__
* `stwu RS,D(RA) <#adl-internal-target-121>`__
* `stwx RS, RA, RB <#adl-internal-target-122>`__

.. _adl-internal-target-126:
Helper Functions
----------------

Built-in helper routines are documented in `the ADL user manual`_.

.. _`the ADL user manual`: http://cad.freescale.net/trac/adl/chrome/site/adl-language-reference.html#global-functions

In addition, the following helper routines are defined for P:


.. _adl-internal-target-46:
*setCrField*
````````````

  
  .. code_block:: cpp
     :color:
  
     void setCrField ( bits < 3 > field , bits < 32 > x , bits < 32 > y ) {
         bits < 4 > r = ( ( x . signedLT ( y ) ) ? 0x8 : 0 ) | ( ( x . signedGT ( y ) ) ? 0x4 : 0 ) | ( ( x == y ) ? 0x2 : 0 ) | XER . SO ;
        CR ( 4 * field , 4 * field + 3 ) = r ;
    }
    

.. _adl-internal-target-44:
*setXerField*
`````````````

  
  .. code_block:: cpp
     :color:
  
     void setXerField ( bool ov , bool so , bool ca , const bits < 32 > & carry ) {
        if ( ov ) {
            XER . OV = carry ( 0 ) ^ carry ( 1 ) ;
        }
        if ( so ) {
            XER . SO = XER . SO | XER . OV ;
        }
        if ( ca ) {
            XER . CA = carry ( 0 ) ;
        }
    }
    
