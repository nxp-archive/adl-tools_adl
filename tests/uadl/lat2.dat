#
# Tests to make sure that divides get the correct latency via the use of
# interface functors.
#

TEST id=0

CORE n=:P

= asm

	addi  r1,r1,10
	addi  r2,r2,5
	mullw r3,r1,r2
	divw  r4,r1,r2

= /asm

# <GEN>
MD n=Mem ra=0x00000000 d=0x3821000A	#	addi  r1,r1,10
MD n=Mem ra=0x00000004 d=0x38420005	#	addi  r2,r2,5
MD n=Mem ra=0x00000008 d=0x7C6111D6	#	mullw r3,r1,r2
MD n=Mem ra=0x0000000c d=0x7C8113D6	#	divw  r4,r1,r2
# </GEN>


TRACE

I ea=0x0 id=1
M n=Mem t=ifetch ea=0x0 ra=0x0 d=0x3821000a
INSTR op=0x3821000a					asm="addi r1,r1,10"
ITIME t=2
R n=GPR i=1 d=0x0000000a
CTIME t=5

I ea=0x4 id=2
M n=Mem t=ifetch ea=0x4 ra=0x4 d=0x38420005
INSTR op=0x38420005					asm="addi r2,r2,5"
ITIME t=3
R n=GPR i=2 d=0x00000005
CTIME t=6

I ea=0x8 id=3
M n=Mem t=ifetch ea=0x8 ra=0x8 d=0x7c6111d6
INSTR op=0x7c6111d6					asm="mullw r3,r1,r2"
ITIME t=6
R n=GPR i=3 d=0x00000032
CTIME t=9

I ea=0xc id=4
M n=Mem t=ifetch ea=0xc ra=0xc d=0x7c8113d6
INSTR op=0x7c8113d6					asm="divw r4,r1,r2"
ITIME t=9
R n=GPR i=4 d=0x00000002
CTIME t=17

I ea=0x10 id=5
M n=Mem t=ifetch ea=0x10 ra=0x10 d=0x00000000
INSTR op=0x00000000					asm="halt "
ITIME t=12
CTIME t=18

RESULTS

RD n=GPR i=1 d=10
RD n=GPR i=2 d=5
RD n=GPR i=3 d=50
RD n=GPR i=4 d=2
