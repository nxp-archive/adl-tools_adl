#
# Make sure that dynamic linefill width selection works.  In this case, icache
# fetches up to 0x100 use 256b linefills, while otherwise it's 64b.
#
CORE n=:P

= asm

	addi r1,r1,1
	addi r2,r2,2
	b L1
	.long 0x0
	.long 0x0
	.long 0x0
L1:
	addi r6,r6,6
	addi r7,r7,7
	addi r8,r8,8
	addi r9,r9,9
	addi r10,r10,10
	addi r11,r11,11
	addi r12,r12,12
	addi r13,r13,13
	addi r14,r14,14
	addi r15,r15,15
  b L2
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
	.long 0x0
L2:
	addi r3,r3,3
	addi r4,r4,4
	addi r5,r5,5
	addi r6,r6,6


= /asm

# <GEN>
MD n=Mem ra=0x00000000 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000004 d=0x38420002	#	addi r2,r2,2
MD n=Mem ra=0x00000008 d=0x48000010	#	b L1
MD n=Mem ra=0x0000000c d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000010 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000014 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000018 d=0x38C60006	#	addi r6,r6,6
MD n=Mem ra=0x0000001c d=0x38E70007	#	addi r7,r7,7
MD n=Mem ra=0x00000020 d=0x39080008	#	addi r8,r8,8
MD n=Mem ra=0x00000024 d=0x39290009	#	addi r9,r9,9
MD n=Mem ra=0x00000028 d=0x394A000A	#	addi r10,r10,10
MD n=Mem ra=0x0000002c d=0x396B000B	#	addi r11,r11,11
MD n=Mem ra=0x00000030 d=0x398C000C	#	addi r12,r12,12
MD n=Mem ra=0x00000034 d=0x39AD000D	#	addi r13,r13,13
MD n=Mem ra=0x00000038 d=0x39CE000E	#	addi r14,r14,14
MD n=Mem ra=0x0000003c d=0x39EF000F	#	addi r15,r15,15
MD n=Mem ra=0x00000040 d=0x480000C0	#	b L2
MD n=Mem ra=0x00000044 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000048 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x0000004c d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000050 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000054 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000058 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x0000005c d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000060 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000064 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000068 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x0000006c d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000070 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000074 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000078 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x0000007c d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000080 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000084 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000088 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x0000008c d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000090 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000094 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000098 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x0000009c d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000a0 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000a4 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000a8 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000ac d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000b0 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000b4 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000b8 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000bc d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000c0 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000c4 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000c8 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000cc d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000d0 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000d4 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000d8 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000dc d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000e0 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000e4 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000e8 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000ec d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000f0 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000f4 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000f8 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x000000fc d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00000100 d=0x38630003	#	addi r3,r3,3
MD n=Mem ra=0x00000104 d=0x38840004	#	addi r4,r4,4
MD n=Mem ra=0x00000108 d=0x38A50005	#	addi r5,r5,5
MD n=Mem ra=0x0000010c d=0x38C60006	#	addi r6,r6,6
# </GEN>

RD n=CCR    d=0xc0000000

RESULTS

RD n=GPR i=1  d=1
RD n=GPR i=2  d=2
RD n=GPR i=3  d=3
RD n=GPR i=4  d=4
RD n=GPR i=5  d=5
RD n=GPR i=6  d=12
RD n=GPR i=7  d=7
RD n=GPR i=8  d=8
RD n=GPR i=9  d=9
RD n=GPR i=10 d=10
RD n=GPR i=11 d=11
RD n=GPR i=12 d=12
RD n=GPR i=13 d=13
RD n=GPR i=14 d=14
RD n=GPR i=15 d=15
