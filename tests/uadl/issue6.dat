#
# Tests to make sure that an exception on a fetch will work
# properly with a multi-issue model.  In this case, we make
# sure that we don't execute the exception handler twice
# due to the dual-issue nature of the pipeline.
#

= asm

	mtspr SRR0,r31 # Exception handler.
	rfi
	.long 0x0
good:
	addi r1,r1,1   # Continuation after exception.
	addi r1,r1,1
	addi r1,r1,1
	addi r1,r1,1
	.long 0x0
	addi r2,r2,1   # Start of program.
	addi r2,r2,1
	addi r2,r2,1
	b bad
	.long 0x0
	.long 0x0
bad:
	addi r3,r3,1   # Will never be reached.
	addi r3,r3,1				

  
= /asm

= mdopts

instr-offset: 0x10fd0

= /mdopts


# ea=0x0000 ra=0x10000
TD n=TlbCam set=0 way=0 V=1 TID=0 SIZE=1 TS=0 RPN=0x40 WIMG=0x1 SX=1 SR=1 SW=1 EPN=0

# ea=0x1000 ra=0x11000
TD n=TlbCam set=0 way=1 V=1 TID=0 SIZE=1 TS=0 RPN=0x44 WIMG=0x2 SX=0 SR=0 SW=0 EPN=0x4


CORE n=:P

# <GEN>
MD n=Mem ra=0x00010fd0 d=0x7FFA03A6	#	mtspr SRR0,r31 # Exception handler.
MD n=Mem ra=0x00010fd4 d=0x4C000064	#	rfi
MD n=Mem ra=0x00010fd8 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00010fdc d=0x38210001	#	addi r1,r1,1   # Continuation after exception.
MD n=Mem ra=0x00010fe0 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00010fe4 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00010fe8 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00010fec d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00010ff0 d=0x38420001	#	addi r2,r2,1   # Start of program.
MD n=Mem ra=0x00010ff4 d=0x38420001	#	addi r2,r2,1
MD n=Mem ra=0x00010ff8 d=0x38420001	#	addi r2,r2,1
MD n=Mem ra=0x00010ffc d=0x4800000C	#	b bad
MD n=Mem ra=0x00011000 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00011004 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00011008 d=0xbad s=1.5
MD n=Mem ra=0x00011008 d=0x38630001	#	addi r3,r3,1   # Will never be reached.
MD n=Mem ra=0x0001100c d=0x38630001	#	addi r3,r3,1				
# </GEN>

RD n=MSR      d=0x00040000
RD n=NIA      d=0xff0
RD n=IVOR7    d=0xfd0
RD n=GPR i=31 d=0xfdc

RESULTS

RD n=GPR i=1 d=4
RD n=GPR i=2 d=3
RD n=MSR     d=0x00040000
