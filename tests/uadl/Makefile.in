# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
TESTS = regress $(am__EXEEXT_3)
@SYSTEMC_TRUE@am__append_1 = test-sysc-thread test-sysc-method test-sysc-pc2 test-sysc-mt1 test-sysc-base
@SYSTEMC_TRUE@am__append_2 = test-sysc-base
check_PROGRAMS = $(am__EXEEXT_2)
subdir = tests/uadl
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/macros/bison.m4 \
	$(top_srcdir)/macros/boost.m4 \
	$(top_srcdir)/macros/cpp-setup.m4 $(top_srcdir)/macros/flex.m4 \
	$(top_srcdir)/macros/general.m4 \
	$(top_srcdir)/macros/libtool.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 \
	$(top_srcdir)/macros/lz4.m4 $(top_srcdir)/macros/plasma.m4 \
	$(top_srcdir)/macros/prefix.m4 $(top_srcdir)/macros/rnumber.m4 \
	$(top_srcdir)/macros/runsim.m4 $(top_srcdir)/macros/systemc.m4 \
	$(top_srcdir)/macros/tcl.m4 $(top_srcdir)/macros/usagelog.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/adl_config_internal.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@SYSTEMC_TRUE@am__EXEEXT_1 = test-sysc-thread$(EXEEXT) \
@SYSTEMC_TRUE@	test-sysc-method$(EXEEXT) test-sysc-pc2$(EXEEXT) \
@SYSTEMC_TRUE@	test-sysc-mt1$(EXEEXT) test-sysc-base$(EXEEXT)
am__EXEEXT_2 = dlx$(EXEEXT) dlx-safe$(EXEEXT) dlx-bad-br$(EXEEXT) \
	dlx-ext-mem$(EXEEXT) dlx-64$(EXEEXT) dlx-vd$(EXEEXT) \
	dlx-fwd$(EXEEXT) dlx-fwd-safe$(EXEEXT) dlx2$(EXEEXT) \
	dlx2-lm$(EXEEXT) dlx2-safe$(EXEEXT) dlx2-safe-lm$(EXEEXT) \
	dlx2-ese$(EXEEXT) dlx2-ese-safe$(EXEEXT) dlx2-fwd$(EXEEXT) \
	dlx2-fwd-safe$(EXEEXT) dlx2-fwd-vd$(EXEEXT) \
	dlx2-fwd-bad-br$(EXEEXT) dlx2-bp2$(EXEEXT) \
	dlx2-bp2-safe$(EXEEXT) dlx2-bp3-safe$(EXEEXT) \
	dlx2-bp2-bad-br$(EXEEXT) dlx2-pmr$(EXEEXT) \
	dlx2-pmr-safe$(EXEEXT) dlx2-wide-safe$(EXEEXT) dlx3$(EXEEXT) \
	dlx-bp-fetch$(EXEEXT) dlx-bp-fetch-safe$(EXEEXT) \
	dlx-bp-fetch-safe-ext-mem$(EXEEXT) dlx-bp-issue$(EXEEXT) \
	dlx-bp-issue-safe$(EXEEXT) dlx-z0$(EXEEXT) \
	dlx-z0-safe$(EXEEXT) dlx-z0-ext-mem$(EXEEXT) \
	dlx-zl2-safe$(EXEEXT) dlx-vle$(EXEEXT) dlx-vle-safe$(EXEEXT) \
	dlx-vle-ic$(EXEEXT) dlx-cache-split$(EXEEXT) \
	dlx-cache-split-safe$(EXEEXT) \
	dlx-cache-split-imm-safe$(EXEEXT) \
	dlx-cache-split-safe-ext-mem$(EXEEXT) \
	dlx-cache-split-pc-safe$(EXEEXT) \
	dlx-cache-split-pc2-safe$(EXEEXT) \
	dlx-cache-split-pc3-safe$(EXEEXT) \
	dlx-cache-split-pc3-safe-ext-mem$(EXEEXT) \
	dlx-cache-split-pc4-safe$(EXEEXT) dlx-cache-split2$(EXEEXT) \
	dlx-cache-split2-safe$(EXEEXT) dlx-cache-unified$(EXEEXT) \
	dlx-cache-unified-safe$(EXEEXT) dlx-l2$(EXEEXT) \
	dlx-l2-safe$(EXEEXT) dlx-stwcx$(EXEEXT) dlx-stall$(EXEEXT) \
	dlx-stall-safe$(EXEEXT) dlx-all$(EXEEXT) dlx-all-safe$(EXEEXT) \
	dlx-hrvd$(EXEEXT) dlx-hrvd-safe$(EXEEXT) dlx-delay$(EXEEXT) \
	dlx-delay-safe$(EXEEXT) dlx-bubble$(EXEEXT) \
	dlx-bubble-safe$(EXEEXT) dlx-mt1$(EXEEXT) \
	dlx-mt1-safe$(EXEEXT) dlx-mt1-imm-safe$(EXEEXT) \
	dlx-mt2$(EXEEXT) dlx-mt3$(EXEEXT) $(am__EXEEXT_1)
am_dlx_OBJECTS = dlx.$(OBJEXT)
dlx_OBJECTS = $(am_dlx_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(uADL_builddir)/libuadlSupport.la \
	$(uADL_builddir)/libuadl.la $(ISS)/libAdlIssExec.la \
	$(ISS)/libAdlReaders.la $(ISS)/libAdlParsing.la \
	$(ISS)/libAdlIssSupport.la $(ISS)/libAdlIssTransLogging.la \
	$(ISS)/libAdlScript.la $(HELPER)/libIntbv.la \
	$(HELPER)/libIntbvRnum.la $(HELPER)/libAdlSupport.la \
	$(HELPER)/libAdlLogUsage.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(PlasmaPfx)/libltdl.la \
	$(PlasmaPfx)/libgc.la
am__DEPENDENCIES_3 = $(uADL_builddir)/libuadlMain.la \
	$(am__DEPENDENCIES_2)
dlx_DEPENDENCIES = $(am__DEPENDENCIES_3)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_dlx_64_OBJECTS = dlx-64.$(OBJEXT)
dlx_64_OBJECTS = $(am_dlx_64_OBJECTS)
dlx_64_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_all_OBJECTS = dlx-all.$(OBJEXT)
dlx_all_OBJECTS = $(am_dlx_all_OBJECTS)
dlx_all_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_all_safe_OBJECTS = dlx-all-safe.$(OBJEXT)
dlx_all_safe_OBJECTS = $(am_dlx_all_safe_OBJECTS)
dlx_all_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_bad_br_OBJECTS = dlx-bad-br.$(OBJEXT)
dlx_bad_br_OBJECTS = $(am_dlx_bad_br_OBJECTS)
dlx_bad_br_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_bp_fetch_OBJECTS = dlx-bp-fetch.$(OBJEXT)
dlx_bp_fetch_OBJECTS = $(am_dlx_bp_fetch_OBJECTS)
dlx_bp_fetch_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_bp_fetch_safe_OBJECTS = dlx-bp-fetch-safe.$(OBJEXT)
dlx_bp_fetch_safe_OBJECTS = $(am_dlx_bp_fetch_safe_OBJECTS)
dlx_bp_fetch_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_bp_fetch_safe_ext_mem_OBJECTS =  \
	dlx-bp-fetch-safe-ext-mem.$(OBJEXT) \
	test-ext-mem-excp.$(OBJEXT)
dlx_bp_fetch_safe_ext_mem_OBJECTS =  \
	$(am_dlx_bp_fetch_safe_ext_mem_OBJECTS)
dlx_bp_fetch_safe_ext_mem_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_bp_issue_OBJECTS = dlx-bp-issue.$(OBJEXT)
dlx_bp_issue_OBJECTS = $(am_dlx_bp_issue_OBJECTS)
dlx_bp_issue_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_bp_issue_safe_OBJECTS = dlx-bp-issue-safe.$(OBJEXT)
dlx_bp_issue_safe_OBJECTS = $(am_dlx_bp_issue_safe_OBJECTS)
dlx_bp_issue_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_bubble_OBJECTS = dlx-bubble.$(OBJEXT)
dlx_bubble_OBJECTS = $(am_dlx_bubble_OBJECTS)
dlx_bubble_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_bubble_safe_OBJECTS = dlx-bubble-safe.$(OBJEXT)
dlx_bubble_safe_OBJECTS = $(am_dlx_bubble_safe_OBJECTS)
dlx_bubble_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_cache_split_OBJECTS = dlx-cache-split.$(OBJEXT)
dlx_cache_split_OBJECTS = $(am_dlx_cache_split_OBJECTS)
dlx_cache_split_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_cache_split_imm_safe_OBJECTS =  \
	dlx-cache-split-imm-safe.$(OBJEXT)
dlx_cache_split_imm_safe_OBJECTS =  \
	$(am_dlx_cache_split_imm_safe_OBJECTS)
dlx_cache_split_imm_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_cache_split_pc_safe_OBJECTS =  \
	dlx-cache-split-pc-safe.$(OBJEXT)
dlx_cache_split_pc_safe_OBJECTS =  \
	$(am_dlx_cache_split_pc_safe_OBJECTS)
dlx_cache_split_pc_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_cache_split_pc2_safe_OBJECTS =  \
	dlx-cache-split-pc2-safe.$(OBJEXT)
dlx_cache_split_pc2_safe_OBJECTS =  \
	$(am_dlx_cache_split_pc2_safe_OBJECTS)
dlx_cache_split_pc2_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_cache_split_pc3_safe_OBJECTS =  \
	dlx-cache-split-pc3-safe.$(OBJEXT)
dlx_cache_split_pc3_safe_OBJECTS =  \
	$(am_dlx_cache_split_pc3_safe_OBJECTS)
dlx_cache_split_pc3_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_cache_split_pc3_safe_ext_mem_OBJECTS =  \
	dlx-cache-split-pc3-safe-ext-mem.$(OBJEXT) \
	test-ext-mem.$(OBJEXT)
dlx_cache_split_pc3_safe_ext_mem_OBJECTS =  \
	$(am_dlx_cache_split_pc3_safe_ext_mem_OBJECTS)
dlx_cache_split_pc3_safe_ext_mem_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_cache_split_pc4_safe_OBJECTS =  \
	dlx-cache-split-pc4-safe.$(OBJEXT)
dlx_cache_split_pc4_safe_OBJECTS =  \
	$(am_dlx_cache_split_pc4_safe_OBJECTS)
dlx_cache_split_pc4_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_cache_split_safe_OBJECTS = dlx-cache-split-safe.$(OBJEXT)
dlx_cache_split_safe_OBJECTS = $(am_dlx_cache_split_safe_OBJECTS)
dlx_cache_split_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_cache_split_safe_ext_mem_OBJECTS =  \
	dlx-cache-split-safe-ext-mem.$(OBJEXT) \
	test-ext-mem-excp.$(OBJEXT)
dlx_cache_split_safe_ext_mem_OBJECTS =  \
	$(am_dlx_cache_split_safe_ext_mem_OBJECTS)
dlx_cache_split_safe_ext_mem_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_cache_split2_OBJECTS = dlx-cache-split2.$(OBJEXT)
dlx_cache_split2_OBJECTS = $(am_dlx_cache_split2_OBJECTS)
dlx_cache_split2_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_cache_split2_safe_OBJECTS = dlx-cache-split2-safe.$(OBJEXT)
dlx_cache_split2_safe_OBJECTS = $(am_dlx_cache_split2_safe_OBJECTS)
dlx_cache_split2_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_cache_unified_OBJECTS = dlx-cache-unified.$(OBJEXT)
dlx_cache_unified_OBJECTS = $(am_dlx_cache_unified_OBJECTS)
dlx_cache_unified_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_cache_unified_safe_OBJECTS = dlx-cache-unified-safe.$(OBJEXT)
dlx_cache_unified_safe_OBJECTS = $(am_dlx_cache_unified_safe_OBJECTS)
dlx_cache_unified_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_delay_OBJECTS = dlx-delay.$(OBJEXT)
dlx_delay_OBJECTS = $(am_dlx_delay_OBJECTS)
dlx_delay_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_delay_safe_OBJECTS = dlx-delay-safe.$(OBJEXT)
dlx_delay_safe_OBJECTS = $(am_dlx_delay_safe_OBJECTS)
dlx_delay_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_ext_mem_OBJECTS = dlx-ext-mem.$(OBJEXT) test-ext-mem.$(OBJEXT)
dlx_ext_mem_OBJECTS = $(am_dlx_ext_mem_OBJECTS)
dlx_ext_mem_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_dlx_fwd_OBJECTS = dlx-fwd.$(OBJEXT)
dlx_fwd_OBJECTS = $(am_dlx_fwd_OBJECTS)
dlx_fwd_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_fwd_safe_OBJECTS = dlx-fwd-safe.$(OBJEXT)
dlx_fwd_safe_OBJECTS = $(am_dlx_fwd_safe_OBJECTS)
dlx_fwd_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_hrvd_OBJECTS = dlx-hrvd.$(OBJEXT)
dlx_hrvd_OBJECTS = $(am_dlx_hrvd_OBJECTS)
dlx_hrvd_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_hrvd_safe_OBJECTS = dlx-hrvd-safe.$(OBJEXT)
dlx_hrvd_safe_OBJECTS = $(am_dlx_hrvd_safe_OBJECTS)
dlx_hrvd_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_l2_OBJECTS = dlx-l2.$(OBJEXT)
dlx_l2_OBJECTS = $(am_dlx_l2_OBJECTS)
dlx_l2_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_l2_safe_OBJECTS = dlx-l2-safe.$(OBJEXT)
dlx_l2_safe_OBJECTS = $(am_dlx_l2_safe_OBJECTS)
dlx_l2_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_mt1_OBJECTS = dlx-mt1.$(OBJEXT)
dlx_mt1_OBJECTS = $(am_dlx_mt1_OBJECTS)
dlx_mt1_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_mt1_imm_safe_OBJECTS = dlx-mt1-imm-safe.$(OBJEXT)
dlx_mt1_imm_safe_OBJECTS = $(am_dlx_mt1_imm_safe_OBJECTS)
dlx_mt1_imm_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_mt1_safe_OBJECTS = dlx-mt1-safe.$(OBJEXT)
dlx_mt1_safe_OBJECTS = $(am_dlx_mt1_safe_OBJECTS)
dlx_mt1_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_mt2_OBJECTS = dlx-mt2.$(OBJEXT)
dlx_mt2_OBJECTS = $(am_dlx_mt2_OBJECTS)
dlx_mt2_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_mt3_OBJECTS = dlx-mt3.$(OBJEXT)
dlx_mt3_OBJECTS = $(am_dlx_mt3_OBJECTS)
dlx_mt3_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_safe_OBJECTS = dlx-safe.$(OBJEXT)
dlx_safe_OBJECTS = $(am_dlx_safe_OBJECTS)
dlx_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_stall_OBJECTS = dlx-stall.$(OBJEXT)
dlx_stall_OBJECTS = $(am_dlx_stall_OBJECTS)
dlx_stall_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_stall_safe_OBJECTS = dlx-stall-safe.$(OBJEXT)
dlx_stall_safe_OBJECTS = $(am_dlx_stall_safe_OBJECTS)
dlx_stall_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_stwcx_OBJECTS = dlx-stwcx.$(OBJEXT)
dlx_stwcx_OBJECTS = $(am_dlx_stwcx_OBJECTS)
dlx_stwcx_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_vd_OBJECTS = dlx-vd.$(OBJEXT)
dlx_vd_OBJECTS = $(am_dlx_vd_OBJECTS)
dlx_vd_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_vle_OBJECTS = dlx-vle.$(OBJEXT)
dlx_vle_OBJECTS = $(am_dlx_vle_OBJECTS)
dlx_vle_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_vle_ic_OBJECTS = dlx-vle-ic.$(OBJEXT)
dlx_vle_ic_OBJECTS = $(am_dlx_vle_ic_OBJECTS)
dlx_vle_ic_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_vle_safe_OBJECTS = dlx-vle-safe.$(OBJEXT)
dlx_vle_safe_OBJECTS = $(am_dlx_vle_safe_OBJECTS)
dlx_vle_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_z0_OBJECTS = dlx-z0.$(OBJEXT)
dlx_z0_OBJECTS = $(am_dlx_z0_OBJECTS)
dlx_z0_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_z0_ext_mem_OBJECTS = dlx-z0-ext-mem.$(OBJEXT) \
	test-ext-mem.$(OBJEXT)
dlx_z0_ext_mem_OBJECTS = $(am_dlx_z0_ext_mem_OBJECTS)
dlx_z0_ext_mem_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_dlx_z0_safe_OBJECTS = dlx-z0-safe.$(OBJEXT)
dlx_z0_safe_OBJECTS = $(am_dlx_z0_safe_OBJECTS)
dlx_z0_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx_zl2_safe_OBJECTS = dlx-zl2-safe.$(OBJEXT)
dlx_zl2_safe_OBJECTS = $(am_dlx_zl2_safe_OBJECTS)
dlx_zl2_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_OBJECTS = dlx2.$(OBJEXT)
dlx2_OBJECTS = $(am_dlx2_OBJECTS)
dlx2_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_bp2_OBJECTS = dlx2-bp2.$(OBJEXT)
dlx2_bp2_OBJECTS = $(am_dlx2_bp2_OBJECTS)
dlx2_bp2_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_bp2_bad_br_OBJECTS =  \
	dlx2_bp2_bad_br-dlx2-bp2-bad-br.$(OBJEXT)
dlx2_bp2_bad_br_OBJECTS = $(am_dlx2_bp2_bad_br_OBJECTS)
dlx2_bp2_bad_br_DEPENDENCIES = $(am__DEPENDENCIES_3)
dlx2_bp2_bad_br_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(dlx2_bp2_bad_br_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_dlx2_bp2_safe_OBJECTS = dlx2-bp2-safe.$(OBJEXT)
dlx2_bp2_safe_OBJECTS = $(am_dlx2_bp2_safe_OBJECTS)
dlx2_bp2_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_bp3_safe_OBJECTS = dlx2-bp3-safe.$(OBJEXT)
dlx2_bp3_safe_OBJECTS = $(am_dlx2_bp3_safe_OBJECTS)
dlx2_bp3_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_ese_OBJECTS = dlx2-ese.$(OBJEXT)
dlx2_ese_OBJECTS = $(am_dlx2_ese_OBJECTS)
dlx2_ese_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_ese_safe_OBJECTS = dlx2-ese-safe.$(OBJEXT)
dlx2_ese_safe_OBJECTS = $(am_dlx2_ese_safe_OBJECTS)
dlx2_ese_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_fwd_OBJECTS = dlx2-fwd.$(OBJEXT)
dlx2_fwd_OBJECTS = $(am_dlx2_fwd_OBJECTS)
dlx2_fwd_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_fwd_bad_br_OBJECTS = dlx2-fwd-bad-br.$(OBJEXT)
dlx2_fwd_bad_br_OBJECTS = $(am_dlx2_fwd_bad_br_OBJECTS)
dlx2_fwd_bad_br_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_fwd_safe_OBJECTS = dlx2-fwd-safe.$(OBJEXT)
dlx2_fwd_safe_OBJECTS = $(am_dlx2_fwd_safe_OBJECTS)
dlx2_fwd_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_fwd_vd_OBJECTS = dlx2-fwd-vd.$(OBJEXT)
dlx2_fwd_vd_OBJECTS = $(am_dlx2_fwd_vd_OBJECTS)
dlx2_fwd_vd_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_lm_OBJECTS = dlx2-lm.$(OBJEXT)
dlx2_lm_OBJECTS = $(am_dlx2_lm_OBJECTS)
dlx2_lm_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_pmr_OBJECTS = dlx2-pmr.$(OBJEXT)
dlx2_pmr_OBJECTS = $(am_dlx2_pmr_OBJECTS)
dlx2_pmr_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_pmr_safe_OBJECTS = dlx2-pmr-safe.$(OBJEXT)
dlx2_pmr_safe_OBJECTS = $(am_dlx2_pmr_safe_OBJECTS)
dlx2_pmr_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_safe_OBJECTS = dlx2-safe.$(OBJEXT)
dlx2_safe_OBJECTS = $(am_dlx2_safe_OBJECTS)
dlx2_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_safe_lm_OBJECTS = dlx2-safe-lm.$(OBJEXT)
dlx2_safe_lm_OBJECTS = $(am_dlx2_safe_lm_OBJECTS)
dlx2_safe_lm_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx2_wide_safe_OBJECTS = dlx2-wide-safe.$(OBJEXT)
dlx2_wide_safe_OBJECTS = $(am_dlx2_wide_safe_OBJECTS)
dlx2_wide_safe_DEPENDENCIES = $(am__DEPENDENCIES_3)
am_dlx3_OBJECTS = dlx3.$(OBJEXT)
dlx3_OBJECTS = $(am_dlx3_OBJECTS)
dlx3_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__test_sysc_base_SOURCES_DIST = dlx-sysc-base.cc test-sysc-base.C
@SYSTEMC_TRUE@am_test_sysc_base_OBJECTS =  \
@SYSTEMC_TRUE@	test_sysc_base-dlx-sysc-base.$(OBJEXT) \
@SYSTEMC_TRUE@	test_sysc_base-test-sysc-base.$(OBJEXT)
test_sysc_base_OBJECTS = $(am_test_sysc_base_OBJECTS)
test_sysc_base_LDADD = $(LDADD)
test_sysc_base_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_sysc_base_CXXFLAGS) $(CXXFLAGS) \
	$(test_sysc_base_LDFLAGS) $(LDFLAGS) -o $@
am__test_sysc_method_SOURCES_DIST = dlx-sysc-method.cc test-systemc.C
@SYSTEMC_TRUE@am_test_sysc_method_OBJECTS =  \
@SYSTEMC_TRUE@	test_sysc_method-dlx-sysc-method.$(OBJEXT) \
@SYSTEMC_TRUE@	test_sysc_method-test-systemc.$(OBJEXT)
test_sysc_method_OBJECTS = $(am_test_sysc_method_OBJECTS)
test_sysc_method_LDADD = $(LDADD)
test_sysc_method_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_sysc_method_CXXFLAGS) $(CXXFLAGS) \
	$(test_sysc_method_LDFLAGS) $(LDFLAGS) -o $@
am__test_sysc_mt1_SOURCES_DIST = dlx-sysc-mt1.cc test-systemc.C
@SYSTEMC_TRUE@am_test_sysc_mt1_OBJECTS =  \
@SYSTEMC_TRUE@	test_sysc_mt1-dlx-sysc-mt1.$(OBJEXT) \
@SYSTEMC_TRUE@	test_sysc_mt1-test-systemc.$(OBJEXT)
test_sysc_mt1_OBJECTS = $(am_test_sysc_mt1_OBJECTS)
test_sysc_mt1_LDADD = $(LDADD)
test_sysc_mt1_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_sysc_mt1_CXXFLAGS) $(CXXFLAGS) $(test_sysc_mt1_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_sysc_pc2_SOURCES_DIST = dlx-sysc-pc2.cc test-systemc.C
@SYSTEMC_TRUE@am_test_sysc_pc2_OBJECTS =  \
@SYSTEMC_TRUE@	test_sysc_pc2-dlx-sysc-pc2.$(OBJEXT) \
@SYSTEMC_TRUE@	test_sysc_pc2-test-systemc.$(OBJEXT)
test_sysc_pc2_OBJECTS = $(am_test_sysc_pc2_OBJECTS)
test_sysc_pc2_LDADD = $(LDADD)
test_sysc_pc2_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_sysc_pc2_CXXFLAGS) $(CXXFLAGS) $(test_sysc_pc2_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_sysc_thread_SOURCES_DIST = dlx-sysc-thread.cc test-systemc.C
@SYSTEMC_TRUE@am_test_sysc_thread_OBJECTS =  \
@SYSTEMC_TRUE@	test_sysc_thread-dlx-sysc-thread.$(OBJEXT) \
@SYSTEMC_TRUE@	test_sysc_thread-test-systemc.$(OBJEXT)
test_sysc_thread_OBJECTS = $(am_test_sysc_thread_OBJECTS)
test_sysc_thread_LDADD = $(LDADD)
test_sysc_thread_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_sysc_thread_CXXFLAGS) $(CXXFLAGS) \
	$(test_sysc_thread_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(dlx_SOURCES) $(dlx_64_SOURCES) $(dlx_all_SOURCES) \
	$(dlx_all_safe_SOURCES) $(dlx_bad_br_SOURCES) \
	$(dlx_bp_fetch_SOURCES) $(dlx_bp_fetch_safe_SOURCES) \
	$(dlx_bp_fetch_safe_ext_mem_SOURCES) $(dlx_bp_issue_SOURCES) \
	$(dlx_bp_issue_safe_SOURCES) $(dlx_bubble_SOURCES) \
	$(dlx_bubble_safe_SOURCES) $(dlx_cache_split_SOURCES) \
	$(dlx_cache_split_imm_safe_SOURCES) \
	$(dlx_cache_split_pc_safe_SOURCES) \
	$(dlx_cache_split_pc2_safe_SOURCES) \
	$(dlx_cache_split_pc3_safe_SOURCES) \
	$(dlx_cache_split_pc3_safe_ext_mem_SOURCES) \
	$(dlx_cache_split_pc4_safe_SOURCES) \
	$(dlx_cache_split_safe_SOURCES) \
	$(dlx_cache_split_safe_ext_mem_SOURCES) \
	$(dlx_cache_split2_SOURCES) $(dlx_cache_split2_safe_SOURCES) \
	$(dlx_cache_unified_SOURCES) $(dlx_cache_unified_safe_SOURCES) \
	$(dlx_delay_SOURCES) $(dlx_delay_safe_SOURCES) \
	$(dlx_ext_mem_SOURCES) $(dlx_fwd_SOURCES) \
	$(dlx_fwd_safe_SOURCES) $(dlx_hrvd_SOURCES) \
	$(dlx_hrvd_safe_SOURCES) $(dlx_l2_SOURCES) \
	$(dlx_l2_safe_SOURCES) $(dlx_mt1_SOURCES) \
	$(dlx_mt1_imm_safe_SOURCES) $(dlx_mt1_safe_SOURCES) \
	$(dlx_mt2_SOURCES) $(dlx_mt3_SOURCES) $(dlx_safe_SOURCES) \
	$(dlx_stall_SOURCES) $(dlx_stall_safe_SOURCES) \
	$(dlx_stwcx_SOURCES) $(dlx_vd_SOURCES) $(dlx_vle_SOURCES) \
	$(dlx_vle_ic_SOURCES) $(dlx_vle_safe_SOURCES) \
	$(dlx_z0_SOURCES) $(dlx_z0_ext_mem_SOURCES) \
	$(dlx_z0_safe_SOURCES) $(dlx_zl2_safe_SOURCES) $(dlx2_SOURCES) \
	$(dlx2_bp2_SOURCES) $(dlx2_bp2_bad_br_SOURCES) \
	$(dlx2_bp2_safe_SOURCES) $(dlx2_bp3_safe_SOURCES) \
	$(dlx2_ese_SOURCES) $(dlx2_ese_safe_SOURCES) \
	$(dlx2_fwd_SOURCES) $(dlx2_fwd_bad_br_SOURCES) \
	$(dlx2_fwd_safe_SOURCES) $(dlx2_fwd_vd_SOURCES) \
	$(dlx2_lm_SOURCES) $(dlx2_pmr_SOURCES) \
	$(dlx2_pmr_safe_SOURCES) $(dlx2_safe_SOURCES) \
	$(dlx2_safe_lm_SOURCES) $(dlx2_wide_safe_SOURCES) \
	$(dlx3_SOURCES) $(test_sysc_base_SOURCES) \
	$(test_sysc_method_SOURCES) $(test_sysc_mt1_SOURCES) \
	$(test_sysc_pc2_SOURCES) $(test_sysc_thread_SOURCES)
DIST_SOURCES = $(dlx_SOURCES) $(dlx_64_SOURCES) $(dlx_all_SOURCES) \
	$(dlx_all_safe_SOURCES) $(dlx_bad_br_SOURCES) \
	$(dlx_bp_fetch_SOURCES) $(dlx_bp_fetch_safe_SOURCES) \
	$(dlx_bp_fetch_safe_ext_mem_SOURCES) $(dlx_bp_issue_SOURCES) \
	$(dlx_bp_issue_safe_SOURCES) $(dlx_bubble_SOURCES) \
	$(dlx_bubble_safe_SOURCES) $(dlx_cache_split_SOURCES) \
	$(dlx_cache_split_imm_safe_SOURCES) \
	$(dlx_cache_split_pc_safe_SOURCES) \
	$(dlx_cache_split_pc2_safe_SOURCES) \
	$(dlx_cache_split_pc3_safe_SOURCES) \
	$(dlx_cache_split_pc3_safe_ext_mem_SOURCES) \
	$(dlx_cache_split_pc4_safe_SOURCES) \
	$(dlx_cache_split_safe_SOURCES) \
	$(dlx_cache_split_safe_ext_mem_SOURCES) \
	$(dlx_cache_split2_SOURCES) $(dlx_cache_split2_safe_SOURCES) \
	$(dlx_cache_unified_SOURCES) $(dlx_cache_unified_safe_SOURCES) \
	$(dlx_delay_SOURCES) $(dlx_delay_safe_SOURCES) \
	$(dlx_ext_mem_SOURCES) $(dlx_fwd_SOURCES) \
	$(dlx_fwd_safe_SOURCES) $(dlx_hrvd_SOURCES) \
	$(dlx_hrvd_safe_SOURCES) $(dlx_l2_SOURCES) \
	$(dlx_l2_safe_SOURCES) $(dlx_mt1_SOURCES) \
	$(dlx_mt1_imm_safe_SOURCES) $(dlx_mt1_safe_SOURCES) \
	$(dlx_mt2_SOURCES) $(dlx_mt3_SOURCES) $(dlx_safe_SOURCES) \
	$(dlx_stall_SOURCES) $(dlx_stall_safe_SOURCES) \
	$(dlx_stwcx_SOURCES) $(dlx_vd_SOURCES) $(dlx_vle_SOURCES) \
	$(dlx_vle_ic_SOURCES) $(dlx_vle_safe_SOURCES) \
	$(dlx_z0_SOURCES) $(dlx_z0_ext_mem_SOURCES) \
	$(dlx_z0_safe_SOURCES) $(dlx_zl2_safe_SOURCES) $(dlx2_SOURCES) \
	$(dlx2_bp2_SOURCES) $(dlx2_bp2_bad_br_SOURCES) \
	$(dlx2_bp2_safe_SOURCES) $(dlx2_bp3_safe_SOURCES) \
	$(dlx2_ese_SOURCES) $(dlx2_ese_safe_SOURCES) \
	$(dlx2_fwd_SOURCES) $(dlx2_fwd_bad_br_SOURCES) \
	$(dlx2_fwd_safe_SOURCES) $(dlx2_fwd_vd_SOURCES) \
	$(dlx2_lm_SOURCES) $(dlx2_pmr_SOURCES) \
	$(dlx2_pmr_safe_SOURCES) $(dlx2_safe_SOURCES) \
	$(dlx2_safe_lm_SOURCES) $(dlx2_wide_safe_SOURCES) \
	$(dlx3_SOURCES) $(am__test_sysc_base_SOURCES_DIST) \
	$(am__test_sysc_method_SOURCES_DIST) \
	$(am__test_sysc_mt1_SOURCES_DIST) \
	$(am__test_sysc_pc2_SOURCES_DIST) \
	$(am__test_sysc_thread_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(datadir)"
DATA = $(data_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
@SYSTEMC_TRUE@am__EXEEXT_3 = test-sysc-base$(EXEEXT)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ADL_JIT = @ADL_JIT@
ADL_SO_CFLAGS = @ADL_SO_CFLAGS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AR_FLAGS = @AR_FLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
AdlStyle = @AdlStyle@
BCDIR = @BCDIR@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_VERSION = @BOOST_VERSION@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONVERT = @CONVERT@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CPROG = @CPROG@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXPROG = @CXXPROG@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DTASM_DIR = @DTASM_DIR@
DTASM_EXISTS = @DTASM_EXISTS@
DTASM_PATH = @DTASM_PATH@
DUMPBIN = @DUMPBIN@
DYNEXPORT = @DYNEXPORT@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EFENCE = @EFENCE@
EGREP = @EGREP@
EPS2PDF = @EPS2PDF@
EXEEXT = @EXEEXT@
EXTERNAL_RELEASE_FLAG = @EXTERNAL_RELEASE_FLAG@
EXTRA_CFLAGS = @EXTRA_CFLAGS@
FGREP = @FGREP@
FIG2DEV = @FIG2DEV@
FOP = @FOP@
GCC_MAJOR = @GCC_MAJOR@
GCC_MINOR = @GCC_MINOR@
GCC_VERSION = @GCC_VERSION@
GDB_TESTS = @GDB_TESTS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
InfoHome = @InfoHome@
JITFLAGS = @JITFLAGS@
JIT_CCFLAGS = @JIT_CCFLAGS@
JIT_OK = @JIT_OK@
LANG_FRONTEND = @LANG_FRONTEND@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_CFLAGS = @LEX_CFLAGS@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LOG_USAGE = @LOG_USAGE@
LTLIBOBJS = @LTLIBOBJS@
LZ4 = @LZ4@
LZ4_CFLAGS = @LZ4_CFLAGS@
LZ4_EXISTS = @LZ4_EXISTS@
LZ4_LDFLAGS = @LZ4_LDFLAGS@
LZ4_LTLIBS = @LZ4_LTLIBS@
LZ4_STATIC_LDFLAGS = @LZ4_STATIC_LDFLAGS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MINGW = @MINGW@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OCC = @OCC@
OPT_ENABLED = @OPT_ENABLED@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
OssUrl = @OssUrl@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PLASMA = @PLASMA@
PLASMA_CFLAGS = @PLASMA_CFLAGS@
PLASMA_LIBS = @PLASMA_LIBS@
PLASMA_LIB_PATHS = @PLASMA_LIB_PATHS@
PLASMA_LTLIBS = @PLASMA_LTLIBS@
PLASMA_PATH = @PLASMA_PATH@
PREST = @PREST@
PlasmaConfig = @PlasmaConfig@
RANLIB = @RANLIB@
READLINK = @READLINK@
RFLAG = @RFLAG@
RNUMBER_BL_LIB_LIB = @RNUMBER_BL_LIB_LIB@
RNUMBER_BL_LIB_PATH = @RNUMBER_BL_LIB_PATH@
RNUMBER_CFLAGS = @RNUMBER_CFLAGS@
RNUMBER_CONFIG = @RNUMBER_CONFIG@
RNUMBER_DEPEND = @RNUMBER_DEPEND@
RNUMBER_HELPERS = @RNUMBER_HELPERS@
RNUMBER_LIBS = @RNUMBER_LIBS@
RNUMBER_LIBS_ONLY = @RNUMBER_LIBS_ONLY@
RNUMBER_LIB_PATHS = @RNUMBER_LIB_PATHS@
RNUMBER_LTLIBS = @RNUMBER_LTLIBS@
RNUMBER_STATIC_LIBS = @RNUMBER_STATIC_LIBS@
RNV = @RNV@
RUNSIM_DIR = @RUNSIM_DIR@
RUNSIM_EXISTS = @RUNSIM_EXISTS@
RUNSIM_PATH = @RUNSIM_PATH@
RelDir = @RelDir@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SWIG = @SWIG@
SYSTEMC_CFLAGS = @SYSTEMC_CFLAGS@
SYSTEMC_EXISTS = @SYSTEMC_EXISTS@
SYSTEMC_INCLUDE_DIR = @SYSTEMC_INCLUDE_DIR@
SYSTEMC_LIBS = @SYSTEMC_LIBS@
SYSTEMC_LIB_DIR = @SYSTEMC_LIB_DIR@
TCLSH = @TCLSH@
TCL_INC_PATHS = @TCL_INC_PATHS@
TCL_LIBS = @TCL_LIBS@
TCL_LIB_PATHS = @TCL_LIB_PATHS@
TCL_STATIC_LIBS = @TCL_STATIC_LIBS@
TCL_VERSION = @TCL_VERSION@
USAGE_LOG_PORT = @USAGE_LOG_PORT@
USAGE_LOG_SERVER = @USAGE_LOG_SERVER@
VERSION = @VERSION@
WISH = @WISH@
WebDir = @WebDir@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
adl_top_srcdir = @adl_top_srcdir@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
archsuffix = @archsuffix@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
so_support = @so_support@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = foreign serial-tests
ISS = $(top_builddir)/iss
HELPER = $(top_builddir)/helpers
PlasmaPfx = $(PLASMA_PATH)/lib
OPEN_MODELS = dlx dlx-safe dlx-bad-br dlx-ext-mem dlx-64 dlx-vd \
	dlx-fwd dlx-fwd-safe dlx2 dlx2-lm dlx2-safe dlx2-safe-lm \
	dlx2-ese dlx2-ese-safe dlx2-fwd dlx2-fwd-safe dlx2-fwd-vd \
	dlx2-fwd-bad-br dlx2-bp2 dlx2-bp2-safe dlx2-bp3-safe \
	dlx2-bp2-bad-br dlx2-pmr dlx2-pmr-safe dlx2-wide-safe dlx3 \
	dlx-bp-fetch dlx-bp-fetch-safe dlx-bp-fetch-safe-ext-mem \
	dlx-bp-issue dlx-bp-issue-safe dlx-z0 dlx-z0-safe \
	dlx-z0-ext-mem dlx-zl2-safe dlx-vle dlx-vle-safe dlx-vle-ic \
	dlx-cache-split dlx-cache-split-safe dlx-cache-split-imm-safe \
	dlx-cache-split-safe-ext-mem dlx-cache-split-pc-safe \
	dlx-cache-split-pc2-safe dlx-cache-split-pc3-safe \
	dlx-cache-split-pc3-safe-ext-mem dlx-cache-split-pc4-safe \
	dlx-cache-split2 dlx-cache-split2-safe dlx-cache-unified \
	dlx-cache-unified-safe dlx-l2 dlx-l2-safe dlx-stwcx dlx-stall \
	dlx-stall-safe dlx-all dlx-all-safe dlx-hrvd dlx-hrvd-safe \
	dlx-delay dlx-delay-safe dlx-bubble dlx-bubble-safe dlx-mt1 \
	dlx-mt1-safe dlx-mt1-imm-safe dlx-mt2 dlx-mt3 $(am__append_1)
OPEN_MODEL_SRCS = dlx.uadl dlx-fwd.uadl dlx2.uadl dlx2-fwd.uadl dlx2.uadl			\
									dlx2-pmr.uadl dlx2-wide.uadl dlx3.uadl dlx-bp-fetch.uadl		\
									dlx-z0.uadl dlx-zl2.uadl dlx-vle.uadl dlx-bp-issue.uadl			\
									dlx-cache-split.uadl dlx-cache-split-pc.uadl								\
									dlx-cache-split-pc2.uadl dlx-cache-split-pc3.uadl						\
									dlx-cache-split-pc4.uadl dlx-cache-unified.uadl dlx-l2.uadl	\
									dlx-stwcx.uadl dlx-stall.uadl dlx-all.uadl dlx-hrvd.uadl		\
									dlx-bubble.uadl dlx-cache-split-pc.uadl dlx-delay.uadl			\
									dlx-mt1.uadl dlx-mt2.uadl dlx-mt3.uadl dlx2-bp2.uadl				\
									dlx2-bp3.uadl


# We distribute a few things here so that external users can write simple
# regressions.
data_DATA = \
	mod1-uadl.adl \
	dlx.uadl

MODELS = $(OPEN_MODELS)
MODEL_SRCS = $(MODELS:%=%.cc)
MODEL_INCS = $(MODELS:%=%.h)
MODEL_EXEC = $(MODELS)
MODEL_ISSS = $(MODELS:%=%-iss.cc.h)
Hybrid = --hybrid-iss
IssMemMode = --iss-mem-mode
EXTRA_DIST = \
	$(srcdir)/regress \
	$(filter-out %.gen.dat,$(filter-out %.out.dat,$(wildcard $(srcdir)/*.dat))) \
	$(OPEN_MODEL_SRCS) \
	mod1-uadl.adl \
	mod1-fwd.adl \
	mod1-stwcx.adl \
	mod11-uadl.adl \
	mod11-ese.adl \
	mod21-uadl.adl \
	mod23-uadl.adl \
	mod23-hrvd.adl \
	mod13-mt1.adl \
	mod13-mt2.adl \
	mod13-mt3.adl \
	z0.adl \
	zl2.adl \
	zl2.ttc \
	lf-128.tcl \
	generic32-cache-l1.adl \
	generic32-cache-no-mmu.adl \
	dlx_custom_bp.h \
	dlx_custom_cr.h \
	LinkStackPredictor.h \
	$(wildcard $(srcdir)/*.cli) \
	$(wildcard $(srcdir)/*.regress) \
	MyCache.h \
	lf-128.tcl

uADL_srcdir = $(top_srcdir)/uadl
uADL_builddir = $(top_builddir)/uadl
AM_CPPFLAGS = $(PLASMA_CFLAGS) $(RNUMBER_CFLAGS) -I$(uADL_srcdir) -I$(top_srcdir)
MODEL_LDADD = $(uADL_builddir)/libuadlSupport.la \
							$(uADL_builddir)/libuadl.la \
              $(ISS)/libAdlIssExec.la \
              $(ISS)/libAdlReaders.la \
              $(ISS)/libAdlParsing.la \
              $(ISS)/libAdlIssSupport.la \
              $(ISS)/libAdlIssTransLogging.la \
              $(ISS)/libAdlScript.la \
              $(HELPER)/libIntbv.la \
              $(HELPER)/libIntbvRnum.la \
              $(HELPER)/libAdlSupport.la \
			  			$(HELPER)/libAdlLogUsage.la \
	      	  	$(TCL_LIB_PATHS) $(TCL_LIBS) \
              $(RNUMBER_LIBS) \
	          	$(LZ4_LTLIBS) \
							$(DYNEXPORT) \
							$(BOOST_LDFLAGS) -lboost_thread -lboost_system -lboost_regex -lboost_atomic -lboost_context -lboost_iostreams -lrt \
              $(PlasmaPfx)/libltdl.la \
              $(PlasmaPfx)/libgc.la

EXEC_LDADD = $(uADL_builddir)/libuadlMain.la $(MODEL_LDADD) 
PARSER = $(uADL_builddir)/make-uadl
IssDir = $(top_srcdir)/tests/iss
DesDir = $(top_srcdir)/designs

# This build variable takes the first two prerequisites.  So, this means that
# the ADL and uADL source files should be the first two prerequisites listed.
# This may then be followed by other prereqs, which will not be used during the
# build.  By convention, the uADL file comes first, followewd by the ADL file.
UADLBUILD = $(AM_V_GEN) $(PARSER) $(word 2, $^) $(word 1, $^) --no-warn-redefine

# To simplify things, I've created the UADL_template and UADL_SAFE_template for
# generating these rules automatically.  Just call/eval the appropriate template
# for generating either a normal or safe-mode model.  The arguments are:
#
# $1: Model name, e.g. "dlx"
#
# $2: All dependencies.  The parser is automatically added as a dependency, so
# that doesn't need to be specified in your arguments.  However, the first
# argument must be the uADL file and the second argument must be the main ADL
# file.  Extra arguments can then be listed, such as other ADL files it's
# dependent upon.
#
# $3: List any other arguments to be supplied to the parser.

# Test to make sure that we can compile the ISS separately and then link them together.
dlx_SOURCES = dlx.cc
dlx_LDADD = $(EXEC_LDADD)

# This version uses virtual dispatch, as opposed to templates.
dlx_vd_SOURCES = dlx-vd.cc
dlx_vd_LDADD = $(EXEC_LDADD)
dlx_safe_SOURCES = dlx-safe.cc 
dlx_safe_LDADD = $(EXEC_LDADD)
dlx_bad_br_SOURCES = dlx-bad-br.cc 
dlx_bad_br_LDADD = $(EXEC_LDADD)
dlx_ext_mem_SOURCES = dlx-ext-mem.cc  test-ext-mem.C
dlx_ext_mem_LDADD = $(MODEL_LDADD)
dlx_64_SOURCES = dlx-64.cc 
dlx_64_LDADD = $(EXEC_LDADD)
dlx_fwd_SOURCES = dlx-fwd.cc 
dlx_fwd_LDADD = $(EXEC_LDADD)
dlx_fwd_safe_SOURCES = dlx-fwd-safe.cc 
dlx_fwd_safe_LDADD = $(EXEC_LDADD)
dlx2_SOURCES = dlx2.cc 
dlx2_LDADD = $(EXEC_LDADD)
dlx2_lm_SOURCES = dlx2-lm.cc 
dlx2_lm_LDADD = $(EXEC_LDADD)
dlx2_safe_SOURCES = dlx2-safe.cc 
dlx2_safe_LDADD = $(EXEC_LDADD)
dlx2_safe_lm_SOURCES = dlx2-safe-lm.cc 
dlx2_safe_lm_LDADD = $(EXEC_LDADD)
dlx2_ese_SOURCES = dlx2-ese.cc 
dlx2_ese_LDADD = $(EXEC_LDADD)
dlx2_ese_safe_SOURCES = dlx2-ese-safe.cc 
dlx2_ese_safe_LDADD = $(EXEC_LDADD)
dlx2_fwd_SOURCES = dlx2-fwd.cc 
dlx2_fwd_LDADD = $(EXEC_LDADD)
dlx2_fwd_vd_SOURCES = dlx2-fwd-vd.cc 
dlx2_fwd_vd_LDADD = $(EXEC_LDADD)
dlx2_fwd_safe_SOURCES = dlx2-fwd-safe.cc 
dlx2_fwd_safe_LDADD = $(EXEC_LDADD)
dlx2_fwd_bad_br_SOURCES = dlx2-fwd-bad-br.cc 
dlx2_fwd_bad_br_LDADD = $(EXEC_LDADD)
dlx2_bp2_SOURCES = dlx2-bp2.cc 
dlx2_bp2_LDADD = $(EXEC_LDADD)
dlx2_bp2_safe_SOURCES = dlx2-bp2-safe.cc 
dlx2_bp2_safe_LDADD = $(EXEC_LDADD)
dlx2_bp3_safe_SOURCES = dlx2-bp3-safe.cc 
dlx2_bp3_safe_LDADD = $(EXEC_LDADD)
dlx2_bp2_bad_br_SOURCES = dlx2-bp2-bad-br.cc 
dlx2_bp2_bad_br_LDADD = $(EXEC_LDADD)
dlx2_bp2_bad_br_CXXFLAGS = -DBAD_PREDICTION
dlx2_pmr_SOURCES = dlx2-pmr.cc 
dlx2_pmr_LDADD = $(EXEC_LDADD)
dlx2_pmr_safe_SOURCES = dlx2-pmr-safe.cc 
dlx2_pmr_safe_LDADD = $(EXEC_LDADD)
dlx2_wide_safe_SOURCES = dlx2-wide-safe.cc 
dlx2_wide_safe_LDADD = $(EXEC_LDADD)
dlx3_SOURCES = dlx3.cc 
dlx3_LDADD = $(EXEC_LDADD)
dlx_bp_fetch_SOURCES = dlx-bp-fetch.cc 
dlx_bp_fetch_LDADD = $(EXEC_LDADD)
dlx_bp_fetch_safe_SOURCES = dlx-bp-fetch-safe.cc 
dlx_bp_fetch_safe_LDADD = $(EXEC_LDADD)
dlx_bp_fetch_safe_ext_mem_SOURCES = dlx-bp-fetch-safe-ext-mem.cc  test-ext-mem-excp.C
dlx_bp_fetch_safe_ext_mem_LDADD = $(EXEC_LDADD)
dlx_bp_issue_SOURCES = dlx-bp-issue.cc 
dlx_bp_issue_LDADD = $(EXEC_LDADD)
dlx_bp_issue_safe_SOURCES = dlx-bp-issue-safe.cc 
dlx_bp_issue_safe_LDADD = $(EXEC_LDADD)
dlx_z0_SOURCES = dlx-z0.cc 
dlx_z0_LDADD = $(EXEC_LDADD)
dlx_z0_safe_SOURCES = dlx-z0-safe.cc 
dlx_z0_safe_LDADD = $(EXEC_LDADD)
dlx_z0_ext_mem_SOURCES = dlx-z0-ext-mem.cc  test-ext-mem.C
dlx_z0_ext_mem_LDADD = $(MODEL_LDADD)
dlx_zl2_safe_SOURCES = dlx-zl2-safe.cc 
dlx_zl2_safe_LDADD = $(EXEC_LDADD)
dlx_vle_SOURCES = dlx-vle.cc 
dlx_vle_LDADD = $(EXEC_LDADD)

# Test a variable-width instruction model with the use of the instruction cache.
dlx_vle_ic_SOURCES = dlx-vle-ic.cc 
dlx_vle_ic_LDADD = $(EXEC_LDADD)
dlx_vle_safe_SOURCES = dlx-vle-safe.cc 
dlx_vle_safe_LDADD = $(EXEC_LDADD)
dlx_cache_split_SOURCES = dlx-cache-split.cc 
dlx_cache_split_LDADD = $(EXEC_LDADD)
dlx_cache_split_safe_SOURCES = dlx-cache-split-safe.cc 
dlx_cache_split_safe_LDADD = $(EXEC_LDADD)
dlx_cache_split_imm_safe_SOURCES = dlx-cache-split-imm-safe.cc 
dlx_cache_split_imm_safe_LDADD = $(EXEC_LDADD)
dlx_cache_split_safe_ext_mem_SOURCES = dlx-cache-split-safe-ext-mem.cc  test-ext-mem-excp.C
dlx_cache_split_safe_ext_mem_LDADD = $(EXEC_LDADD)
dlx_cache_split_pc_safe_SOURCES = dlx-cache-split-pc-safe.cc 
dlx_cache_split_pc_safe_LDADD = $(EXEC_LDADD)
dlx_cache_split_pc2_safe_SOURCES = dlx-cache-split-pc2-safe.cc 
dlx_cache_split_pc2_safe_LDADD = $(EXEC_LDADD)
dlx_cache_split_pc3_safe_SOURCES = dlx-cache-split-pc3-safe.cc 
dlx_cache_split_pc3_safe_LDADD = $(EXEC_LDADD)
dlx_cache_split_pc3_safe_ext_mem_SOURCES = dlx-cache-split-pc3-safe-ext-mem.cc  test-ext-mem.C
dlx_cache_split_pc3_safe_ext_mem_LDADD = $(EXEC_LDADD)
dlx_cache_split_pc4_safe_SOURCES = dlx-cache-split-pc4-safe.cc 
dlx_cache_split_pc4_safe_LDADD = $(EXEC_LDADD)
dlx_cache_split2_SOURCES = dlx-cache-split2.cc 
dlx_cache_split2_LDADD = $(EXEC_LDADD)
dlx_cache_split2_safe_SOURCES = dlx-cache-split2-safe.cc 
dlx_cache_split2_safe_LDADD = $(EXEC_LDADD)
dlx_cache_unified_SOURCES = dlx-cache-unified.cc 
dlx_cache_unified_LDADD = $(EXEC_LDADD)
dlx_cache_unified_safe_SOURCES = dlx-cache-unified-safe.cc 
dlx_cache_unified_safe_LDADD = $(EXEC_LDADD)
dlx_l2_SOURCES = dlx-l2.cc 
dlx_l2_LDADD = $(EXEC_LDADD)
dlx_l2_safe_SOURCES = dlx-l2-safe.cc 
dlx_l2_safe_LDADD = $(EXEC_LDADD)
dlx_stwcx_SOURCES = dlx-stwcx.cc 
dlx_stwcx_LDADD = $(EXEC_LDADD)
dlx_stall_SOURCES = dlx-stall.cc 
dlx_stall_LDADD = $(EXEC_LDADD)
dlx_stall_safe_SOURCES = dlx-stall-safe.cc 
dlx_stall_safe_LDADD = $(EXEC_LDADD)
dlx_all_SOURCES = dlx-all.cc 
dlx_all_LDADD = $(EXEC_LDADD)
dlx_all_safe_SOURCES = dlx-all-safe.cc 
dlx_all_safe_LDADD = $(EXEC_LDADD)
dlx_hrvd_SOURCES = dlx-hrvd.cc 
dlx_hrvd_LDADD = $(EXEC_LDADD)
dlx_hrvd_safe_SOURCES = dlx-hrvd-safe.cc 
dlx_hrvd_safe_LDADD = $(EXEC_LDADD)
dlx_delay_SOURCES = dlx-delay.cc 
dlx_delay_LDADD = $(EXEC_LDADD)
dlx_delay_safe_SOURCES = dlx-delay-safe.cc 
dlx_delay_safe_LDADD = $(EXEC_LDADD)
dlx_bubble_SOURCES = dlx-bubble.cc 
dlx_bubble_LDADD = $(EXEC_LDADD)
dlx_bubble_safe_SOURCES = dlx-bubble-safe.cc 
dlx_bubble_safe_LDADD = $(EXEC_LDADD)
dlx_mt1_SOURCES = dlx-mt1.cc 
dlx_mt1_LDADD = $(EXEC_LDADD)
dlx_mt1_safe_SOURCES = dlx-mt1-safe.cc 
dlx_mt1_safe_LDADD = $(EXEC_LDADD)
dlx_mt1_imm_safe_SOURCES = dlx-mt1-imm-safe.cc 
dlx_mt1_imm_safe_LDADD = $(EXEC_LDADD)
dlx_mt2_SOURCES = dlx-mt2.cc 
dlx_mt2_LDADD = $(EXEC_LDADD)
dlx_mt3_SOURCES = dlx-mt3.cc 
dlx_mt3_LDADD = $(EXEC_LDADD)
@SYSTEMC_TRUE@test_sysc_thread_SOURCES = dlx-sysc-thread.cc  test-systemc.C
@SYSTEMC_TRUE@test_sysc_thread_CXXFLAGS = $(SYSTEMC_CFLAGS)
@SYSTEMC_TRUE@test_sysc_thread_LDFLAGS = $(SYSTEMC_LIBS) $(MODEL_LDADD)
@SYSTEMC_TRUE@test_sysc_method_SOURCES = dlx-sysc-method.cc  test-systemc.C
@SYSTEMC_TRUE@test_sysc_method_CXXFLAGS = $(SYSTEMC_CFLAGS)
@SYSTEMC_TRUE@test_sysc_method_LDFLAGS = $(SYSTEMC_LIBS) $(MODEL_LDADD)
@SYSTEMC_TRUE@test_sysc_base_SOURCES = dlx-sysc-base.cc  test-sysc-base.C
@SYSTEMC_TRUE@test_sysc_base_CXXFLAGS = $(SYSTEMC_CFLAGS)
@SYSTEMC_TRUE@test_sysc_base_LDFLAGS = $(SYSTEMC_LIBS) $(MODEL_LDADD)
@SYSTEMC_TRUE@test_sysc_pc2_SOURCES = dlx-sysc-pc2.cc  test-systemc.C
@SYSTEMC_TRUE@test_sysc_pc2_CXXFLAGS = $(SYSTEMC_CFLAGS) -DMODEL='"dlx-sysc-pc2.h"'
@SYSTEMC_TRUE@test_sysc_pc2_LDFLAGS = $(SYSTEMC_LIBS) $(MODEL_LDADD)
@SYSTEMC_TRUE@test_sysc_mt1_SOURCES = dlx-sysc-mt1.cc  test-systemc.C
@SYSTEMC_TRUE@test_sysc_mt1_CXXFLAGS = $(SYSTEMC_CFLAGS) -DMODEL='"dlx-sysc-mt1.h"'
@SYSTEMC_TRUE@test_sysc_mt1_LDFLAGS = $(SYSTEMC_LIBS) $(MODEL_LDADD)
CLEANFILES = $(MODEL_SRCS) $(MODEL_INCS) $(MODEL_EXEC) $(MODEL_ISSS) *.cc dlx-sysc-method.h dlx-sysc-pc2.h dlx-sysc-thread.h dlx-sysc-base.h
all: all-am

.SUFFIXES:
.SUFFIXES: .C .cc .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/uadl/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/uadl/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

dlx$(EXEEXT): $(dlx_OBJECTS) $(dlx_DEPENDENCIES) $(EXTRA_dlx_DEPENDENCIES) 
	@rm -f dlx$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_OBJECTS) $(dlx_LDADD) $(LIBS)

dlx-64$(EXEEXT): $(dlx_64_OBJECTS) $(dlx_64_DEPENDENCIES) $(EXTRA_dlx_64_DEPENDENCIES) 
	@rm -f dlx-64$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_64_OBJECTS) $(dlx_64_LDADD) $(LIBS)

dlx-all$(EXEEXT): $(dlx_all_OBJECTS) $(dlx_all_DEPENDENCIES) $(EXTRA_dlx_all_DEPENDENCIES) 
	@rm -f dlx-all$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_all_OBJECTS) $(dlx_all_LDADD) $(LIBS)

dlx-all-safe$(EXEEXT): $(dlx_all_safe_OBJECTS) $(dlx_all_safe_DEPENDENCIES) $(EXTRA_dlx_all_safe_DEPENDENCIES) 
	@rm -f dlx-all-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_all_safe_OBJECTS) $(dlx_all_safe_LDADD) $(LIBS)

dlx-bad-br$(EXEEXT): $(dlx_bad_br_OBJECTS) $(dlx_bad_br_DEPENDENCIES) $(EXTRA_dlx_bad_br_DEPENDENCIES) 
	@rm -f dlx-bad-br$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_bad_br_OBJECTS) $(dlx_bad_br_LDADD) $(LIBS)

dlx-bp-fetch$(EXEEXT): $(dlx_bp_fetch_OBJECTS) $(dlx_bp_fetch_DEPENDENCIES) $(EXTRA_dlx_bp_fetch_DEPENDENCIES) 
	@rm -f dlx-bp-fetch$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_bp_fetch_OBJECTS) $(dlx_bp_fetch_LDADD) $(LIBS)

dlx-bp-fetch-safe$(EXEEXT): $(dlx_bp_fetch_safe_OBJECTS) $(dlx_bp_fetch_safe_DEPENDENCIES) $(EXTRA_dlx_bp_fetch_safe_DEPENDENCIES) 
	@rm -f dlx-bp-fetch-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_bp_fetch_safe_OBJECTS) $(dlx_bp_fetch_safe_LDADD) $(LIBS)

dlx-bp-fetch-safe-ext-mem$(EXEEXT): $(dlx_bp_fetch_safe_ext_mem_OBJECTS) $(dlx_bp_fetch_safe_ext_mem_DEPENDENCIES) $(EXTRA_dlx_bp_fetch_safe_ext_mem_DEPENDENCIES) 
	@rm -f dlx-bp-fetch-safe-ext-mem$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_bp_fetch_safe_ext_mem_OBJECTS) $(dlx_bp_fetch_safe_ext_mem_LDADD) $(LIBS)

dlx-bp-issue$(EXEEXT): $(dlx_bp_issue_OBJECTS) $(dlx_bp_issue_DEPENDENCIES) $(EXTRA_dlx_bp_issue_DEPENDENCIES) 
	@rm -f dlx-bp-issue$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_bp_issue_OBJECTS) $(dlx_bp_issue_LDADD) $(LIBS)

dlx-bp-issue-safe$(EXEEXT): $(dlx_bp_issue_safe_OBJECTS) $(dlx_bp_issue_safe_DEPENDENCIES) $(EXTRA_dlx_bp_issue_safe_DEPENDENCIES) 
	@rm -f dlx-bp-issue-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_bp_issue_safe_OBJECTS) $(dlx_bp_issue_safe_LDADD) $(LIBS)

dlx-bubble$(EXEEXT): $(dlx_bubble_OBJECTS) $(dlx_bubble_DEPENDENCIES) $(EXTRA_dlx_bubble_DEPENDENCIES) 
	@rm -f dlx-bubble$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_bubble_OBJECTS) $(dlx_bubble_LDADD) $(LIBS)

dlx-bubble-safe$(EXEEXT): $(dlx_bubble_safe_OBJECTS) $(dlx_bubble_safe_DEPENDENCIES) $(EXTRA_dlx_bubble_safe_DEPENDENCIES) 
	@rm -f dlx-bubble-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_bubble_safe_OBJECTS) $(dlx_bubble_safe_LDADD) $(LIBS)

dlx-cache-split$(EXEEXT): $(dlx_cache_split_OBJECTS) $(dlx_cache_split_DEPENDENCIES) $(EXTRA_dlx_cache_split_DEPENDENCIES) 
	@rm -f dlx-cache-split$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_cache_split_OBJECTS) $(dlx_cache_split_LDADD) $(LIBS)

dlx-cache-split-imm-safe$(EXEEXT): $(dlx_cache_split_imm_safe_OBJECTS) $(dlx_cache_split_imm_safe_DEPENDENCIES) $(EXTRA_dlx_cache_split_imm_safe_DEPENDENCIES) 
	@rm -f dlx-cache-split-imm-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_cache_split_imm_safe_OBJECTS) $(dlx_cache_split_imm_safe_LDADD) $(LIBS)

dlx-cache-split-pc-safe$(EXEEXT): $(dlx_cache_split_pc_safe_OBJECTS) $(dlx_cache_split_pc_safe_DEPENDENCIES) $(EXTRA_dlx_cache_split_pc_safe_DEPENDENCIES) 
	@rm -f dlx-cache-split-pc-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_cache_split_pc_safe_OBJECTS) $(dlx_cache_split_pc_safe_LDADD) $(LIBS)

dlx-cache-split-pc2-safe$(EXEEXT): $(dlx_cache_split_pc2_safe_OBJECTS) $(dlx_cache_split_pc2_safe_DEPENDENCIES) $(EXTRA_dlx_cache_split_pc2_safe_DEPENDENCIES) 
	@rm -f dlx-cache-split-pc2-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_cache_split_pc2_safe_OBJECTS) $(dlx_cache_split_pc2_safe_LDADD) $(LIBS)

dlx-cache-split-pc3-safe$(EXEEXT): $(dlx_cache_split_pc3_safe_OBJECTS) $(dlx_cache_split_pc3_safe_DEPENDENCIES) $(EXTRA_dlx_cache_split_pc3_safe_DEPENDENCIES) 
	@rm -f dlx-cache-split-pc3-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_cache_split_pc3_safe_OBJECTS) $(dlx_cache_split_pc3_safe_LDADD) $(LIBS)

dlx-cache-split-pc3-safe-ext-mem$(EXEEXT): $(dlx_cache_split_pc3_safe_ext_mem_OBJECTS) $(dlx_cache_split_pc3_safe_ext_mem_DEPENDENCIES) $(EXTRA_dlx_cache_split_pc3_safe_ext_mem_DEPENDENCIES) 
	@rm -f dlx-cache-split-pc3-safe-ext-mem$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_cache_split_pc3_safe_ext_mem_OBJECTS) $(dlx_cache_split_pc3_safe_ext_mem_LDADD) $(LIBS)

dlx-cache-split-pc4-safe$(EXEEXT): $(dlx_cache_split_pc4_safe_OBJECTS) $(dlx_cache_split_pc4_safe_DEPENDENCIES) $(EXTRA_dlx_cache_split_pc4_safe_DEPENDENCIES) 
	@rm -f dlx-cache-split-pc4-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_cache_split_pc4_safe_OBJECTS) $(dlx_cache_split_pc4_safe_LDADD) $(LIBS)

dlx-cache-split-safe$(EXEEXT): $(dlx_cache_split_safe_OBJECTS) $(dlx_cache_split_safe_DEPENDENCIES) $(EXTRA_dlx_cache_split_safe_DEPENDENCIES) 
	@rm -f dlx-cache-split-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_cache_split_safe_OBJECTS) $(dlx_cache_split_safe_LDADD) $(LIBS)

dlx-cache-split-safe-ext-mem$(EXEEXT): $(dlx_cache_split_safe_ext_mem_OBJECTS) $(dlx_cache_split_safe_ext_mem_DEPENDENCIES) $(EXTRA_dlx_cache_split_safe_ext_mem_DEPENDENCIES) 
	@rm -f dlx-cache-split-safe-ext-mem$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_cache_split_safe_ext_mem_OBJECTS) $(dlx_cache_split_safe_ext_mem_LDADD) $(LIBS)

dlx-cache-split2$(EXEEXT): $(dlx_cache_split2_OBJECTS) $(dlx_cache_split2_DEPENDENCIES) $(EXTRA_dlx_cache_split2_DEPENDENCIES) 
	@rm -f dlx-cache-split2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_cache_split2_OBJECTS) $(dlx_cache_split2_LDADD) $(LIBS)

dlx-cache-split2-safe$(EXEEXT): $(dlx_cache_split2_safe_OBJECTS) $(dlx_cache_split2_safe_DEPENDENCIES) $(EXTRA_dlx_cache_split2_safe_DEPENDENCIES) 
	@rm -f dlx-cache-split2-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_cache_split2_safe_OBJECTS) $(dlx_cache_split2_safe_LDADD) $(LIBS)

dlx-cache-unified$(EXEEXT): $(dlx_cache_unified_OBJECTS) $(dlx_cache_unified_DEPENDENCIES) $(EXTRA_dlx_cache_unified_DEPENDENCIES) 
	@rm -f dlx-cache-unified$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_cache_unified_OBJECTS) $(dlx_cache_unified_LDADD) $(LIBS)

dlx-cache-unified-safe$(EXEEXT): $(dlx_cache_unified_safe_OBJECTS) $(dlx_cache_unified_safe_DEPENDENCIES) $(EXTRA_dlx_cache_unified_safe_DEPENDENCIES) 
	@rm -f dlx-cache-unified-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_cache_unified_safe_OBJECTS) $(dlx_cache_unified_safe_LDADD) $(LIBS)

dlx-delay$(EXEEXT): $(dlx_delay_OBJECTS) $(dlx_delay_DEPENDENCIES) $(EXTRA_dlx_delay_DEPENDENCIES) 
	@rm -f dlx-delay$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_delay_OBJECTS) $(dlx_delay_LDADD) $(LIBS)

dlx-delay-safe$(EXEEXT): $(dlx_delay_safe_OBJECTS) $(dlx_delay_safe_DEPENDENCIES) $(EXTRA_dlx_delay_safe_DEPENDENCIES) 
	@rm -f dlx-delay-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_delay_safe_OBJECTS) $(dlx_delay_safe_LDADD) $(LIBS)

dlx-ext-mem$(EXEEXT): $(dlx_ext_mem_OBJECTS) $(dlx_ext_mem_DEPENDENCIES) $(EXTRA_dlx_ext_mem_DEPENDENCIES) 
	@rm -f dlx-ext-mem$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_ext_mem_OBJECTS) $(dlx_ext_mem_LDADD) $(LIBS)

dlx-fwd$(EXEEXT): $(dlx_fwd_OBJECTS) $(dlx_fwd_DEPENDENCIES) $(EXTRA_dlx_fwd_DEPENDENCIES) 
	@rm -f dlx-fwd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_fwd_OBJECTS) $(dlx_fwd_LDADD) $(LIBS)

dlx-fwd-safe$(EXEEXT): $(dlx_fwd_safe_OBJECTS) $(dlx_fwd_safe_DEPENDENCIES) $(EXTRA_dlx_fwd_safe_DEPENDENCIES) 
	@rm -f dlx-fwd-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_fwd_safe_OBJECTS) $(dlx_fwd_safe_LDADD) $(LIBS)

dlx-hrvd$(EXEEXT): $(dlx_hrvd_OBJECTS) $(dlx_hrvd_DEPENDENCIES) $(EXTRA_dlx_hrvd_DEPENDENCIES) 
	@rm -f dlx-hrvd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_hrvd_OBJECTS) $(dlx_hrvd_LDADD) $(LIBS)

dlx-hrvd-safe$(EXEEXT): $(dlx_hrvd_safe_OBJECTS) $(dlx_hrvd_safe_DEPENDENCIES) $(EXTRA_dlx_hrvd_safe_DEPENDENCIES) 
	@rm -f dlx-hrvd-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_hrvd_safe_OBJECTS) $(dlx_hrvd_safe_LDADD) $(LIBS)

dlx-l2$(EXEEXT): $(dlx_l2_OBJECTS) $(dlx_l2_DEPENDENCIES) $(EXTRA_dlx_l2_DEPENDENCIES) 
	@rm -f dlx-l2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_l2_OBJECTS) $(dlx_l2_LDADD) $(LIBS)

dlx-l2-safe$(EXEEXT): $(dlx_l2_safe_OBJECTS) $(dlx_l2_safe_DEPENDENCIES) $(EXTRA_dlx_l2_safe_DEPENDENCIES) 
	@rm -f dlx-l2-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_l2_safe_OBJECTS) $(dlx_l2_safe_LDADD) $(LIBS)

dlx-mt1$(EXEEXT): $(dlx_mt1_OBJECTS) $(dlx_mt1_DEPENDENCIES) $(EXTRA_dlx_mt1_DEPENDENCIES) 
	@rm -f dlx-mt1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_mt1_OBJECTS) $(dlx_mt1_LDADD) $(LIBS)

dlx-mt1-imm-safe$(EXEEXT): $(dlx_mt1_imm_safe_OBJECTS) $(dlx_mt1_imm_safe_DEPENDENCIES) $(EXTRA_dlx_mt1_imm_safe_DEPENDENCIES) 
	@rm -f dlx-mt1-imm-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_mt1_imm_safe_OBJECTS) $(dlx_mt1_imm_safe_LDADD) $(LIBS)

dlx-mt1-safe$(EXEEXT): $(dlx_mt1_safe_OBJECTS) $(dlx_mt1_safe_DEPENDENCIES) $(EXTRA_dlx_mt1_safe_DEPENDENCIES) 
	@rm -f dlx-mt1-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_mt1_safe_OBJECTS) $(dlx_mt1_safe_LDADD) $(LIBS)

dlx-mt2$(EXEEXT): $(dlx_mt2_OBJECTS) $(dlx_mt2_DEPENDENCIES) $(EXTRA_dlx_mt2_DEPENDENCIES) 
	@rm -f dlx-mt2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_mt2_OBJECTS) $(dlx_mt2_LDADD) $(LIBS)

dlx-mt3$(EXEEXT): $(dlx_mt3_OBJECTS) $(dlx_mt3_DEPENDENCIES) $(EXTRA_dlx_mt3_DEPENDENCIES) 
	@rm -f dlx-mt3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_mt3_OBJECTS) $(dlx_mt3_LDADD) $(LIBS)

dlx-safe$(EXEEXT): $(dlx_safe_OBJECTS) $(dlx_safe_DEPENDENCIES) $(EXTRA_dlx_safe_DEPENDENCIES) 
	@rm -f dlx-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_safe_OBJECTS) $(dlx_safe_LDADD) $(LIBS)

dlx-stall$(EXEEXT): $(dlx_stall_OBJECTS) $(dlx_stall_DEPENDENCIES) $(EXTRA_dlx_stall_DEPENDENCIES) 
	@rm -f dlx-stall$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_stall_OBJECTS) $(dlx_stall_LDADD) $(LIBS)

dlx-stall-safe$(EXEEXT): $(dlx_stall_safe_OBJECTS) $(dlx_stall_safe_DEPENDENCIES) $(EXTRA_dlx_stall_safe_DEPENDENCIES) 
	@rm -f dlx-stall-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_stall_safe_OBJECTS) $(dlx_stall_safe_LDADD) $(LIBS)

dlx-stwcx$(EXEEXT): $(dlx_stwcx_OBJECTS) $(dlx_stwcx_DEPENDENCIES) $(EXTRA_dlx_stwcx_DEPENDENCIES) 
	@rm -f dlx-stwcx$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_stwcx_OBJECTS) $(dlx_stwcx_LDADD) $(LIBS)

dlx-vd$(EXEEXT): $(dlx_vd_OBJECTS) $(dlx_vd_DEPENDENCIES) $(EXTRA_dlx_vd_DEPENDENCIES) 
	@rm -f dlx-vd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_vd_OBJECTS) $(dlx_vd_LDADD) $(LIBS)

dlx-vle$(EXEEXT): $(dlx_vle_OBJECTS) $(dlx_vle_DEPENDENCIES) $(EXTRA_dlx_vle_DEPENDENCIES) 
	@rm -f dlx-vle$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_vle_OBJECTS) $(dlx_vle_LDADD) $(LIBS)

dlx-vle-ic$(EXEEXT): $(dlx_vle_ic_OBJECTS) $(dlx_vle_ic_DEPENDENCIES) $(EXTRA_dlx_vle_ic_DEPENDENCIES) 
	@rm -f dlx-vle-ic$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_vle_ic_OBJECTS) $(dlx_vle_ic_LDADD) $(LIBS)

dlx-vle-safe$(EXEEXT): $(dlx_vle_safe_OBJECTS) $(dlx_vle_safe_DEPENDENCIES) $(EXTRA_dlx_vle_safe_DEPENDENCIES) 
	@rm -f dlx-vle-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_vle_safe_OBJECTS) $(dlx_vle_safe_LDADD) $(LIBS)

dlx-z0$(EXEEXT): $(dlx_z0_OBJECTS) $(dlx_z0_DEPENDENCIES) $(EXTRA_dlx_z0_DEPENDENCIES) 
	@rm -f dlx-z0$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_z0_OBJECTS) $(dlx_z0_LDADD) $(LIBS)

dlx-z0-ext-mem$(EXEEXT): $(dlx_z0_ext_mem_OBJECTS) $(dlx_z0_ext_mem_DEPENDENCIES) $(EXTRA_dlx_z0_ext_mem_DEPENDENCIES) 
	@rm -f dlx-z0-ext-mem$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_z0_ext_mem_OBJECTS) $(dlx_z0_ext_mem_LDADD) $(LIBS)

dlx-z0-safe$(EXEEXT): $(dlx_z0_safe_OBJECTS) $(dlx_z0_safe_DEPENDENCIES) $(EXTRA_dlx_z0_safe_DEPENDENCIES) 
	@rm -f dlx-z0-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_z0_safe_OBJECTS) $(dlx_z0_safe_LDADD) $(LIBS)

dlx-zl2-safe$(EXEEXT): $(dlx_zl2_safe_OBJECTS) $(dlx_zl2_safe_DEPENDENCIES) $(EXTRA_dlx_zl2_safe_DEPENDENCIES) 
	@rm -f dlx-zl2-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx_zl2_safe_OBJECTS) $(dlx_zl2_safe_LDADD) $(LIBS)

dlx2$(EXEEXT): $(dlx2_OBJECTS) $(dlx2_DEPENDENCIES) $(EXTRA_dlx2_DEPENDENCIES) 
	@rm -f dlx2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_OBJECTS) $(dlx2_LDADD) $(LIBS)

dlx2-bp2$(EXEEXT): $(dlx2_bp2_OBJECTS) $(dlx2_bp2_DEPENDENCIES) $(EXTRA_dlx2_bp2_DEPENDENCIES) 
	@rm -f dlx2-bp2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_bp2_OBJECTS) $(dlx2_bp2_LDADD) $(LIBS)

dlx2-bp2-bad-br$(EXEEXT): $(dlx2_bp2_bad_br_OBJECTS) $(dlx2_bp2_bad_br_DEPENDENCIES) $(EXTRA_dlx2_bp2_bad_br_DEPENDENCIES) 
	@rm -f dlx2-bp2-bad-br$(EXEEXT)
	$(AM_V_CXXLD)$(dlx2_bp2_bad_br_LINK) $(dlx2_bp2_bad_br_OBJECTS) $(dlx2_bp2_bad_br_LDADD) $(LIBS)

dlx2-bp2-safe$(EXEEXT): $(dlx2_bp2_safe_OBJECTS) $(dlx2_bp2_safe_DEPENDENCIES) $(EXTRA_dlx2_bp2_safe_DEPENDENCIES) 
	@rm -f dlx2-bp2-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_bp2_safe_OBJECTS) $(dlx2_bp2_safe_LDADD) $(LIBS)

dlx2-bp3-safe$(EXEEXT): $(dlx2_bp3_safe_OBJECTS) $(dlx2_bp3_safe_DEPENDENCIES) $(EXTRA_dlx2_bp3_safe_DEPENDENCIES) 
	@rm -f dlx2-bp3-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_bp3_safe_OBJECTS) $(dlx2_bp3_safe_LDADD) $(LIBS)

dlx2-ese$(EXEEXT): $(dlx2_ese_OBJECTS) $(dlx2_ese_DEPENDENCIES) $(EXTRA_dlx2_ese_DEPENDENCIES) 
	@rm -f dlx2-ese$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_ese_OBJECTS) $(dlx2_ese_LDADD) $(LIBS)

dlx2-ese-safe$(EXEEXT): $(dlx2_ese_safe_OBJECTS) $(dlx2_ese_safe_DEPENDENCIES) $(EXTRA_dlx2_ese_safe_DEPENDENCIES) 
	@rm -f dlx2-ese-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_ese_safe_OBJECTS) $(dlx2_ese_safe_LDADD) $(LIBS)

dlx2-fwd$(EXEEXT): $(dlx2_fwd_OBJECTS) $(dlx2_fwd_DEPENDENCIES) $(EXTRA_dlx2_fwd_DEPENDENCIES) 
	@rm -f dlx2-fwd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_fwd_OBJECTS) $(dlx2_fwd_LDADD) $(LIBS)

dlx2-fwd-bad-br$(EXEEXT): $(dlx2_fwd_bad_br_OBJECTS) $(dlx2_fwd_bad_br_DEPENDENCIES) $(EXTRA_dlx2_fwd_bad_br_DEPENDENCIES) 
	@rm -f dlx2-fwd-bad-br$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_fwd_bad_br_OBJECTS) $(dlx2_fwd_bad_br_LDADD) $(LIBS)

dlx2-fwd-safe$(EXEEXT): $(dlx2_fwd_safe_OBJECTS) $(dlx2_fwd_safe_DEPENDENCIES) $(EXTRA_dlx2_fwd_safe_DEPENDENCIES) 
	@rm -f dlx2-fwd-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_fwd_safe_OBJECTS) $(dlx2_fwd_safe_LDADD) $(LIBS)

dlx2-fwd-vd$(EXEEXT): $(dlx2_fwd_vd_OBJECTS) $(dlx2_fwd_vd_DEPENDENCIES) $(EXTRA_dlx2_fwd_vd_DEPENDENCIES) 
	@rm -f dlx2-fwd-vd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_fwd_vd_OBJECTS) $(dlx2_fwd_vd_LDADD) $(LIBS)

dlx2-lm$(EXEEXT): $(dlx2_lm_OBJECTS) $(dlx2_lm_DEPENDENCIES) $(EXTRA_dlx2_lm_DEPENDENCIES) 
	@rm -f dlx2-lm$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_lm_OBJECTS) $(dlx2_lm_LDADD) $(LIBS)

dlx2-pmr$(EXEEXT): $(dlx2_pmr_OBJECTS) $(dlx2_pmr_DEPENDENCIES) $(EXTRA_dlx2_pmr_DEPENDENCIES) 
	@rm -f dlx2-pmr$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_pmr_OBJECTS) $(dlx2_pmr_LDADD) $(LIBS)

dlx2-pmr-safe$(EXEEXT): $(dlx2_pmr_safe_OBJECTS) $(dlx2_pmr_safe_DEPENDENCIES) $(EXTRA_dlx2_pmr_safe_DEPENDENCIES) 
	@rm -f dlx2-pmr-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_pmr_safe_OBJECTS) $(dlx2_pmr_safe_LDADD) $(LIBS)

dlx2-safe$(EXEEXT): $(dlx2_safe_OBJECTS) $(dlx2_safe_DEPENDENCIES) $(EXTRA_dlx2_safe_DEPENDENCIES) 
	@rm -f dlx2-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_safe_OBJECTS) $(dlx2_safe_LDADD) $(LIBS)

dlx2-safe-lm$(EXEEXT): $(dlx2_safe_lm_OBJECTS) $(dlx2_safe_lm_DEPENDENCIES) $(EXTRA_dlx2_safe_lm_DEPENDENCIES) 
	@rm -f dlx2-safe-lm$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_safe_lm_OBJECTS) $(dlx2_safe_lm_LDADD) $(LIBS)

dlx2-wide-safe$(EXEEXT): $(dlx2_wide_safe_OBJECTS) $(dlx2_wide_safe_DEPENDENCIES) $(EXTRA_dlx2_wide_safe_DEPENDENCIES) 
	@rm -f dlx2-wide-safe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx2_wide_safe_OBJECTS) $(dlx2_wide_safe_LDADD) $(LIBS)

dlx3$(EXEEXT): $(dlx3_OBJECTS) $(dlx3_DEPENDENCIES) $(EXTRA_dlx3_DEPENDENCIES) 
	@rm -f dlx3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dlx3_OBJECTS) $(dlx3_LDADD) $(LIBS)

test-sysc-base$(EXEEXT): $(test_sysc_base_OBJECTS) $(test_sysc_base_DEPENDENCIES) $(EXTRA_test_sysc_base_DEPENDENCIES) 
	@rm -f test-sysc-base$(EXEEXT)
	$(AM_V_CXXLD)$(test_sysc_base_LINK) $(test_sysc_base_OBJECTS) $(test_sysc_base_LDADD) $(LIBS)

test-sysc-method$(EXEEXT): $(test_sysc_method_OBJECTS) $(test_sysc_method_DEPENDENCIES) $(EXTRA_test_sysc_method_DEPENDENCIES) 
	@rm -f test-sysc-method$(EXEEXT)
	$(AM_V_CXXLD)$(test_sysc_method_LINK) $(test_sysc_method_OBJECTS) $(test_sysc_method_LDADD) $(LIBS)

test-sysc-mt1$(EXEEXT): $(test_sysc_mt1_OBJECTS) $(test_sysc_mt1_DEPENDENCIES) $(EXTRA_test_sysc_mt1_DEPENDENCIES) 
	@rm -f test-sysc-mt1$(EXEEXT)
	$(AM_V_CXXLD)$(test_sysc_mt1_LINK) $(test_sysc_mt1_OBJECTS) $(test_sysc_mt1_LDADD) $(LIBS)

test-sysc-pc2$(EXEEXT): $(test_sysc_pc2_OBJECTS) $(test_sysc_pc2_DEPENDENCIES) $(EXTRA_test_sysc_pc2_DEPENDENCIES) 
	@rm -f test-sysc-pc2$(EXEEXT)
	$(AM_V_CXXLD)$(test_sysc_pc2_LINK) $(test_sysc_pc2_OBJECTS) $(test_sysc_pc2_LDADD) $(LIBS)

test-sysc-thread$(EXEEXT): $(test_sysc_thread_OBJECTS) $(test_sysc_thread_DEPENDENCIES) $(EXTRA_test_sysc_thread_DEPENDENCIES) 
	@rm -f test-sysc-thread$(EXEEXT)
	$(AM_V_CXXLD)$(test_sysc_thread_LINK) $(test_sysc_thread_OBJECTS) $(test_sysc_thread_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-all-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-all.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-bad-br.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-bp-fetch-safe-ext-mem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-bp-fetch-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-bp-fetch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-bp-issue-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-bp-issue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-bubble-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-bubble.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-cache-split-imm-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-cache-split-pc-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-cache-split-pc2-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-cache-split-pc3-safe-ext-mem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-cache-split-pc3-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-cache-split-pc4-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-cache-split-safe-ext-mem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-cache-split-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-cache-split.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-cache-split2-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-cache-split2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-cache-unified-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-cache-unified.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-delay-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-delay.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-ext-mem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-fwd-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-fwd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-hrvd-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-hrvd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-l2-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-l2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-mt1-imm-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-mt1-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-mt1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-mt2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-mt3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-stall-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-stall.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-stwcx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-vd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-vle-ic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-vle-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-vle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-z0-ext-mem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-z0-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-z0.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx-zl2-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-bp2-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-bp2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-bp3-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-ese-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-ese.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-fwd-bad-br.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-fwd-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-fwd-vd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-fwd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-lm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-pmr-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-pmr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-safe-lm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2-wide-safe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx2_bp2_bad_br-dlx2-bp2-bad-br.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlx3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ext-mem-excp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ext-mem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sysc_base-dlx-sysc-base.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sysc_base-test-sysc-base.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sysc_method-dlx-sysc-method.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sysc_method-test-systemc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sysc_mt1-dlx-sysc-mt1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sysc_mt1-test-systemc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sysc_pc2-dlx-sysc-pc2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sysc_pc2-test-systemc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sysc_thread-dlx-sysc-thread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_sysc_thread-test-systemc.Po@am__quote@

.C.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.C.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

dlx2_bp2_bad_br-dlx2-bp2-bad-br.o: dlx2-bp2-bad-br.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dlx2_bp2_bad_br_CXXFLAGS) $(CXXFLAGS) -MT dlx2_bp2_bad_br-dlx2-bp2-bad-br.o -MD -MP -MF $(DEPDIR)/dlx2_bp2_bad_br-dlx2-bp2-bad-br.Tpo -c -o dlx2_bp2_bad_br-dlx2-bp2-bad-br.o `test -f 'dlx2-bp2-bad-br.cc' || echo '$(srcdir)/'`dlx2-bp2-bad-br.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dlx2_bp2_bad_br-dlx2-bp2-bad-br.Tpo $(DEPDIR)/dlx2_bp2_bad_br-dlx2-bp2-bad-br.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='dlx2-bp2-bad-br.cc' object='dlx2_bp2_bad_br-dlx2-bp2-bad-br.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dlx2_bp2_bad_br_CXXFLAGS) $(CXXFLAGS) -c -o dlx2_bp2_bad_br-dlx2-bp2-bad-br.o `test -f 'dlx2-bp2-bad-br.cc' || echo '$(srcdir)/'`dlx2-bp2-bad-br.cc

dlx2_bp2_bad_br-dlx2-bp2-bad-br.obj: dlx2-bp2-bad-br.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dlx2_bp2_bad_br_CXXFLAGS) $(CXXFLAGS) -MT dlx2_bp2_bad_br-dlx2-bp2-bad-br.obj -MD -MP -MF $(DEPDIR)/dlx2_bp2_bad_br-dlx2-bp2-bad-br.Tpo -c -o dlx2_bp2_bad_br-dlx2-bp2-bad-br.obj `if test -f 'dlx2-bp2-bad-br.cc'; then $(CYGPATH_W) 'dlx2-bp2-bad-br.cc'; else $(CYGPATH_W) '$(srcdir)/dlx2-bp2-bad-br.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dlx2_bp2_bad_br-dlx2-bp2-bad-br.Tpo $(DEPDIR)/dlx2_bp2_bad_br-dlx2-bp2-bad-br.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='dlx2-bp2-bad-br.cc' object='dlx2_bp2_bad_br-dlx2-bp2-bad-br.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dlx2_bp2_bad_br_CXXFLAGS) $(CXXFLAGS) -c -o dlx2_bp2_bad_br-dlx2-bp2-bad-br.obj `if test -f 'dlx2-bp2-bad-br.cc'; then $(CYGPATH_W) 'dlx2-bp2-bad-br.cc'; else $(CYGPATH_W) '$(srcdir)/dlx2-bp2-bad-br.cc'; fi`

test_sysc_base-dlx-sysc-base.o: dlx-sysc-base.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_base_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_base-dlx-sysc-base.o -MD -MP -MF $(DEPDIR)/test_sysc_base-dlx-sysc-base.Tpo -c -o test_sysc_base-dlx-sysc-base.o `test -f 'dlx-sysc-base.cc' || echo '$(srcdir)/'`dlx-sysc-base.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_base-dlx-sysc-base.Tpo $(DEPDIR)/test_sysc_base-dlx-sysc-base.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='dlx-sysc-base.cc' object='test_sysc_base-dlx-sysc-base.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_base_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_base-dlx-sysc-base.o `test -f 'dlx-sysc-base.cc' || echo '$(srcdir)/'`dlx-sysc-base.cc

test_sysc_base-dlx-sysc-base.obj: dlx-sysc-base.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_base_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_base-dlx-sysc-base.obj -MD -MP -MF $(DEPDIR)/test_sysc_base-dlx-sysc-base.Tpo -c -o test_sysc_base-dlx-sysc-base.obj `if test -f 'dlx-sysc-base.cc'; then $(CYGPATH_W) 'dlx-sysc-base.cc'; else $(CYGPATH_W) '$(srcdir)/dlx-sysc-base.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_base-dlx-sysc-base.Tpo $(DEPDIR)/test_sysc_base-dlx-sysc-base.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='dlx-sysc-base.cc' object='test_sysc_base-dlx-sysc-base.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_base_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_base-dlx-sysc-base.obj `if test -f 'dlx-sysc-base.cc'; then $(CYGPATH_W) 'dlx-sysc-base.cc'; else $(CYGPATH_W) '$(srcdir)/dlx-sysc-base.cc'; fi`

test_sysc_base-test-sysc-base.o: test-sysc-base.C
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_base_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_base-test-sysc-base.o -MD -MP -MF $(DEPDIR)/test_sysc_base-test-sysc-base.Tpo -c -o test_sysc_base-test-sysc-base.o `test -f 'test-sysc-base.C' || echo '$(srcdir)/'`test-sysc-base.C
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_base-test-sysc-base.Tpo $(DEPDIR)/test_sysc_base-test-sysc-base.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-sysc-base.C' object='test_sysc_base-test-sysc-base.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_base_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_base-test-sysc-base.o `test -f 'test-sysc-base.C' || echo '$(srcdir)/'`test-sysc-base.C

test_sysc_base-test-sysc-base.obj: test-sysc-base.C
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_base_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_base-test-sysc-base.obj -MD -MP -MF $(DEPDIR)/test_sysc_base-test-sysc-base.Tpo -c -o test_sysc_base-test-sysc-base.obj `if test -f 'test-sysc-base.C'; then $(CYGPATH_W) 'test-sysc-base.C'; else $(CYGPATH_W) '$(srcdir)/test-sysc-base.C'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_base-test-sysc-base.Tpo $(DEPDIR)/test_sysc_base-test-sysc-base.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-sysc-base.C' object='test_sysc_base-test-sysc-base.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_base_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_base-test-sysc-base.obj `if test -f 'test-sysc-base.C'; then $(CYGPATH_W) 'test-sysc-base.C'; else $(CYGPATH_W) '$(srcdir)/test-sysc-base.C'; fi`

test_sysc_method-dlx-sysc-method.o: dlx-sysc-method.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_method_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_method-dlx-sysc-method.o -MD -MP -MF $(DEPDIR)/test_sysc_method-dlx-sysc-method.Tpo -c -o test_sysc_method-dlx-sysc-method.o `test -f 'dlx-sysc-method.cc' || echo '$(srcdir)/'`dlx-sysc-method.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_method-dlx-sysc-method.Tpo $(DEPDIR)/test_sysc_method-dlx-sysc-method.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='dlx-sysc-method.cc' object='test_sysc_method-dlx-sysc-method.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_method_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_method-dlx-sysc-method.o `test -f 'dlx-sysc-method.cc' || echo '$(srcdir)/'`dlx-sysc-method.cc

test_sysc_method-dlx-sysc-method.obj: dlx-sysc-method.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_method_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_method-dlx-sysc-method.obj -MD -MP -MF $(DEPDIR)/test_sysc_method-dlx-sysc-method.Tpo -c -o test_sysc_method-dlx-sysc-method.obj `if test -f 'dlx-sysc-method.cc'; then $(CYGPATH_W) 'dlx-sysc-method.cc'; else $(CYGPATH_W) '$(srcdir)/dlx-sysc-method.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_method-dlx-sysc-method.Tpo $(DEPDIR)/test_sysc_method-dlx-sysc-method.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='dlx-sysc-method.cc' object='test_sysc_method-dlx-sysc-method.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_method_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_method-dlx-sysc-method.obj `if test -f 'dlx-sysc-method.cc'; then $(CYGPATH_W) 'dlx-sysc-method.cc'; else $(CYGPATH_W) '$(srcdir)/dlx-sysc-method.cc'; fi`

test_sysc_method-test-systemc.o: test-systemc.C
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_method_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_method-test-systemc.o -MD -MP -MF $(DEPDIR)/test_sysc_method-test-systemc.Tpo -c -o test_sysc_method-test-systemc.o `test -f 'test-systemc.C' || echo '$(srcdir)/'`test-systemc.C
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_method-test-systemc.Tpo $(DEPDIR)/test_sysc_method-test-systemc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-systemc.C' object='test_sysc_method-test-systemc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_method_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_method-test-systemc.o `test -f 'test-systemc.C' || echo '$(srcdir)/'`test-systemc.C

test_sysc_method-test-systemc.obj: test-systemc.C
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_method_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_method-test-systemc.obj -MD -MP -MF $(DEPDIR)/test_sysc_method-test-systemc.Tpo -c -o test_sysc_method-test-systemc.obj `if test -f 'test-systemc.C'; then $(CYGPATH_W) 'test-systemc.C'; else $(CYGPATH_W) '$(srcdir)/test-systemc.C'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_method-test-systemc.Tpo $(DEPDIR)/test_sysc_method-test-systemc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-systemc.C' object='test_sysc_method-test-systemc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_method_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_method-test-systemc.obj `if test -f 'test-systemc.C'; then $(CYGPATH_W) 'test-systemc.C'; else $(CYGPATH_W) '$(srcdir)/test-systemc.C'; fi`

test_sysc_mt1-dlx-sysc-mt1.o: dlx-sysc-mt1.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_mt1_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_mt1-dlx-sysc-mt1.o -MD -MP -MF $(DEPDIR)/test_sysc_mt1-dlx-sysc-mt1.Tpo -c -o test_sysc_mt1-dlx-sysc-mt1.o `test -f 'dlx-sysc-mt1.cc' || echo '$(srcdir)/'`dlx-sysc-mt1.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_mt1-dlx-sysc-mt1.Tpo $(DEPDIR)/test_sysc_mt1-dlx-sysc-mt1.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='dlx-sysc-mt1.cc' object='test_sysc_mt1-dlx-sysc-mt1.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_mt1_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_mt1-dlx-sysc-mt1.o `test -f 'dlx-sysc-mt1.cc' || echo '$(srcdir)/'`dlx-sysc-mt1.cc

test_sysc_mt1-dlx-sysc-mt1.obj: dlx-sysc-mt1.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_mt1_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_mt1-dlx-sysc-mt1.obj -MD -MP -MF $(DEPDIR)/test_sysc_mt1-dlx-sysc-mt1.Tpo -c -o test_sysc_mt1-dlx-sysc-mt1.obj `if test -f 'dlx-sysc-mt1.cc'; then $(CYGPATH_W) 'dlx-sysc-mt1.cc'; else $(CYGPATH_W) '$(srcdir)/dlx-sysc-mt1.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_mt1-dlx-sysc-mt1.Tpo $(DEPDIR)/test_sysc_mt1-dlx-sysc-mt1.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='dlx-sysc-mt1.cc' object='test_sysc_mt1-dlx-sysc-mt1.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_mt1_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_mt1-dlx-sysc-mt1.obj `if test -f 'dlx-sysc-mt1.cc'; then $(CYGPATH_W) 'dlx-sysc-mt1.cc'; else $(CYGPATH_W) '$(srcdir)/dlx-sysc-mt1.cc'; fi`

test_sysc_mt1-test-systemc.o: test-systemc.C
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_mt1_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_mt1-test-systemc.o -MD -MP -MF $(DEPDIR)/test_sysc_mt1-test-systemc.Tpo -c -o test_sysc_mt1-test-systemc.o `test -f 'test-systemc.C' || echo '$(srcdir)/'`test-systemc.C
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_mt1-test-systemc.Tpo $(DEPDIR)/test_sysc_mt1-test-systemc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-systemc.C' object='test_sysc_mt1-test-systemc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_mt1_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_mt1-test-systemc.o `test -f 'test-systemc.C' || echo '$(srcdir)/'`test-systemc.C

test_sysc_mt1-test-systemc.obj: test-systemc.C
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_mt1_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_mt1-test-systemc.obj -MD -MP -MF $(DEPDIR)/test_sysc_mt1-test-systemc.Tpo -c -o test_sysc_mt1-test-systemc.obj `if test -f 'test-systemc.C'; then $(CYGPATH_W) 'test-systemc.C'; else $(CYGPATH_W) '$(srcdir)/test-systemc.C'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_mt1-test-systemc.Tpo $(DEPDIR)/test_sysc_mt1-test-systemc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-systemc.C' object='test_sysc_mt1-test-systemc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_mt1_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_mt1-test-systemc.obj `if test -f 'test-systemc.C'; then $(CYGPATH_W) 'test-systemc.C'; else $(CYGPATH_W) '$(srcdir)/test-systemc.C'; fi`

test_sysc_pc2-dlx-sysc-pc2.o: dlx-sysc-pc2.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_pc2_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_pc2-dlx-sysc-pc2.o -MD -MP -MF $(DEPDIR)/test_sysc_pc2-dlx-sysc-pc2.Tpo -c -o test_sysc_pc2-dlx-sysc-pc2.o `test -f 'dlx-sysc-pc2.cc' || echo '$(srcdir)/'`dlx-sysc-pc2.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_pc2-dlx-sysc-pc2.Tpo $(DEPDIR)/test_sysc_pc2-dlx-sysc-pc2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='dlx-sysc-pc2.cc' object='test_sysc_pc2-dlx-sysc-pc2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_pc2_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_pc2-dlx-sysc-pc2.o `test -f 'dlx-sysc-pc2.cc' || echo '$(srcdir)/'`dlx-sysc-pc2.cc

test_sysc_pc2-dlx-sysc-pc2.obj: dlx-sysc-pc2.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_pc2_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_pc2-dlx-sysc-pc2.obj -MD -MP -MF $(DEPDIR)/test_sysc_pc2-dlx-sysc-pc2.Tpo -c -o test_sysc_pc2-dlx-sysc-pc2.obj `if test -f 'dlx-sysc-pc2.cc'; then $(CYGPATH_W) 'dlx-sysc-pc2.cc'; else $(CYGPATH_W) '$(srcdir)/dlx-sysc-pc2.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_pc2-dlx-sysc-pc2.Tpo $(DEPDIR)/test_sysc_pc2-dlx-sysc-pc2.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='dlx-sysc-pc2.cc' object='test_sysc_pc2-dlx-sysc-pc2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_pc2_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_pc2-dlx-sysc-pc2.obj `if test -f 'dlx-sysc-pc2.cc'; then $(CYGPATH_W) 'dlx-sysc-pc2.cc'; else $(CYGPATH_W) '$(srcdir)/dlx-sysc-pc2.cc'; fi`

test_sysc_pc2-test-systemc.o: test-systemc.C
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_pc2_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_pc2-test-systemc.o -MD -MP -MF $(DEPDIR)/test_sysc_pc2-test-systemc.Tpo -c -o test_sysc_pc2-test-systemc.o `test -f 'test-systemc.C' || echo '$(srcdir)/'`test-systemc.C
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_pc2-test-systemc.Tpo $(DEPDIR)/test_sysc_pc2-test-systemc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-systemc.C' object='test_sysc_pc2-test-systemc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_pc2_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_pc2-test-systemc.o `test -f 'test-systemc.C' || echo '$(srcdir)/'`test-systemc.C

test_sysc_pc2-test-systemc.obj: test-systemc.C
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_pc2_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_pc2-test-systemc.obj -MD -MP -MF $(DEPDIR)/test_sysc_pc2-test-systemc.Tpo -c -o test_sysc_pc2-test-systemc.obj `if test -f 'test-systemc.C'; then $(CYGPATH_W) 'test-systemc.C'; else $(CYGPATH_W) '$(srcdir)/test-systemc.C'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_pc2-test-systemc.Tpo $(DEPDIR)/test_sysc_pc2-test-systemc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-systemc.C' object='test_sysc_pc2-test-systemc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_pc2_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_pc2-test-systemc.obj `if test -f 'test-systemc.C'; then $(CYGPATH_W) 'test-systemc.C'; else $(CYGPATH_W) '$(srcdir)/test-systemc.C'; fi`

test_sysc_thread-dlx-sysc-thread.o: dlx-sysc-thread.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_thread_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_thread-dlx-sysc-thread.o -MD -MP -MF $(DEPDIR)/test_sysc_thread-dlx-sysc-thread.Tpo -c -o test_sysc_thread-dlx-sysc-thread.o `test -f 'dlx-sysc-thread.cc' || echo '$(srcdir)/'`dlx-sysc-thread.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_thread-dlx-sysc-thread.Tpo $(DEPDIR)/test_sysc_thread-dlx-sysc-thread.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='dlx-sysc-thread.cc' object='test_sysc_thread-dlx-sysc-thread.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_thread_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_thread-dlx-sysc-thread.o `test -f 'dlx-sysc-thread.cc' || echo '$(srcdir)/'`dlx-sysc-thread.cc

test_sysc_thread-dlx-sysc-thread.obj: dlx-sysc-thread.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_thread_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_thread-dlx-sysc-thread.obj -MD -MP -MF $(DEPDIR)/test_sysc_thread-dlx-sysc-thread.Tpo -c -o test_sysc_thread-dlx-sysc-thread.obj `if test -f 'dlx-sysc-thread.cc'; then $(CYGPATH_W) 'dlx-sysc-thread.cc'; else $(CYGPATH_W) '$(srcdir)/dlx-sysc-thread.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_thread-dlx-sysc-thread.Tpo $(DEPDIR)/test_sysc_thread-dlx-sysc-thread.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='dlx-sysc-thread.cc' object='test_sysc_thread-dlx-sysc-thread.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_thread_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_thread-dlx-sysc-thread.obj `if test -f 'dlx-sysc-thread.cc'; then $(CYGPATH_W) 'dlx-sysc-thread.cc'; else $(CYGPATH_W) '$(srcdir)/dlx-sysc-thread.cc'; fi`

test_sysc_thread-test-systemc.o: test-systemc.C
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_thread_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_thread-test-systemc.o -MD -MP -MF $(DEPDIR)/test_sysc_thread-test-systemc.Tpo -c -o test_sysc_thread-test-systemc.o `test -f 'test-systemc.C' || echo '$(srcdir)/'`test-systemc.C
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_thread-test-systemc.Tpo $(DEPDIR)/test_sysc_thread-test-systemc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-systemc.C' object='test_sysc_thread-test-systemc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_thread_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_thread-test-systemc.o `test -f 'test-systemc.C' || echo '$(srcdir)/'`test-systemc.C

test_sysc_thread-test-systemc.obj: test-systemc.C
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_thread_CXXFLAGS) $(CXXFLAGS) -MT test_sysc_thread-test-systemc.obj -MD -MP -MF $(DEPDIR)/test_sysc_thread-test-systemc.Tpo -c -o test_sysc_thread-test-systemc.obj `if test -f 'test-systemc.C'; then $(CYGPATH_W) 'test-systemc.C'; else $(CYGPATH_W) '$(srcdir)/test-systemc.C'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_sysc_thread-test-systemc.Tpo $(DEPDIR)/test_sysc_thread-test-systemc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test-systemc.C' object='test_sysc_thread-test-systemc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sysc_thread_CXXFLAGS) $(CXXFLAGS) -c -o test_sysc_thread-test-systemc.obj `if test -f 'test-systemc.C'; then $(CYGPATH_W) 'test-systemc.C'; else $(CYGPATH_W) '$(srcdir)/test-systemc.C'; fi`

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dataDATA: $(data_DATA)
	@$(NORMAL_INSTALL)
	@list='$(data_DATA)'; test -n "$(datadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(datadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(datadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(datadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(datadir)" || exit $$?; \
	done

uninstall-dataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(data_DATA)'; test -n "$(datadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(datadir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst $(AM_TESTS_FD_REDIRECT); then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(datadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dataDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-dataDATA

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dataDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-dataDATA

.PRECIOUS: Makefile


# Run check with arguments to run the regressions in parallel.
pcheck:
	$(MAKE) check RegressOpts="-p=8"

check-programs: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) 

define UADL_template
$(1).cc: $(2) $(PARSER)
	$$(UADLBUILD) -o $(1) $3

$(1)-iss.$(OBJEXT): $(1).cc

# Dummy target so that we don't get an error because it doesn't know how to build the .cc file.
$(1)-iss.cc: $(1).cc

endef

define UADL_safe_template
$(1).cc: $(2) $(PARSER)
	$$(UADLBUILD) --safe-mode -o $(1) $3

$(1)-iss.$(OBJEXT): $(1).cc

# Dummy target so that we don't get an error because it doesn't know how to build the .cc file.
$(1)-iss.cc: $(1).cc

endef

define UADL_imm_safe_template
$(1).cc: $(2) $(PARSER)
	$$(UADLBUILD) --iss-mem-mode --safe-mode $$(IssMemMode) -o $(1) $3

$(1)-iss.$(OBJEXT): $(1).cc

# Dummy target so that we don't get an error because it doesn't know how to build the .cc file.
$(1)-iss.cc: $(1).cc

endef
$(eval $(call UADL_template,dlx,$(srcdir)/dlx.uadl $(srcdir)/mod1-uadl.adl $(IssDir)/mod1.adl,-I=$(IssDir)))
$(eval $(call UADL_template,dlx-vd,$(srcdir)/dlx.uadl $(srcdir)/mod1-uadl.adl $(IssDir)/mod1.adl,-I=$(IssDir) --instr-class-vd))
$(eval $(call UADL_safe_template,dlx-safe,$(srcdir)/dlx.uadl $(srcdir)/mod1-uadl.adl $(IssDir)/mod1.adl,-I=$(IssDir)))
$(eval $(call UADL_safe_template,dlx-bad-br,$(srcdir)/dlx.uadl $(srcdir)/mod1-uadl.adl $(IssDir)/mod1.adl,-I=$(IssDir) -D=BAD_BRANCH))
$(eval $(call UADL_template,dlx-ext-mem,$(srcdir)/dlx.uadl $(IssDir)/mod1.adl, --extern-mem))
$(eval $(call UADL_template,dlx-64,$(srcdir)/dlx.uadl $(srcdir)/mod1-uadl.adl $(IssDir)/mod1.adl,-I=$(IssDir) -D=MemWidth=64))
$(eval $(call UADL_template,dlx-fwd,$(srcdir)/dlx-fwd.uadl $(srcdir)/mod1-fwd.adl $(IssDir)/mod1.adl,-I=$(IssDir) -I=$(srcdir) -D=UADL))
$(eval $(call UADL_safe_template,dlx-fwd-safe,$(srcdir)/dlx-fwd.uadl $(srcdir)/mod1-fwd.adl $(IssDir)/mod1.adl,-I=$(IssDir)  -I=$(srcdir) -D=UADL))
$(eval $(call UADL_template,dlx2,$(srcdir)/dlx2.uadl $(IssDir)/mod11.adl, --instr-cache))
$(eval $(call UADL_template,dlx2-lm,$(srcdir)/dlx2.uadl $(IssDir)/mod11.adl, --instr-cache --low-mem))
$(eval $(call UADL_safe_template,dlx2-safe,$(srcdir)/dlx2.uadl $(IssDir)/mod11.adl))
$(eval $(call UADL_safe_template,dlx2-safe-lm,$(srcdir)/dlx2.uadl $(IssDir)/mod11.adl, --low-mem))
$(eval $(call UADL_template,dlx2-ese,$(srcdir)/dlx2.uadl $(srcdir)/mod11-ese.adl, --instr-cache -I=$(IssDir)))
$(eval $(call UADL_safe_template,dlx2-ese-safe,$(srcdir)/dlx2.uadl $(srcdir)/mod11-ese.adl, --instr-cache -I=$(IssDir)))
$(eval $(call UADL_template,dlx2-fwd,$(srcdir)/dlx2-fwd.uadl $(IssDir)/mod11.adl, --instr-cache  --debug-mode))
$(eval $(call UADL_template,dlx2-fwd-vd,$(srcdir)/dlx2-fwd.uadl $(IssDir)/mod11.adl, --instr-class-vd --debug-mode))
$(eval $(call UADL_safe_template,dlx2-fwd-safe,$(srcdir)/dlx2-fwd.uadl $(IssDir)/mod11.adl, --instr-cache --debug-mode))
$(eval $(call UADL_safe_template,dlx2-fwd-bad-br,$(srcdir)/dlx2-fwd.uadl $(IssDir)/mod11.adl, --instr-cache --debug-mode -D=BAD_BRANCH --detect-deadlock=1000))
$(eval $(call UADL_template,dlx2-bp2,$(srcdir)/dlx2-bp2.uadl $(IssDir)/mod11.adl, -I=$(srcdir) --instr-cache  --debug-mode))
$(eval $(call UADL_safe_template,dlx2-bp2-safe,$(srcdir)/dlx2-bp2.uadl $(IssDir)/mod11.adl, -I=$(srcdir) --instr-cache --debug-mode))
$(eval $(call UADL_safe_template,dlx2-bp3-safe,$(srcdir)/dlx2-bp3.uadl $(IssDir)/mod11.adl, -I=$(srcdir) --instr-cache --debug-mode))
$(eval $(call UADL_safe_template,dlx2-bp2-bad-br,$(srcdir)/dlx2-bp2.uadl $(IssDir)/mod11.adl, -I=$(srcdir) --instr-cache --debug-mode -D=BAD_RFI))
$(eval $(call UADL_template,dlx2-pmr,$(srcdir)/dlx2-pmr.uadl $(IssDir)/mod11.adl))
$(eval $(call UADL_safe_template,dlx2-pmr-safe,$(srcdir)/dlx2-pmr.uadl $(IssDir)/mod11.adl, --instr-cache))
$(eval $(call UADL_safe_template,dlx2-wide-safe,$(srcdir)/dlx2-wide.uadl $(srcdir)/mod21-uadl.adl $(IssDir)/mod21.adl, -D=NO_L2 -I=$(IssDir) -D=WRITE_MODE=WriteBack --instr-cache))
$(eval $(call UADL_template,dlx3,$(srcdir)/dlx3.uadl $(IssDir)/mod1.adl))
$(eval $(call UADL_template,dlx-bp-fetch,$(srcdir)/dlx-bp-fetch.uadl $(srcdir)/mod11-uadl.adl $(IssDir)/mod11.adl,-I=$(IssDir) -I=$(srcdir) ))
$(eval $(call UADL_safe_template,dlx-bp-fetch-safe,$(srcdir)/dlx-bp-fetch.uadl $(srcdir)/mod11-uadl.adl $(IssDir)/mod11.adl,-I=$(IssDir) -I=$(srcdir) ))
$(eval $(call UADL_imm_safe_template,dlx-bp-fetch-safe-ext-mem,$(srcdir)/dlx-bp-fetch.uadl $(srcdir)/mod11-uadl.adl $(IssDir)/mod11.adl, --extern-mem -I=$(IssDir) -I=$(srcdir) ))
$(eval $(call UADL_template,dlx-bp-issue,$(srcdir)/dlx-bp-issue.uadl $(srcdir)/mod11-uadl.adl $(IssDir)/mod11.adl,-I=$(IssDir) --debug-mode))
$(eval $(call UADL_safe_template,dlx-bp-issue-safe,$(srcdir)/dlx-bp-issue.uadl $(srcdir)/mod11-uadl.adl $(IssDir)/mod11.adl,-I=$(IssDir) --debug-mode))
$(eval $(call UADL_template,dlx-z0,$(srcdir)/dlx-z0.uadl $(srcdir)/z0.adl, -I=$(DesDir)))
$(eval $(call UADL_safe_template,dlx-z0-safe,$(srcdir)/dlx-z0.uadl $(srcdir)/z0.adl, -I=$(DesDir)))
$(eval $(call UADL_safe_template,dlx-z0-ext-mem,$(srcdir)/dlx-z0.uadl $(srcdir)/z0.adl, -I=$(DesDir) --extern-mem))
$(eval $(call UADL_safe_template,dlx-zl2-safe,$(srcdir)/dlx-zl2.uadl $(srcdir)/zl2.adl, -I=$(DesDir) --config=$(srcdir)/zl2.ttc))

dlx-zl2-safe.cc: $(srcdir)/zl2.ttc
$(eval $(call UADL_template,dlx-vle,$(srcdir)/dlx-vle.uadl $(IssDir)/mod27.adl,-I=$(srcdir)))
$(eval $(call UADL_template,dlx-vle-ic,$(srcdir)/dlx-vle.uadl $(IssDir)/mod27.adl,-I=$(srcdir) --instr-cache))
$(eval $(call UADL_safe_template,dlx-vle-safe,$(srcdir)/dlx-vle.uadl $(IssDir)/mod27.adl,-I=$(srcdir)))
$(eval $(call UADL_template,dlx-cache-split,$(srcdir)/dlx-cache-split.uadl $(srcdir)/mod21-uadl.adl $(IssDir)/mod21.adl,-I=$(IssDir) -D=NO_L2 -D=WRITE_MODE=WriteBack))
$(eval $(call UADL_safe_template,dlx-cache-split-safe,$(srcdir)/dlx-cache-split.uadl $(srcdir)/mod21-uadl.adl $(IssDir)/mod21.adl,-I=$(IssDir) --tags-only-caches -D=NO_L2 -D=WRITE_MODE=WriteBack --config=$(IssDir)/mod21.ttc))

dlx-cache-split-safe.cc: $(IssDir)/mod21.ttc
$(eval $(call UADL_imm_safe_template,dlx-cache-split-imm-safe,$(srcdir)/dlx-cache-split.uadl $(srcdir)/mod21-uadl.adl $(IssDir)/mod21.adl, -D=NO_L2 -I=$(IssDir) -D=WRITE_MODE=WriteBack --config=$(IssDir)/mod21.ttc))

dlx-cache-split-imm-safe.cc: $(IssDir)/mod21.ttc
$(eval $(call UADL_imm_safe_template,dlx-cache-split-safe-ext-mem,$(srcdir)/dlx-cache-split.uadl $(srcdir)/mod21-uadl.adl $(IssDir)/mod21.adl, --extern-mem -D=NO_L2 -I=$(IssDir) --config=$(IssDir)/mod21.ttc))

dlx-cache-split-imm-ext-mem.cc: $(IssDir)/mod21.ttc
$(eval $(call UADL_safe_template,dlx-cache-split-pc-safe,$(srcdir)/dlx-cache-split-pc.uadl $(srcdir)/mod21-uadl.adl $(IssDir)/mod21.adl, -D=NO_L2 -I=$(IssDir) --config=$(IssDir)/mod21.ttc -D=WRITE_MODE=WriteBack) )

dlx-cache-split-pc-safe.cc: $(IssDir)/mod21.ttc
$(eval $(call UADL_safe_template,dlx-cache-split-pc2-safe,$(srcdir)/dlx-cache-split-pc2.uadl $(srcdir)/mod21-uadl.adl $(IssDir)/mod21.adl, -D=NO_L2 -I=$(IssDir) --config=$(IssDir)/mod21.ttc -D=WRITE_MODE=WriteBack) )

dlx-cache-split-pc2-safe.cc: $(IssDir)/mod21.ttc
$(eval $(call UADL_safe_template,dlx-cache-split-pc3-safe,$(srcdir)/dlx-cache-split-pc3.uadl $(srcdir)/mod21-uadl.adl $(IssDir)/mod21.adl, -D=NO_L2 -I=$(IssDir) --config=$(IssDir)/mod21.ttc -D=WRITE_MODE=WriteBack --detect-deadlock=200) )

dlx-cache-split-pc3-safe.cc: $(IssDir)/mod21.ttc
$(eval $(call UADL_safe_template,dlx-cache-split-pc3-safe-ext-mem,$(srcdir)/dlx-cache-split-pc3.uadl $(srcdir)/mod21-uadl.adl $(IssDir)/mod21.adl, -D=NO_L2 --extern-mem -I=$(IssDir) -I=$(srcdir) ))
$(eval $(call UADL_safe_template,dlx-cache-split-pc4-safe,$(srcdir)/dlx-cache-split-pc4.uadl $(srcdir)/mod21-uadl.adl $(IssDir)/mod21.adl, -D=NO_L2 -I=$(IssDir) --config=$(IssDir)/mod21.ttc -D=WRITE_MODE=WriteBack --detect-deadlock=200) )

dlx-cache-split-pc4-safe.cc: $(IssDir)/mod21.ttc
$(eval $(call UADL_template,dlx-cache-split2,$(srcdir)/dlx-cache-split.uadl $(IssDir)/mod23.adl))
$(eval $(call UADL_safe_template,dlx-cache-split2-safe,$(srcdir)/dlx-cache-split.uadl $(IssDir)/mod23.adl))
$(eval $(call UADL_template,dlx-cache-unified,$(srcdir)/dlx-cache-unified.uadl $(srcdir)/mod23-uadl.adl $(IssDir)/mod23.adl, -I=$(IssDir)))
$(eval $(call UADL_safe_template,dlx-cache-unified-safe,$(srcdir)/dlx-cache-unified.uadl $(srcdir)/mod23-uadl.adl $(IssDir)/mod23.adl, -I=$(IssDir)))
$(eval $(call UADL_template,dlx-l2,$(srcdir)/dlx-l2.uadl $(IssDir)/mod21.adl))
$(eval $(call UADL_safe_template,dlx-l2-safe,$(srcdir)/dlx-l2.uadl $(IssDir)/mod21.adl))
$(eval $(call UADL_safe_template,dlx-stwcx,$(srcdir)/dlx-stwcx.uadl $(srcdir)/mod1-stwcx.adl $(IssDir)/mod1.adl,-I=$(IssDir)))
$(eval $(call UADL_template,dlx-stall,$(srcdir)/dlx-stall.uadl $(IssDir)/mod1.adl,--detect-deadlock=100 ))
$(eval $(call UADL_safe_template,dlx-stall-safe,$(srcdir)/dlx-stall.uadl $(IssDir)/mod1.adl,--detect-deadlock=100 ))
$(eval $(call UADL_template,dlx-all,$(srcdir)/dlx-all.uadl $(IssDir)/mod23.adl))
$(eval $(call UADL_safe_template,dlx-all-safe,$(srcdir)/dlx-all.uadl $(IssDir)/mod23.adl))
$(eval $(call UADL_template,dlx-hrvd,$(srcdir)/dlx-hrvd.uadl $(srcdir)/mod23-hrvd.adl $(IssDir)/mod23.adl,-I=$(IssDir)))
$(eval $(call UADL_safe_template,dlx-hrvd-safe,$(srcdir)/dlx-hrvd.uadl $(srcdir)/mod23-hrvd.adl $(IssDir)/mod23.adl,-I=$(IssDir)))
$(eval $(call UADL_template,dlx-delay,$(srcdir)/dlx-delay.uadl $(IssDir)/mod1.adl))
$(eval $(call UADL_safe_template,dlx-delay-safe,$(srcdir)/dlx-delay.uadl $(IssDir)/mod1.adl))
$(eval $(call UADL_template,dlx-bubble,$(srcdir)/dlx-bubble.uadl $(IssDir)/mod1.adl))
$(eval $(call UADL_safe_template,dlx-bubble-safe,$(srcdir)/dlx-bubble.uadl $(IssDir)/mod1.adl))
$(eval $(call UADL_template,dlx-mt1,$(srcdir)/dlx-mt1.uadl $(srcdir)/mod13-mt1.adl, -I=$(IssDir)))

dlx-mt1.cc: $(IssDir)/mod13.adl
$(eval $(call UADL_safe_template,dlx-mt1-safe,$(srcdir)/dlx-mt1.uadl $(srcdir)/mod13-mt1.adl, -I=$(IssDir) --detect-deadlock=200 --config=$(IssDir)/mod13.ttc))

dlx-mt1-safe.cc: $(IssDir)/mod13.adl
$(eval $(call UADL_imm_safe_template,dlx-mt1-imm-safe,$(srcdir)/dlx-mt1.uadl $(srcdir)/mod13-mt1.adl, -I=$(IssDir) --detect-deadlock=200 --config=$(IssDir)/mod13.ttc))

dlx-mt1-imm-safe.cc: $(IssDir)/mod13.adl
$(eval $(call UADL_template,dlx-mt2,$(srcdir)/dlx-mt2.uadl $(srcdir)/mod13-mt2.adl, -I=$(IssDir)))
$(eval $(call UADL_template,dlx-mt3,$(srcdir)/dlx-mt3.uadl $(srcdir)/mod13-mt3.adl, -I=$(IssDir)))

dlx-sysc-thread.cc: $(srcdir)/dlx.uadl $(IssDir)/mod1.adl $(PARSER)
	$(UADLBUILD) --systemc=thread --extern-mem -o $(patsubst %.cc,%,$@)

dlx-sysc-method.cc: $(srcdir)/dlx.uadl $(IssDir)/mod1.adl $(PARSER)
	$(UADLBUILD) --systemc=method --extern-mem -o $(patsubst %.cc,%,$@)

dlx-sysc-base.cc: $(srcdir)/dlx.uadl $(IssDir)/mod1.adl $(PARSER)
	$(UADLBUILD) --systemc --extern-mem --namespace=dlx --no-rnumber --no-syscall-enabled -o $(patsubst %.cc,%,$@)

dlx-sysc-pc2.cc: $(srcdir)/dlx-cache-split-pc2.uadl $(srcdir)/mod21-uadl.adl $(IssDir)/mod21.adl $(PARSER)
	$(UADLBUILD) -I=$(IssDir) --systemc=method --extern-mem -D=NO_L2  -D=WRITE_MODE=WriteBack -o=dlx-sysc-pc2

dlx-sysc-mt1.cc: $(srcdir)/dlx-mt1.uadl $(srcdir)/mod13-mt1.adl $(IssDir)/mod13.adl $(PARSER)
	$(UADLBUILD) -I=$(IssDir) --systemc=method --extern-mem -D=NO_L2  -D=WRITE_MODE=WriteBack -o=dlx-sysc-mt1

.SECONDARY: $(MODEL_SRCS) $(MODEL_INCS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
