#
# This makes sure that we cleanup memory transactions for safe-mode models when
# an instruction is discarded, such as due to an exception occurring.
#
= asm

	addi r1,r1,1
L1:
	stmw r28,0x1ff8(r0) # Will generate an exception on the second half of the misaligned store.
	bdnz L1
	addi r1,r1,1
	.long 0x0
	addi r2,r2,1
	mfspr r10,SRR0
	addi r10,r10,4
	mtspr SRR0,r10
	rfi
	
= /asm

= mdopts

instr-offset: 0x10000

= /mdopts

CORE n=:P

# <GEN>
MD n=Mem ra=0x00010000 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00010004 d=0xBF801FF8	#	stmw r28,0x1ff8(r0) # Will generate an exception on the second half of the misaligned store.
MD n=Mem ra=0x00010008 d=0x4200FFFC	#	bdnz L1
MD n=Mem ra=0x0001000c d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00010010 d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00010014 d=0x38420001	#	addi r2,r2,1
MD n=Mem ra=0x00010018 d=0x7D5A02A6	#	mfspr r10,SRR0
MD n=Mem ra=0x0001001c d=0x394A0004	#	addi r10,r10,4
MD n=Mem ra=0x00010020 d=0x7D5A03A6	#	mtspr SRR0,r10
MD n=Mem ra=0x00010024 d=0x4C000064	#	rfi
# </GEN>

RD n=NIA      d=0x0
RD n=CTR      d=100
RD n=IVOR6    d=0x14
RD n=IVOR7    d=0x14

RD n=GPR i=28 d=1
RD n=GPR i=29 d=2
RD n=GPR i=30 d=3
RD n=GPR i=31 d=4

# ea=0x0000 ra=0x10000
TD n=TlbCam set=0 way=0 V=1 TID=0 SIZE=1 TS=0 RPN=0x40 WIMG=0x1 SX=1 SR=1 SW=1 EPN=0

# ea=0x1000 ra=0xA1000.  
TD n=TlbCam set=0 way=1 V=1 TID=0 SIZE=1 TS=0 RPN=0x284 WIMG=0x2 SX=1 SR=1 SW=1 EPN=0x4

# ea=0x2000 ra=0xA2000.  No read or write access.
TD n=TlbCam set=0 way=2 V=1 TID=0 SIZE=1 TS=0 RPN=0x288 WIMG=0x2 SX=1 SR=0 SW=0 EPN=0x8

MD n=Mem ra=0x00000000000a1ff8 d=0x00000000
MD n=Mem ra=0x00000000000a1ffc d=0x00000000
MD n=Mem ra=0x00000000000a2000 d=0x00000000
MD n=Mem ra=0x00000000000a2004 d=0x00000000

RESULTS

RD n=GPR i=1 d=0x00000002
RD n=GPR i=2 d=0x00000064
