#
# Tests simultaneous issue when instructions have a register
# (XER) that's used as a partial source/target, but with non-overlapping
# bits.
#
= asm

  addic  r1,r1,1
  addic. r2,r2,2
  addic  r3,r3,3
  addic. r4,r4,4
  
= /asm

CORE n=:P

# <GEN>
MD n=Mem ra=0x00000000 d=0x30210001	#	addic  r1,r1,1
MD n=Mem ra=0x00000004 d=0x34420002	#	addic. r2,r2,2
MD n=Mem ra=0x00000008 d=0x30630003	#	addic  r3,r3,3
MD n=Mem ra=0x0000000c d=0x34840004	#	addic. r4,r4,4
# </GEN>

RD n=NIA d=0x0

TRACE


I ea=0x0 id=1
INSTR op=0x30210001					asm="addic r1,r1,1"
ITIME t=1
R n=GPR i=1 d=0x00000001
R n=XER d=0x00000000
CTIME t=5

I ea=0x4 id=2
INSTR op=0x34420002					asm="addic. r2,r2,2"
ITIME t=1
R n=CR d=0x40000000
R n=GPR i=2 d=0x00000002
R n=XER d=0x00000000
CTIME t=5

I ea=0x8 id=3
INSTR op=0x30630003					asm="addic r3,r3,3"
ITIME t=2
R n=GPR i=3 d=0x00000003
R n=XER d=0x00000000
CTIME t=6

I ea=0xc id=4
INSTR op=0x34840004					asm="addic. r4,r4,4"
ITIME t=2
R n=CR d=0x40000000
R n=GPR i=4 d=0x00000004
R n=XER d=0x00000000
CTIME t=6

I ea=0x10 id=5
INSTR op=0x00000000					asm="halt "
ITIME t=3
CTIME t=7

RESULTS

RD n=GPR i=1 d=1
RD n=GPR i=2 d=2
RD n=GPR i=3 d=3
RD n=GPR i=4 d=4
