#
# Very simple fetch-exception test.
#
= asm

	addi r1,r1,1  # Will cause a fetch exception.
	.long 0x0
	addi r2,r2,1  # Handler code.
	addi r2,r2,1				
	
= /asm

= mdopts
	instr-offset: 0xff8
= /mdopts

CORE n=:P

# <GEN>
MD n=Mem ra=0x00000ff8 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000ffc d=0x00000000	#	.long 0x0
MD n=Mem ra=0x00001000 d=0x38420001	#	addi r2,r2,1
MD n=Mem ra=0x00001004 d=0x38420001	#	addi r2,r2,1				
# </GEN>

RD n=NIA     d=0x0ff8
RD n=IVOR6   d=0x1000
RD n=IVOR7   d=0x1000

# ea=0x0000 ra=0x00000
TD n=TlbCam set=0 way=0 V=1 TID=0 SIZE=1 TS=0 EPN=0 RPN=0x0 WIMG=0x1 SX=0 SR=1 SW=1
TD n=TlbCam set=0 way=1 V=1 TID=0 SIZE=1 TS=0 EPN=4 RPN=0x4 WIMG=0x1 SX=1 SR=1 SW=1

TRACE

I ea=0xff8 id=1
T n=TlbCam t=instr set=0 way=0 ea=0xff8 ra=0xff8  E=0x0 EPN=0x0 RPN=0x0 SIZE=0x1 SR=0x1 SW=0x1 SX=0x0 TID=0x0 TS=0x0 UR=0x0 UW=0x0 UX=0x0 V=0x1 WIMG=0x1
E n=ProtectionFault
R n=SRR0 d=0x00000ff8
R n=SRR1 d=0x00000000
R n=MSR d=0x00000000
R n=ESR d=0x00000000
B taken=1 ea=0x1000

I ea=0x1000 id=2
T n=TlbCam t=instr set=0 way=1 ea=0x1000 ra=0x1000  E=0x0 EPN=0x4 RPN=0x4 SIZE=0x1 SR=0x1 SW=0x1 SX=0x1 TID=0x0 TS=0x0 UR=0x0 UW=0x0 UX=0x0 V=0x1 WIMG=0x1
M n=Mem t=ifetch ea=0x1000 ra=0x1000 d=0x38420001
INSTR op=0x38420001					asm="addi r2,r2,1"
R n=GPR i=2 d=0x00000001

I ea=0x1004 id=3
T n=TlbCam t=instr set=0 way=1 ea=0x1004 ra=0x1004  E=0x0 EPN=0x4 RPN=0x4 SIZE=0x1 SR=0x1 SW=0x1 SX=0x1 TID=0x0 TS=0x0 UR=0x0 UW=0x0 UX=0x0 V=0x1 WIMG=0x1
M n=Mem t=ifetch ea=0x1004 ra=0x1004 d=0x38420001
INSTR op=0x38420001					asm="addi r2,r2,1"
R n=GPR i=2 d=0x00000002

I ea=0x1008 id=4
T n=TlbCam t=instr set=0 way=1 ea=0x1008 ra=0x1008  E=0x0 EPN=0x4 RPN=0x4 SIZE=0x1 SR=0x1 SW=0x1 SX=0x1 TID=0x0 TS=0x0 UR=0x0 UW=0x0 UX=0x0 V=0x1 WIMG=0x1
M n=Mem t=ifetch ea=0x1008 ra=0x1008 d=0x00000000
INSTR op=0x00000000					asm="halt "

RESULTS

RD n=GPR i=1 d=0
RD n=GPR i=2 d=2
