#
# Test that we will handle streaming when a linefill isn't previously valid,
# but then will have a lock cycle for cache maintenance one cycle after
# a linefill op begins.
#
= asm

  addi r1,r1,1
  addi r2,r2,1
  addi r3,r3,1
  addi r4,r4,1
  addi r5,r5,1
  addi r6,r6,1
  addi r7,r7,1
  addi r8,r8,1
  addi r9,r9,1
  addi r10,r10,1
  addi r11,r11,1
  addi r12,r12,1
  addi r13,r13,1
  addi r14,r14,1
  addi r15,r15,1
  addi r1,r1,1
  addi r2,r2,1
  addi r3,r3,1
  addi r4,r4,1
  addi r5,r5,1
  addi r6,r6,1
  addi r7,r7,1
  addi r8,r8,1
  addi r9,r9,1
  addi r10,r10,1
  addi r11,r11,1
  addi r12,r12,1
  addi r13,r13,1
  addi r14,r14,1
  addi r15,r15,1
  
= /asm

CORE n=:P

# <GEN>
MD n=Mem ra=0x00000000 d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000004 d=0x38420001	#	addi r2,r2,1
MD n=Mem ra=0x00000008 d=0x38630001	#	addi r3,r3,1
MD n=Mem ra=0x0000000c d=0x38840001	#	addi r4,r4,1
MD n=Mem ra=0x00000010 d=0x38A50001	#	addi r5,r5,1
MD n=Mem ra=0x00000014 d=0x38C60001	#	addi r6,r6,1
MD n=Mem ra=0x00000018 d=0x38E70001	#	addi r7,r7,1
MD n=Mem ra=0x0000001c d=0x39080001	#	addi r8,r8,1
MD n=Mem ra=0x00000020 d=0x39290001	#	addi r9,r9,1
MD n=Mem ra=0x00000024 d=0x394A0001	#	addi r10,r10,1
MD n=Mem ra=0x00000028 d=0x396B0001	#	addi r11,r11,1
MD n=Mem ra=0x0000002c d=0x398C0001	#	addi r12,r12,1
MD n=Mem ra=0x00000030 d=0x39AD0001	#	addi r13,r13,1
MD n=Mem ra=0x00000034 d=0x39CE0001	#	addi r14,r14,1
MD n=Mem ra=0x00000038 d=0x39EF0001	#	addi r15,r15,1
MD n=Mem ra=0x0000003c d=0x38210001	#	addi r1,r1,1
MD n=Mem ra=0x00000040 d=0x38420001	#	addi r2,r2,1
MD n=Mem ra=0x00000044 d=0x38630001	#	addi r3,r3,1
MD n=Mem ra=0x00000048 d=0x38840001	#	addi r4,r4,1
MD n=Mem ra=0x0000004c d=0x38A50001	#	addi r5,r5,1
MD n=Mem ra=0x00000050 d=0x38C60001	#	addi r6,r6,1
MD n=Mem ra=0x00000054 d=0x38E70001	#	addi r7,r7,1
MD n=Mem ra=0x00000058 d=0x39080001	#	addi r8,r8,1
MD n=Mem ra=0x0000005c d=0x39290001	#	addi r9,r9,1
MD n=Mem ra=0x00000060 d=0x394A0001	#	addi r10,r10,1
MD n=Mem ra=0x00000064 d=0x396B0001	#	addi r11,r11,1
MD n=Mem ra=0x00000068 d=0x398C0001	#	addi r12,r12,1
MD n=Mem ra=0x0000006c d=0x39AD0001	#	addi r13,r13,1
MD n=Mem ra=0x00000070 d=0x39CE0001	#	addi r14,r14,1
MD n=Mem ra=0x00000074 d=0x39EF0001	#	addi r15,r15,1
# </GEN>

RD n=NIA d=0x0

RESULTS
